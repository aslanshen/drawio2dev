(function () {
	function m3244bae88deb50f244d7d7c96123360() {
		mxActor.call(this);
	};
	mxUtils.extend(m3244bae88deb50f244d7d7c96123360, mxActor);
	m3244bae88deb50f244d7d7c96123360.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 65;
		h1 = 64;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(64.50 * skx, 17.00* sky);
		c.arcTo(28.80 * skx, 28.80 * sky, 0, 0, 1, 58.40* skx, 35.00* sky);
		c.arcTo(50.20 * skx, 50.20 * sky, 0, 0, 1, 53.20* skx, 40.10* sky);
		c.curveTo(53.00 * skx, 40.40 * sky, 52.60 * skx, 40.60 * sky, 52.50 * skx, 41.00 * sky);
		c.arcTo(23.70 * skx, 23.70 * sky, 0, 0, 1, 45.40* skx, 51.50* sky);
		c.curveTo(41.40 * skx, 55.00 * sky, 37.00 * skx, 57.80 * sky, 31.70 * skx, 58.90 * sky);
		c.arcTo(16.50 * skx, 16.50 * sky, 0, 0, 0, 26.20* skx, 61.20* sky);
		c.arcTo(21.30 * skx, 21.30 * sky, 0, 0, 1, 11.60* skx, 64.10* sky);
		c.arcTo(23.10 * skx, 23.10 * sky, 0, 0, 1, 1.80* skx, 60.90* sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 1, 0.50* skx, 59.80* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, -0.00* skx, 58.40* sky);
		c.curveTo(1.00 * skx, 53.80 * sky, 2.60 * skx, 49.40 * sky, 5.80 * skx, 45.80 * sky);
		c.arcTo(19.60 * skx, 19.60 * sky, 0, 0, 1, 17.20* skx, 39.60* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 18.60* skx, 38.60* sky);
		c.arcTo(27.90 * skx, 27.90 * sky, 0, 0, 1, 23.30* skx, 31.10* sky);
		c.arcTo(21.60 * skx, 21.60 * sky, 0, 0, 1, 35.20* skx, 24.40* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 36.80* skx, 23.10* sky);
		c.curveTo(38.00 * skx, 20.80 * sky, 39.10 * skx, 18.40 * sky, 40.50 * skx, 16.20 * sky);
		c.curveTo(41.9 * skx, 14.0 * sky, 45.50 * skx, 10.90 * sky, 48.80 * skx, 9.20 * sky);
		c.lineTo(51.10* skx,8.10* sky);
		c.arcTo(9.00 * skx, 9.00 * sky, 0, 0, 0, 56.30* skx, 2.20* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 1, 56.90* skx, 1.00* sky);
		c.curveTo(57.20 * skx, 0.60 * sky, 57.60 * skx, -0.00 * sky, 58.10 * skx, -0.00 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 59.40* skx, 0.70* sky);
		c.arcTo(28.60 * skx, 28.60 * sky, 0, 0, 1, 64.10* skx, 12.60* sky);
		c.curveTo(64.30 * skx, 14.10 * sky, 64.40 * skx, 15.50 * sky, 64.50 * skx, 17.00 * sky);
		c.close();
		c.moveTo(42.60 * skx, 39.00* sky);
		c.arcTo(10.30 * skx, 10.30 * sky, 0, 0, 0, 42.50* skx, 37.20* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 36.80* skx, 32.70* sky);
		c.curveTo(32.20 * skx, 33.30 * sky, 27.80 * skx, 37.70 * sky, 27.00 * skx, 42.30 * sky);
		c.curveTo(26.50 * skx, 45.20 * sky, 27.50 * skx, 47.30 * sky, 29.70 * skx, 48.40 * sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 0, 39.80* skx, 46.50* sky);
		c.arcTo(11.60 * skx, 11.60 * sky, 0, 0, 0, 42.60* skx, 39.00* sky);
		c.close();
		c.moveTo(57.30 * skx, 20.50* sky);
		c.arcTo(16.70 * skx, 16.70 * sky, 0, 0, 0, 56.70* skx, 18.10* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 52.40* skx, 15.70* sky);
		c.curveTo(48.40 * skx, 16.60 * sky, 44.90 * skx, 21.10 * sky, 45.10 * skx, 25.20 * sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 0, 48.20* skx, 29.00* sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 0, 53.60* skx, 28.20* sky);
		c.curveTo(56.30 * skx, 26.50 * sky, 57.00 * skx, 23.80 * sky, 57.30 * skx, 20.50 * sky);
		c.close();
		c.moveTo(14.40 * skx, 58.00* sky);
		c.lineTo(17.90* skx,57.50* sky);
		c.curveTo(21.90 * skx, 56.60 * sky, 24.10 * skx, 53.20 * sky, 22.90 * skx, 49.50 * sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 20.30* skx, 47.00* sky);
		c.curveTo(16.10 * skx, 45.80 * sky, 10.70 * skx, 48.70 * sky, 9.30 * skx, 52.90 * sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 11.30* skx, 57.20* sky);
		c.arcTo(28.10 * skx, 28.10 * sky, 0, 0, 0, 14.40* skx, 58.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m3244bae88deb50f244d7d7c96123360', m3244bae88deb50f244d7d7c96123360);
	m3244bae88deb50f244d7d7c96123360.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m4494e1f483b85f1f0708a550a417b66() {
		mxActor.call(this);
	};
	mxUtils.extend(m4494e1f483b85f1f0708a550a417b66, mxActor);
	m4494e1f483b85f1f0708a550a417b66.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 65;
		h1 = 64;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(14.50 * skx, 64.40* sky);
		c.arcTo(26.90 * skx, 26.90 * sky, 0, 0, 1, 2.70* skx, 61.60* sky);
		c.curveTo(-0.20 * skx, 60.00 * sky, -0.40 * skx, 59.60 * sky, 0.50 * skx, 56.40 * sky);
		c.arcTo(23.70 * skx, 23.70 * sky, 0, 0, 1, 7.90* skx, 44.00* sky);
		c.arcTo(20.30 * skx, 20.30 * sky, 0, 0, 1, 17.30* skx, 39.70* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 18.40* skx, 38.90* sky);
		c.curveTo(19.30 * skx, 37.40 * sky, 20.10 * skx, 35.70 * sky, 21.00 * skx, 34.10 * sky);
		c.arcTo(22.20 * skx, 22.20 * sky, 0, 0, 1, 35.10* skx, 24.50* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 36.80* skx, 23.10* sky);
		c.curveTo(38.20 * skx, 20.50 * sky, 39.50 * skx, 17.80 * sky, 41.10 * skx, 15.40 * sky);
		c.curveTo(42.7 * skx, 13.0 * sky, 46.40 * skx, 10.50 * sky, 49.70 * skx, 8.80 * sky);
		c.lineTo(50.50* skx,8.40* sky);
		c.curveTo(53.60 * skx, 7.30 * sky, 55.40 * skx, 5.00 * sky, 56.50 * skx, 2.00 * sky);
		c.curveTo(56.80 * skx, 1.20 * sky, 56.90 * skx, 0.10 * sky, 58.10 * skx, 0.00 * sky);
		c.curveTo(59.300000000000004 * skx, -0.1 * sky, 59.50 * skx, 0.90 * sky, 60.00 * skx, 1.60 * sky);
		c.curveTo(68.20 * skx, 14.50 * sky, 64.60 * skx, 32.00 * sky, 53.10 * skx, 40.20 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 52.50* skx, 41.00* sky);
		c.curveTo(51.10 * skx, 45.80 * sky, 48.00 * skx, 49.50 * sky, 44.20 * skx, 52.60 * sky);
		c.curveTo(40.400000000000006 * skx, 55.7 * sky, 35.90 * skx, 58.50 * sky, 30.70 * skx, 59.20 * sky);
		c.arcTo(9.00 * skx, 9.00 * sky, 0, 0, 0, 26.80* skx, 60.80* sky);
		c.arcTo(20.40 * skx, 20.40 * sky, 0, 0, 1, 14.50* skx, 64.40* sky);
		c.close();
		c.moveTo(58.50 * skx, 4.50* sky);
		c.lineTo(58.20 * skx,4.50* sky);
		c.curveTo(58.10 * skx, 4.70 * sky, 57.90 * skx, 4.90 * sky, 57.90 * skx, 5.10 * sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 1, 52.00* skx, 10.70* sky);
		c.lineTo(50.30* skx,11.60* sky);
		c.arcTo(19.50 * skx, 19.50 * sky, 0, 0, 0, 40.40* skx, 21.90* sky);
		c.lineTo(39.20* skx,24.50* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 1, 36.00* skx, 27.10* sky);
		c.arcTo(18.50 * skx, 18.50 * sky, 0, 0, 0, 24.00* skx, 34.70* sky);
		c.arcTo(58.20 * skx, 58.20 * sky, 0, 0, 0, 20.60* skx, 40.70* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 18.20* skx, 42.30* sky);
		c.arcTo(15.50 * skx, 15.50 * sky, 0, 0, 0, 9.70* skx, 45.90* sky);
		c.curveTo(6.00 * skx, 49.10 * sky, 4.20 * skx, 53.30 * sky, 3.10 * skx, 57.90 * sky);
		c.curveTo(3.00 * skx, 58.10 * sky, 3.30 * skx, 58.60 * sky, 3.50 * skx, 58.70 * sky);
		c.arcTo(24.90 * skx, 24.90 * sky, 0, 0, 0, 8.60* skx, 60.80* sky);
		c.curveTo(15.30 * skx, 62.50 * sky, 21.60 * skx, 61.90 * sky, 27.10 * skx, 57.20 * sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 28.20* skx, 56.80* sky);
		c.arcTo(17.40 * skx, 17.40 * sky, 0, 0, 0, 35.60* skx, 54.80* sky);
		c.curveTo(41.30 * skx, 52.10 * sky, 46.10 * skx, 48.40 * sky, 48.80 * skx, 42.70 * sky);
		c.arcTo(21.50 * skx, 21.50 * sky, 0, 0, 1, 53.70* skx, 36.10* sky);
		c.curveTo(61.00 * skx, 29.00 * sky, 63.00 * skx, 20.20 * sky, 60.60 * skx, 10.40 * sky);
		c.arcTo(41.40 * skx, 41.40 * sky, 0, 0, 0, 58.50* skx, 4.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(44.00 * skx, 38.80* sky);
		c.arcTo(13.80 * skx, 13.80 * sky, 0, 0, 1, 41.90* skx, 46.00* sky);
		c.arcTo(10.30 * skx, 10.30 * sky, 0, 0, 1, 29.80* skx, 50.00* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 25.60* skx, 42.60* sky);
		c.arcTo(13.70 * skx, 13.70 * sky, 0, 0, 1, 35.70* skx, 31.60* sky);
		c.curveTo(40.00 * skx, 30.60 * sky, 43.50 * skx, 33.10 * sky, 43.90 * skx, 37.60 * sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 44.00* skx, 38.80* sky);
		c.close();
		c.moveTo(41.50 * skx, 38.90* sky);
		c.lineTo(41.30 * skx,38.90* sky);
		c.curveTo(41.30 * skx, 38.60 * sky, 41.20 * skx, 38.20 * sky, 41.20 * skx, 37.80 * sky);
		c.curveTo(40.90 * skx, 35.00 * sky, 39.20 * skx, 33.70 * sky, 36.40 * skx, 34.30 * sky);
		c.curveTo(33.599999999999994 * skx, 34.89999999999999 * sky, 28.70 * skx, 39.30 * sky, 28.20 * skx, 43.20 * sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 0, 31.10* skx, 47.70* sky);
		c.arcTo(7.40 * skx, 7.40 * sky, 0, 0, 0, 40.10* skx, 43.80* sky);
		c.arcTo(26.40 * skx, 26.40 * sky, 0, 0, 0, 41.50* skx, 38.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(43.70 * skx, 24.80* sky);
		c.arcTo(11.60 * skx, 11.60 * sky, 0, 0, 1, 51.20* skx, 14.60* sky);
		c.curveTo(54.80 * skx, 13.50 * sky, 57.70 * skx, 15.30 * sky, 58.40 * skx, 19.10 * sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 1, 57.60* skx, 25.60* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 1, 48.10* skx, 30.50* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 1, 43.70* skx, 24.80* sky);
		c.close();
		c.moveTo(55.90 * skx, 20.90* sky);
		c.arcTo(13.50 * skx, 13.50 * sky, 0, 0, 0, 55.60* skx, 19.10* sky);
		c.curveTo(55.10 * skx, 17.30 * sky, 54.00 * skx, 16.60 * sky, 52.20 * skx, 17.20 * sky);
		c.arcTo(8.30 * skx, 8.30 * sky, 0, 0, 0, 46.80* skx, 22.90* sky);
		c.curveTo(46.40 * skx, 24.30 * sky, 46.00 * skx, 25.80 * sky, 47.10 * skx, 27.00 * sky);
		c.curveTo(48.2 * skx, 28.2 * sky, 50.00 * skx, 28.10 * sky, 51.60 * skx, 27.70 * sky);
		c.lineTo(52.60* skx,27.30* sky);
		c.curveTo(55.10 * skx, 26.00 * sky, 55.70 * skx, 23.60 * sky, 55.90 * skx, 20.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(14.50 * skx, 59.40* sky);
		c.arcTo(22.90 * skx, 22.90 * sky, 0, 0, 1, 11.10* skx, 58.70* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 1, 8.00* skx, 52.80* sky);
		c.curveTo(9.10 * skx, 49.00 * sky, 12.00 * skx, 46.80 * sky, 15.70 * skx, 45.90 * sky);
		c.arcTo(14.50 * skx, 14.50 * sky, 0, 0, 1, 19.20* skx, 45.50* sky);
		c.curveTo(22.80 * skx, 45.80 * sky, 24.90 * skx, 48.40 * sky, 24.60 * skx, 52.00 * sky);
		c.curveTo(24.300000000000004 * skx, 55.6 * sky, 22.00 * skx, 58.10 * sky, 18.10 * skx, 58.90 * sky);
		c.arcTo(31.30 * skx, 31.30 * sky, 0, 0, 1, 14.50* skx, 59.40* sky);
		c.close();
		c.moveTo(15.00 * skx, 56.80* sky);
		c.curveTo(16.30 * skx, 56.40 * sky, 17.70 * skx, 56.20 * sky, 19.00 * skx, 55.70 * sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 21.90* skx, 51.50* sky);
		c.curveTo(22.00 * skx, 49.40 * sky, 20.90 * skx, 48.20 * sky, 18.70 * skx, 48.20 * sky);
		c.arcTo(7.50 * skx, 7.50 * sky, 0, 0, 0, 16.60* skx, 48.40* sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 0, 10.70* skx, 53.10* sky);
		c.curveTo(10.00 * skx, 54.60 * sky, 10.50 * skx, 55.70 * sky, 12.10 * skx, 56.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m4494e1f483b85f1f0708a550a417b66', m4494e1f483b85f1f0708a550a417b66);
	m4494e1f483b85f1f0708a550a417b66.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m30fab2a281cd2c738769983a755b0f1() {
		mxActor.call(this);
	};
	mxUtils.extend(m30fab2a281cd2c738769983a755b0f1, mxActor);
	m30fab2a281cd2c738769983a755b0f1.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 122;
		h1 = 111;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(50.90 * skx, 27.00* sky);
		c.curveTo(59.00 * skx, 31.10 * sky, 64.80 * skx, 15.90 * sky, 69.00 * skx, 10.10 * sky);
		c.curveTo(73.2 * skx, 4.299999999999999 * sky, 90.90 * skx, -2.80 * sky, 89.70 * skx, 2.40 * sky);
		c.curveTo(88.00 * skx, 10.30 * sky, 87.30 * skx, 14.70 * sky, 88.80 * skx, 21.00 * sky);
		c.curveTo(90.3 * skx, 27.3 * sky, 73.50 * skx, 38.60 * sky, 78.80 * skx, 41.80 * sky);
		c.curveTo(84.1 * skx, 44.99999999999999 * sky, 111.90 * skx, 40.20 * sky, 113.00 * skx, 29.70 * sky);
		c.curveTo(114.1 * skx, 19.199999999999996 * sky, 121.90 * skx, 22.80 * sky, 121.40 * skx, 33.30 * sky);
		c.curveTo(120.9 * skx, 43.8 * sky, 122.40 * skx, 51.70 * sky, 113.00 * skx, 54.90 * sky);
		c.curveTo(103.6 * skx, 58.099999999999994 * sky, 85.60 * skx, 55.40 * sky, 87.20 * skx, 60.70 * sky);
		c.curveTo(88.80000000000001 * skx, 66.0 * sky, 110.60 * skx, 61.20 * sky, 109.60 * skx, 72.20 * sky);
		c.curveTo(108.6 * skx, 83.2 * sky, 80.90 * skx, 77.00 * sky, 75.10 * skx, 78.60 * sky);
		c.curveTo(69.29999999999998 * skx, 80.19999999999999 * sky, 96.30 * skx, 89.90 * sky, 87.40 * skx, 98.80 * sky);
		c.curveTo(78.50000000000001 * skx, 107.69999999999999 * sky, 66.10 * skx, 82.20 * sky, 61.90 * skx, 81.70 * sky);
		c.curveTo(57.7 * skx, 81.2 * sky, 65.60 * skx, 95.90 * sky, 56.20 * skx, 105.90 * sky);
		c.curveTo(46.80000000000001 * skx, 115.9 * sky, 48.80 * skx, 107.00 * sky, 43.60 * skx, 103.80 * sky);
		c.curveTo(38.400000000000006 * skx, 100.6 * sky, 30.40 * skx, 114.80 * sky, 30.40 * skx, 105.40 * sky);
		c.curveTo(30.4 * skx, 96.00000000000001 * sky, 49.30 * skx, 83.80 * sky, 48.30 * skx, 77.50 * sky);
		c.curveTo(47.3 * skx, 71.2 * sky, 44.60 * skx, 72.00 * sky, 40.30 * skx, 74.60 * sky);
		c.curveTo(35.99999999999999 * skx, 77.19999999999999 * sky, 19.90 * skx, 97.00 * sky, 10.40 * skx, 90.70 * sky);
		c.curveTo(0.9000000000000021 * skx, 84.4 * sky, 24.10 * skx, 69.10 * sky, 25.20 * skx, 62.80 * sky);
		c.curveTo(26.299999999999997 * skx, 56.5 * sky, -6.50 * skx, 72.80 * sky, 1.90 * skx, 53.30 * sky);
		c.curveTo(8.60 * skx, 37.60 * sky, 30.50 * skx, 50.80 * sky, 32.00 * skx, 38.10 * sky);
		c.curveTo(34.40 * skx, 16.90 * sky, 4.10 * skx, 8.10 * sky, 19.40 * skx, 3.90 * sky);
		c.curveTo(34.699999999999996 * skx, -0.2999999999999998 * sky, 45.70 * skx, 24.40 * sky, 50.90 * skx, 27.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(50.00 * skx, 30.20* sky);
		c.curveTo(57.40 * skx, 33.90 * sky, 65.60 * skx, 19.20 * sky, 69.50 * skx, 13.90 * sky);
		c.curveTo(73.4 * skx, 8.600000000000001 * sky, 88.30 * skx, 2.20 * sky, 87.30 * skx, 7.00 * sky);
		c.curveTo(85.70 * skx, 14.20 * sky, 82.50 * skx, 16.20 * sky, 84.00 * skx, 21.90 * sky);
		c.curveTo(85.5 * skx, 27.599999999999998 * sky, 70.90 * skx, 40.10 * sky, 75.70 * skx, 42.90 * sky);
		c.curveTo(80.5 * skx, 45.699999999999996 * sky, 112.40 * skx, 44.30 * sky, 113.40 * skx, 34.70 * sky);
		c.curveTo(114.4 * skx, 25.10000000000001 * sky, 119.30 * skx, 26.10 * sky, 118.90 * skx, 35.70 * sky);
		c.curveTo(118.50000000000001 * skx, 45.300000000000004 * sky, 116.00 * skx, 49.10 * sky, 107.30 * skx, 52.00 * sky);
		c.curveTo(98.6 * skx, 54.9 * sky, 81.00 * skx, 56.80 * sky, 81.80 * skx, 61.70 * sky);
		c.curveTo(82.6 * skx, 66.60000000000001 * sky, 105.40 * skx, 62.50 * sky, 105.40 * skx, 72.70 * sky);
		c.curveTo(105.40 * skx, 79.00 * sky, 76.80 * skx, 75.40 * sky, 71.50 * skx, 76.80 * sky);
		c.curveTo(66.2 * skx, 78.19999999999999 * sky, 89.30 * skx, 91.40 * sky, 84.90 * skx, 96.00 * sky);
		c.curveTo(77.80 * skx, 103.40 * sky, 65.50 * skx, 78.60 * sky, 61.60 * skx, 78.10 * sky);
		c.curveTo(57.7 * skx, 77.6 * sky, 58.50 * skx, 94.80 * sky, 56.60 * skx, 101.60 * sky);
		c.curveTo(53.10 * skx, 113.70 * sky, 49.90 * skx, 102.50 * sky, 45.10 * skx, 99.60 * sky);
		c.curveTo(40.300000000000004 * skx, 96.69999999999999 * sky, 36.90 * skx, 108.70 * sky, 36.90 * skx, 100.00 * sky);
		c.curveTo(36.9 * skx, 91.3 * sky, 52.20 * skx, 83.00 * sky, 49.40 * skx, 75.60 * sky);
		c.curveTo(47.30 * skx, 70.10 * sky, 42.70 * skx, 68.50 * sky, 38.90 * skx, 70.90 * sky);
		c.curveTo(35.099999999999994 * skx, 73.30000000000001 * sky, 23.40 * skx, 93.40 * sky, 14.80 * skx, 87.60 * sky);
		c.curveTo(6.200000000000003 * skx, 81.79999999999998 * sky, 27.30 * skx, 67.90 * sky, 28.20 * skx, 62.20 * sky);
		c.curveTo(29.099999999999998 * skx, 56.5 * sky, -0.90 * skx, 63.90 * sky, 7.00 * skx, 53.50 * sky);
		c.curveTo(16.40 * skx, 41.10 * sky, 33.40 * skx, 51.60 * sky, 34.70 * skx, 40.00 * sky);
		c.curveTo(37.00 * skx, 20.60 * sky, 10.90 * skx, 9.10 * sky, 21.30 * skx, 6.30 * sky);
		c.curveTo(31.700000000000003 * skx, 3.5 * sky, 45.20 * skx, 27.80 * sky, 50.00 * skx, 30.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(60.20 * skx, 24.30* sky);
		c.lineTo(59.50* skx,25.10* sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 1, 57.00* skx, 26.90* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 54.90* skx, 27.60* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 1, 52.20* skx, 27.40* sky);
		c.arcTo(11.40 * skx, 11.40 * sky, 0, 0, 1, 46.90* skx, 23.70* sky);
		c.curveTo(43.90 * skx, 20.00 * sky, 40.80 * skx, 15.40 * sky, 36.40 * skx, 11.10 * sky);
		c.arcTo(25.70 * skx, 25.70 * sky, 0, 0, 0, 28.80* skx, 5.40* sky);
		c.arcTo(13.00 * skx, 13.00 * sky, 0, 0, 0, 19.10* skx, 4.60* sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 0, 16.80* skx, 5.50* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 15.60* skx, 7.10* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 0, 16.50* skx, 9.10* sky);
		c.curveTo(17.00 * skx, 9.80 * sky, 17.60 * skx, 10.40 * sky, 18.10 * skx, 11.00 * sky);
		c.curveTo(20.40 * skx, 13.40 * sky, 22.80 * skx, 15.70 * sky, 24.90 * skx, 18.00 * sky);
		c.arcTo(42.00 * skx, 42.00 * sky, 0, 0, 1, 30.00* skx, 25.30* sky);
		c.arcTo(21.80 * skx, 21.80 * sky, 0, 0, 1, 32.30* skx, 32.70* sky);
		c.arcTo(19.20 * skx, 19.20 * sky, 0, 0, 1, 32.10* skx, 39.10* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 1, 31.00* skx, 41.60* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 1, 29.30* skx, 43.10* sky);
		c.lineTo(27.70* skx,43.80* sky);
		c.lineTo(26.40* skx,44.10* sky);
		c.curveTo(25.70 * skx, 44.20 * sky, 25.40 * skx, 44.20 * sky, 25.40 * skx, 44.10 * sky);
		c.lineTo(26.40* skx,43.80* sky);
		c.lineTo(27.60* skx,43.40* sky);
		c.lineTo(29.10* skx,42.70* sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 0, 30.60* skx, 41.20* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 0, 31.50* skx, 39.00* sky);
		c.arcTo(18.40 * skx, 18.40 * sky, 0, 0, 0, 31.50* skx, 32.80* sky);
		c.arcTo(20.10 * skx, 20.10 * sky, 0, 0, 0, 29.10* skx, 25.80* sky);
		c.arcTo(36.10 * skx, 36.10 * sky, 0, 0, 0, 24.00* skx, 18.70* sky);
		c.curveTo(22.00 * skx, 16.40 * sky, 19.60 * skx, 14.30 * sky, 17.30 * skx, 11.80 * sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 1, 15.60* skx, 9.80* sky);
		c.arcTo(7.50 * skx, 7.50 * sky, 0, 0, 1, 14.90* skx, 8.60* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 14.50* skx, 7.10* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 15.00* skx, 5.50* sky);
		c.lineTo(16.20* skx,4.50* sky);
		c.arcTo(11.90 * skx, 11.90 * sky, 0, 0, 1, 18.80* skx, 3.40* sky);
		c.lineTo(21.50* skx,2.90* sky);
		c.arcTo(12.20 * skx, 12.20 * sky, 0, 0, 1, 24.20* skx, 2.90* sky);
		c.lineTo(26.90* skx,3.40* sky);
		c.lineTo(29.30* skx,4.40* sky);
		c.arcTo(28.10 * skx, 28.10 * sky, 0, 0, 1, 37.20* skx, 10.30* sky);
		c.curveTo(41.60 * skx, 14.80 * sky, 44.70 * skx, 19.50 * sky, 47.60 * skx, 23.10 * sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 0, 52.40* skx, 26.80* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 0, 54.80* skx, 27.10* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 0, 56.80* skx, 26.50* sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 0, 59.30* skx, 24.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(34.60 * skx, 44.90* sky);
		c.lineTo(33.00 * skx,44.90* sky);
		c.lineTo(28.60* skx,44.70* sky);
		c.curveTo(26.70 * skx, 44.60 * sky, 24.30 * skx, 44.60 * sky, 21.60 * skx, 44.70 * sky);
		c.arcTo(53.80 * skx, 53.80 * sky, 0, 0, 0, 12.50* skx, 46.00* sky);
		c.arcTo(23.70 * skx, 23.70 * sky, 0, 0, 0, 7.50* skx, 48.00* sky);
		c.arcTo(16.00 * skx, 16.00 * sky, 0, 0, 0, 5.20* skx, 49.60* sky);
		c.arcTo(12.90 * skx, 12.90 * sky, 0, 0, 0, 3.30* skx, 51.70* sky);
		c.arcTo(21.00 * skx, 21.00 * sky, 0, 0, 0, 2.00* skx, 54.30* sky);
		c.arcTo(11.10 * skx, 11.10 * sky, 0, 0, 0, 1.20* skx, 57.30* sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 0, 1.30* skx, 60.30* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 0, 3.40* skx, 62.20* sky);
		c.arcTo(11.40 * skx, 11.40 * sky, 0, 0, 0, 6.70* skx, 62.70* sky);
		c.lineTo(10.10* skx,62.50* sky);
		c.quadTo(13.70 * skx, 62.10* sky, 17.30 * skx, 61.30 * sky);
		c.lineTo(21.10* skx,60.80* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 1, 23.00* skx, 60.70* sky);
		c.lineTo(24.10 * skx,60.70* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 25.20* skx, 61.20* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 25.70* skx, 61.80* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 25.80* skx, 62.50* sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 1, 25.50* skx, 63.60* sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 1, 24.50* skx, 65.40* sky);
		c.arcTo(26.70 * skx, 26.70 * sky, 0, 0, 1, 22.10* skx, 68.60* sky);
		c.curveTo(18.50 * skx, 72.60 * sky, 14.80 * skx, 76.10 * sky, 11.80 * skx, 80.00 * sky);
		c.arcTo(24.90 * skx, 24.90 * sky, 0, 0, 0, 9.90* skx, 83.00* sky);
		c.arcTo(7.60 * skx, 7.60 * sky, 0, 0, 0, 8.80* skx, 86.20* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 9.60* skx, 89.10* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 12.20* skx, 90.80* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 0, 15.30* skx, 91.20* sky);
		c.arcTo(15.50 * skx, 15.50 * sky, 0, 0, 0, 18.40* skx, 90.60* sky);
		c.arcTo(25.90 * skx, 25.90 * sky, 0, 0, 0, 23.90* skx, 87.80* sky);
		c.arcTo(71.70 * skx, 71.70 * sky, 0, 0, 0, 32.60* skx, 80.80* sky);
		c.lineTo(36.30* skx,77.50* sky);
		c.arcTo(28.60 * skx, 28.60 * sky, 0, 0, 1, 39.60* skx, 74.60* sky);
		c.arcTo(23.70 * skx, 23.70 * sky, 0, 0, 1, 43.00* skx, 72.80* sky);
		c.lineTo(46.00* skx,71.60* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 1, 50.50* skx, 71.30* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 1, 51.60* skx, 71.80* sky);
		c.lineTo(51.90* skx,72.10* sky);
		c.lineTo(51.50* skx,71.90* sky);
		c.lineTo(50.40* skx,71.60* sky);
		c.arcTo(8.20 * skx, 8.20 * sky, 0, 0, 0, 46.20* skx, 72.00* sky);
		c.lineTo(43.20* skx,73.30* sky);
		c.arcTo(22.30 * skx, 22.30 * sky, 0, 0, 0, 40.00* skx, 75.20* sky);
		c.curveTo(39.00 * skx, 76.00 * sky, 37.90 * skx, 77.10 * sky, 36.80 * skx, 78.10 * sky);
		c.curveTo(35.699999999999996 * skx, 79.1 * sky, 34.50 * skx, 80.40 * sky, 33.20 * skx, 81.50 * sky);
		c.arcTo(66.60 * skx, 66.60 * sky, 0, 0, 1, 24.40* skx, 88.70* sky);
		c.arcTo(25.40 * skx, 25.40 * sky, 0, 0, 1, 18.70* skx, 91.60* sky);
		c.arcTo(11.40 * skx, 11.40 * sky, 0, 0, 1, 15.40* skx, 92.40* sky);
		c.arcTo(8.90 * skx, 8.90 * sky, 0, 0, 1, 11.80* skx, 92.00* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 8.70* skx, 89.90* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 1, 7.80* skx, 88.20* sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 1, 7.60* skx, 86.20* sky);
		c.arcTo(13.90 * skx, 13.90 * sky, 0, 0, 1, 8.80* skx, 82.60* sky);
		c.arcTo(22.00 * skx, 22.00 * sky, 0, 0, 1, 10.90* skx, 79.40* sky);
		c.curveTo(13.90 * skx, 75.40 * sky, 17.70 * skx, 71.80 * sky, 21.20 * skx, 67.90 * sky);
		c.arcTo(30.00 * skx, 30.00 * sky, 0, 0, 0, 23.50* skx, 64.90* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 24.40* skx, 63.30* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 24.60* skx, 62.60* sky);
		c.curveTo(24.60 * skx, 62.30 * sky, 24.60 * skx, 62.30 * sky, 24.40 * skx, 62.20 * sky);
		c.lineTo(23.80* skx,61.90* sky);
		c.lineTo(21.20 * skx,61.90* sky);
		c.lineTo(17.50* skx,62.50* sky);
		c.curveTo(15.10 * skx, 62.90 * sky, 12.70 * skx, 63.40 * sky, 10.20 * skx, 63.60 * sky);
		c.arcTo(21.70 * skx, 21.70 * sky, 0, 0, 1, 6.60* skx, 63.80* sky);
		c.arcTo(10.30 * skx, 10.30 * sky, 0, 0, 1, 3.10* skx, 63.20* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 1, 1.40* skx, 62.20* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 1, 0.30* skx, 60.70* sky);
		c.arcTo(8.80 * skx, 8.80 * sky, 0, 0, 1, 0.10* skx, 57.10* sky);
		c.arcTo(16.00 * skx, 16.00 * sky, 0, 0, 1, 1.10* skx, 54.00* sky);
		c.arcTo(11.10 * skx, 11.10 * sky, 0, 0, 1, 2.50* skx, 51.10* sky);
		c.arcTo(22.90 * skx, 22.90 * sky, 0, 0, 1, 4.60* skx, 48.80* sky);
		c.arcTo(13.20 * skx, 13.20 * sky, 0, 0, 1, 7.10* skx, 47.20* sky);
		c.arcTo(21.60 * skx, 21.60 * sky, 0, 0, 1, 12.20* skx, 45.20* sky);
		c.arcTo(47.60 * skx, 47.60 * sky, 0, 0, 1, 21.50* skx, 44.10* sky);
		c.curveTo(24.30 * skx, 44.00 * sky, 26.70 * skx, 44.10 * sky, 28.60 * skx, 44.20 * sky);
		c.lineTo(33.00* skx,44.60* sky);
		c.curveTo(34.10 * skx, 44.70 * sky, 34.60 * skx, 44.80 * sky, 34.60 * skx, 44.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(44.60 * skx, 72.40* sky);
		c.curveTo(44.60 * skx, 72.30 * sky, 44.70 * skx, 72.30 * sky, 45.00 * skx, 72.40 * sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 46.20* skx, 72.80* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 1, 47.70* skx, 74.20* sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 1, 48.50* skx, 76.90* sky);
		c.lineTo(48.50* skx,77.70 * sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 48.40* skx, 78.60* sky);
		c.lineTo(48.40* skx,79.10 * sky);
		c.lineTo(48.20* skx,79.50* sky);
		c.lineTo(47.90* skx,80.40* sky);
		c.arcTo(22.60 * skx, 22.60 * sky, 0, 0, 1, 45.60* skx, 83.80* sky);
		c.curveTo(43.80 * skx, 86.20 * sky, 41.50 * skx, 88.60 * sky, 39.00 * skx, 91.40 * sky);
		c.curveTo(36.5 * skx, 94.20000000000002 * sky, 36.50 * skx, 94.30 * sky, 35.30 * skx, 95.90 * sky);
		c.arcTo(30.20 * skx, 30.20 * sky, 0, 0, 0, 32.10* skx, 101.10* sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 0, 31.10* skx, 104.10* sky);
		c.lineTo(31.10* skx,105.70 * sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 0, 31.30* skx, 107.30* sky);
		c.lineTo(31.30* skx,107.70 * sky);
		c.lineTo(31.50* skx,107.90* sky);
		c.curveTo(31.60 * skx, 108.10 * sky, 31.70 * skx, 108.10 * sky, 31.90 * skx, 108.20 * sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 33.20* skx, 107.60* sky);
		c.arcTo(17.60 * skx, 17.60 * sky, 0, 0, 0, 36.10* skx, 105.50* sky);
		c.arcTo(24.90 * skx, 24.90 * sky, 0, 0, 1, 39.30* skx, 103.50* sky);
		c.lineTo(41.20* skx,102.80* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 1, 43.40* skx, 103.10* sky);
		c.lineTo(43.90* skx,103.30* sky);
		c.lineTo(44.40* skx,103.60* sky);
		c.lineTo(45.20* skx,104.20* sky);
		c.arcTo(18.30 * skx, 18.30 * sky, 0, 0, 1, 46.50* skx, 105.80* sky);
		c.curveTo(47.30 * skx, 106.90 * sky, 47.90 * skx, 108.20 * sky, 48.60 * skx, 109.10 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 49.20* skx, 109.70* sky);
		c.lineTo(49.80* skx,109.90* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 51.40* skx, 109.40* sky);
		c.arcTo(24.20 * skx, 24.20 * sky, 0, 0, 0, 54.50* skx, 106.90* sky);
		c.lineTo(55.90* skx,105.40* sky);
		c.lineTo(57.20* skx,103.90* sky);
		c.arcTo(15.80 * skx, 15.80 * sky, 0, 0, 0, 59.20* skx, 100.30* sky);
		c.arcTo(21.20 * skx, 21.20 * sky, 0, 0, 0, 60.60* skx, 92.40* sky);
		c.curveTo(60.60 * skx, 91.00 * sky, 60.50 * skx, 89.70 * sky, 60.40 * skx, 88.30 * sky);
		c.lineTo(60.10* skx,84.30* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 1, 60.40* skx, 82.10* sky);
		c.curveTo(60.50 * skx, 81.90 * sky, 60.60 * skx, 81.60 * sky, 60.80 * skx, 81.50 * sky);
		c.lineTo(61.50* skx,81.10* sky);
		c.lineTo(62.20 * skx,81.10* sky);
		c.lineTo(62.80* skx,81.30* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 64.50* skx, 82.70* sky);
		c.arcTo(8.60 * skx, 8.60 * sky, 0, 0, 1, 65.80* skx, 84.10* sky);
		c.curveTo(67.50 * skx, 86.10 * sky, 69.00 * skx, 88.10 * sky, 70.50 * skx, 90.00 * sky);
		c.curveTo(72.0 * skx, 91.9 * sky, 73.60 * skx, 93.70 * sky, 75.20 * skx, 95.40 * sky);
		c.arcTo(19.20 * skx, 19.20 * sky, 0, 0, 0, 80.30* skx, 99.40* sky);
		c.arcTo(6.00 * skx, 6.00 * sky, 0, 0, 0, 83.20* skx, 100.20* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 85.90* skx, 99.50* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 0, 88.90* skx, 95.30* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 0, 88.40* skx, 92.80* sky);
		c.arcTo(12.00 * skx, 12.00 * sky, 0, 0, 0, 87.00* skx, 90.70* sky);
		c.arcTo(25.10 * skx, 25.10 * sky, 0, 0, 0, 83.80* skx, 87.40* sky);
		c.curveTo(81.60 * skx, 85.50 * sky, 79.50 * skx, 84.00 * sky, 77.90 * skx, 82.80 * sky);
		c.arcTo(23.80 * skx, 23.80 * sky, 0, 0, 1, 75.70* skx, 81.00* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 1, 74.40* skx, 79.40* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 74.60* skx, 78.60* sky);
		c.curveTo(74.70 * skx, 78.40 * sky, 74.90 * skx, 78.40 * sky, 75.00 * skx, 78.30 * sky);
		c.lineTo(75.40 * skx,78.30* sky);
		c.lineTo(75.10* skx,78.50* sky);
		c.lineTo(74.70* skx,78.80* sky);
		c.arcTo(0.60 * skx, 0.60 * sky, 0, 0, 0, 74.70* skx, 79.40* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 0, 75.90* skx, 80.80* sky);
		c.lineTo(78.10* skx,82.50* sky);
		c.curveTo(79.80 * skx, 83.70 * sky, 81.90 * skx, 85.10 * sky, 84.20 * skx, 87.00 * sky);
		c.arcTo(26.10 * skx, 26.10 * sky, 0, 0, 1, 87.60* skx, 90.30* sky);
		c.arcTo(10.90 * skx, 10.90 * sky, 0, 0, 1, 89.00* skx, 92.50* sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 1, 89.60* skx, 95.30* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 88.50* skx, 98.20* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 86.20* skx, 100.30* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 83.00* skx, 101.20* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 1, 79.80* skx, 100.30* sky);
		c.arcTo(20.10 * skx, 20.10 * sky, 0, 0, 1, 74.30* skx, 96.10* sky);
		c.curveTo(72.70 * skx, 94.40 * sky, 71.10 * skx, 92.60 * sky, 69.60 * skx, 90.70 * sky);
		c.curveTo(68.1 * skx, 88.80000000000001 * sky, 66.50 * skx, 86.80 * sky, 64.90 * skx, 84.80 * sky);
		c.lineTo(63.60* skx,83.50* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 62.20* skx, 82.40* sky);
		c.lineTo(61.50 * skx,82.40* sky);
		c.lineTo(61.30* skx,82.60* sky);
		c.arcTo(8.60 * skx, 8.60 * sky, 0, 0, 0, 61.20* skx, 84.30* sky);
		c.curveTo(61.20 * skx, 85.60 * sky, 61.40 * skx, 87.00 * sky, 61.50 * skx, 88.30 * sky);
		c.curveTo(61.6 * skx, 89.6 * sky, 61.70 * skx, 91.10 * sky, 61.70 * skx, 92.50 * sky);
		c.arcTo(22.30 * skx, 22.30 * sky, 0, 0, 1, 60.20* skx, 100.90* sky);
		c.arcTo(28.20 * skx, 28.20 * sky, 0, 0, 1, 58.10* skx, 104.70* sky);
		c.lineTo(56.70* skx,106.30* sky);
		c.lineTo(55.20* skx,107.80* sky);
		c.arcTo(14.40 * skx, 14.40 * sky, 0, 0, 1, 51.90* skx, 110.50* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 1, 49.70* skx, 111.20* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 48.50* skx, 110.80* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 47.60* skx, 110.00* sky);
		c.curveTo(46.70 * skx, 108.80 * sky, 46.20 * skx, 107.60 * sky, 45.50 * skx, 106.60 * sky);
		c.lineTo(44.30* skx,105.20* sky);
		c.lineTo(43.60* skx,104.60* sky);
		c.lineTo(43.20* skx,104.40* sky);
		c.lineTo(42.90* skx,104.20* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 39.70* skx, 104.60* sky);
		c.arcTo(19.80 * skx, 19.80 * sky, 0, 0, 0, 36.60* skx, 106.50* sky);
		c.curveTo(35.70 * skx, 107.20 * sky, 34.70 * skx, 108.00 * sky, 33.60 * skx, 108.70 * sky);
		c.lineTo(33.20* skx,108.90* sky);
		c.lineTo(32.80* skx,109.10* sky);
		c.lineTo(31.70* skx,109.30* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 30.60* skx, 108.70* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 30.30* skx, 108.20* sky);
		c.lineTo(30.10* skx,107.70* sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 1, 29.90* skx, 105.90* sky);
		c.lineTo(29.90* skx,104.00 * sky);
		c.arcTo(11.70 * skx, 11.70 * sky, 0, 0, 1, 31.00* skx, 100.70* sky);
		c.arcTo(29.10 * skx, 29.10 * sky, 0, 0, 1, 34.40* skx, 95.30* sky);
		c.lineTo(38.20* skx,90.90* sky);
		c.curveTo(40.70 * skx, 88.10 * sky, 43.00 * skx, 85.70 * sky, 44.90 * skx, 83.40 * sky);
		c.arcTo(21.90 * skx, 21.90 * sky, 0, 0, 0, 47.20* skx, 80.10* sky);
		c.lineTo(47.50* skx,79.30* sky);
		c.lineTo(47.70* skx,78.90* sky);
		c.lineTo(47.70* skx,78.50 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 47.80* skx, 77.70* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 47.80* skx, 76.90* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 0, 47.20* skx, 74.40* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 46.10* skx, 73.00* sky);
		c.lineTo(45.00* skx,72.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(67.10 * skx, 79.30* sky);
		c.lineTo(67.50* skx,79.10* sky);
		c.lineTo(68.90* skx,78.60* sky);
		c.arcTo(30.30 * skx, 30.30 * sky, 0, 0, 1, 74.40* skx, 78.00* sky);
		c.lineTo(83.30 * skx,78.00* sky);
		c.curveTo(86.70 * skx, 78.10 * sky, 90.60 * skx, 78.30 * sky, 94.90 * skx, 78.10 * sky);
		c.arcTo(39.10 * skx, 39.10 * sky, 0, 0, 0, 101.60* skx, 77.40* sky);
		c.arcTo(18.90 * skx, 18.90 * sky, 0, 0, 0, 105.00* skx, 76.50* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 0, 107.90* skx, 74.60* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 0, 108.80* skx, 73.10* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 109.10* skx, 71.30* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 0, 107.90* skx, 68.00* sky);
		c.arcTo(8.70 * skx, 8.70 * sky, 0, 0, 0, 104.70* skx, 66.00* sky);
		c.lineTo(100.60* skx,65.00* sky);
		c.curveTo(97.90 * skx, 64.50 * sky, 94.90 * skx, 64.30 * sky, 91.90 * skx, 63.80 * sky);
		c.lineTo(89.70* skx,63.30* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 1, 87.50* skx, 62.10* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 86.70* skx, 60.90* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 0, 86.50* skx, 60.20* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 86.60* skx, 59.40* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 1, 87.00* skx, 58.70* sky);
		c.curveTo(87.20 * skx, 58.50 * sky, 87.30 * skx, 58.30 * sky, 87.50 * skx, 58.20 * sky);
		c.lineTo(88.10* skx,57.90* sky);
		c.lineTo(88.70* skx,57.60* sky);
		c.arcTo(20.50 * skx, 20.50 * sky, 0, 0, 1, 93.50* skx, 56.60* sky);
		c.lineTo(98.30* skx,56.30* sky);
		c.curveTo(101.50 * skx, 56.10 * sky, 104.70 * skx, 55.90 * sky, 108.00 * skx, 55.40 * sky);
		c.arcTo(26.30 * skx, 26.30 * sky, 0, 0, 0, 112.70* skx, 54.40* sky);
		c.arcTo(19.80 * skx, 19.80 * sky, 0, 0, 0, 116.80* skx, 52.30* sky);
		c.arcTo(10.80 * skx, 10.80 * sky, 0, 0, 0, 119.40* skx, 48.60* sky);
		c.arcTo(18.90 * skx, 18.90 * sky, 0, 0, 0, 120.40* skx, 44.20* sky);
		c.curveTo(120.70 * skx, 41.20 * sky, 120.60 * skx, 38.10 * sky, 120.80 * skx, 35.10 * sky);
		c.curveTo(120.80 * skx, 33.60 * sky, 120.90 * skx, 32.20 * sky, 120.80 * skx, 30.70 * sky);
		c.arcTo(13.80 * skx, 13.80 * sky, 0, 0, 0, 119.80* skx, 26.70* sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 0, 118.80* skx, 25.00* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 117.30* skx, 24.00* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 115.80* skx, 24.20* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 0, 114.60* skx, 25.50* sky);
		c.arcTo(11.40 * skx, 11.40 * sky, 0, 0, 0, 113.50* skx, 29.20* sky);
		c.lineTo(113.50* skx,30.20 * sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 1, 113.20* skx, 31.20* sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 1, 112.30* skx, 33.00* sky);
		c.arcTo(11.70 * skx, 11.70 * sky, 0, 0, 1, 109.70* skx, 35.80* sky);
		c.arcTo(18.00 * skx, 18.00 * sky, 0, 0, 1, 106.60* skx, 37.80* sky);
		c.arcTo(38.20 * skx, 38.20 * sky, 0, 0, 1, 100.20* skx, 40.50* sky);
		c.arcTo(54.40 * skx, 54.40 * sky, 0, 0, 1, 88.70* skx, 42.80* sky);
		c.arcTo(40.20 * skx, 40.20 * sky, 0, 0, 1, 83.90* skx, 43.00* sky);
		c.arcTo(13.00 * skx, 13.00 * sky, 0, 0, 1, 79.80* skx, 42.30* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 78.40* skx, 41.20* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 77.90* skx, 39.70* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 78.10* skx, 38.40* sky);
		c.lineTo(78.40* skx,37.40* sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 1, 79.20* skx, 36.10* sky);
		c.lineTo(79.50* skx,35.70* sky);
		c.lineTo(78.70* skx,37.50* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 78.20* skx, 39.70* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 78.70* skx, 41.00* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 80.00* skx, 41.90* sky);
		c.arcTo(11.50 * skx, 11.50 * sky, 0, 0, 0, 83.90* skx, 42.40* sky);
		c.lineTo(88.60* skx,42.20* sky);
		c.arcTo(62.20 * skx, 62.20 * sky, 0, 0, 0, 100.00* skx, 39.70* sky);
		c.arcTo(32.50 * skx, 32.50 * sky, 0, 0, 0, 106.00* skx, 37.00* sky);
		c.arcTo(24.90 * skx, 24.90 * sky, 0, 0, 0, 109.00* skx, 35.10* sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 0, 111.40* skx, 32.50* sky);
		c.lineTo(112.20* skx,30.90* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 112.40* skx, 30.00* sky);
		c.lineTo(112.40* skx,29.00 * sky);
		c.arcTo(12.20 * skx, 12.20 * sky, 0, 0, 1, 113.60* skx, 25.00* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 1, 115.10* skx, 23.30* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 117.50* skx, 23.00* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 119.50* skx, 24.30* sky);
		c.arcTo(8.20 * skx, 8.20 * sky, 0, 0, 1, 120.70* skx, 26.30* sky);
		c.arcTo(17.20 * skx, 17.20 * sky, 0, 0, 1, 121.40* skx, 28.40* sky);
		c.arcTo(17.00 * skx, 17.00 * sky, 0, 0, 1, 121.80* skx, 30.60* sky);
		c.arcTo(18.50 * skx, 18.50 * sky, 0, 0, 1, 121.90* skx, 32.90* sky);
		c.arcTo(17.70 * skx, 17.70 * sky, 0, 0, 0, 121.80* skx, 35.20* sky);
		c.curveTo(121.70 * skx, 38.10 * sky, 121.70 * skx, 41.20 * sky, 121.40 * skx, 44.40 * sky);
		c.arcTo(13.90 * skx, 13.90 * sky, 0, 0, 1, 120.30* skx, 49.10* sky);
		c.arcTo(10.60 * skx, 10.60 * sky, 0, 0, 1, 117.40* skx, 53.20* sky);
		c.arcTo(14.70 * skx, 14.70 * sky, 0, 0, 1, 112.90* skx, 55.50* sky);
		c.arcTo(38.80 * skx, 38.80 * sky, 0, 0, 1, 108.00* skx, 56.60* sky);
		c.curveTo(104.70 * skx, 57.10 * sky, 101.40 * skx, 57.20 * sky, 98.20 * skx, 57.40 * sky);
		c.lineTo(93.50* skx,57.80* sky);
		c.arcTo(21.10 * skx, 21.10 * sky, 0, 0, 0, 89.00* skx, 58.70* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 87.60* skx, 59.80* sky);
		c.lineTo(87.60* skx,60.10 * sky);
		c.curveTo(87.60 * skx, 60.30 * sky, 87.60 * skx, 60.40 * sky, 87.70 * skx, 60.50 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 88.10* skx, 61.20* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 89.90* skx, 62.20* sky);
		c.lineTo(92.00* skx,62.70* sky);
		c.curveTo(94.90 * skx, 63.20 * sky, 97.90 * skx, 63.40 * sky, 100.70 * skx, 64.00 * sky);
		c.arcTo(18.40 * skx, 18.40 * sky, 0, 0, 1, 104.90* skx, 65.00* sky);
		c.arcTo(8.90 * skx, 8.90 * sky, 0, 0, 1, 108.60* skx, 67.30* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 110.00* skx, 71.40* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 1, 109.70* skx, 73.40* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 108.60* skx, 75.20* sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 1, 105.30* skx, 77.40* sky);
		c.lineTo(101.70* skx,78.30* sky);
		c.arcTo(42.40 * skx, 42.40 * sky, 0, 0, 1, 95.00* skx, 79.00* sky);
		c.curveTo(90.60 * skx, 79.10 * sky, 86.70 * skx, 78.90 * sky, 83.30 * skx, 78.70 * sky);
		c.lineTo(74.50* skx,78.40* sky);
		c.arcTo(36.00 * skx, 36.00 * sky, 0, 0, 0, 68.90* skx, 78.80* sky);
		c.arcTo(13.50 * skx, 13.50 * sky, 0, 0, 1, 67.10* skx, 79.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(71.70 * skx, 48.70* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 72.00* skx, 47.60* sky);
		c.arcTo(16.00 * skx, 16.00 * sky, 0, 0, 1, 73.10* skx, 44.70* sky);
		c.arcTo(41.00 * skx, 41.00 * sky, 0, 0, 1, 79.20* skx, 35.00* sky);
		c.curveTo(80.70 * skx, 33.10 * sky, 82.60 * skx, 31.10 * sky, 84.40 * skx, 29.00 * sky);
		c.arcTo(28.80 * skx, 28.80 * sky, 0, 0, 0, 87.10* skx, 25.60* sky);
		c.arcTo(6.00 * skx, 6.00 * sky, 0, 0, 0, 88.40* skx, 21.60* sky);
		c.lineTo(88.40* skx,20.50 * sky);
		c.lineTo(88.10* skx,19.30* sky);
		c.curveTo(88.00 * skx, 18.90 * sky, 88.00 * skx, 18.40 * sky, 87.90 * skx, 18.00 * sky);
		c.curveTo(87.80000000000001 * skx, 17.6 * sky, 87.80 * skx, 17.20 * sky, 87.70 * skx, 16.80 * sky);
		c.lineTo(87.70* skx,15.50 * sky);
		c.curveTo(87.70 * skx, 15.10 * sky, 87.60 * skx, 14.60 * sky, 87.60 * skx, 14.20 * sky);
		c.arcTo(21.10 * skx, 21.10 * sky, 0, 0, 1, 87.80* skx, 11.60* sky);
		c.lineTo(87.80* skx,10.20 * sky);
		c.arcTo(6.90 * skx, 6.90 * sky, 0, 0, 1, 88.00* skx, 8.90* sky);
		c.curveTo(88.10 * skx, 8.50 * sky, 88.10 * skx, 8.00 * sky, 88.20 * skx, 7.60 * sky);
		c.lineTo(88.40* skx,6.30* sky);
		c.lineTo(89.00* skx,3.60* sky);
		c.lineTo(89.30* skx,2.30* sky);
		c.curveTo(89.30 * skx, 1.90 * sky, 89.30 * skx, 1.70 * sky, 89.10 * skx, 1.50 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 88.20* skx, 1.20* sky);
		c.lineTo(86.90 * skx,1.20* sky);
		c.arcTo(12.20 * skx, 12.20 * sky, 0, 0, 0, 84.30* skx, 1.80* sky);
		c.arcTo(28.80 * skx, 28.80 * sky, 0, 0, 0, 79.40* skx, 3.60* sky);
		c.lineTo(75.00* skx,5.90* sky);
		c.arcTo(30.00 * skx, 30.00 * sky, 0, 0, 0, 71.10* skx, 8.70* sky);
		c.lineTo(69.50* skx,10.30* sky);
		c.lineTo(68.30* skx,12.20* sky);
		c.lineTo(66.00* skx,16.00* sky);
		c.lineTo(61.90* skx,22.80* sky);
		c.curveTo(59.30 * skx, 26.90 * sky, 56.80 * skx, 30.00 * sky, 54.50 * skx, 31.60 * sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 51.60* skx, 32.90* sky);
		c.lineTo(51.20 * skx,32.90* sky);
		c.lineTo(51.60* skx,32.70* sky);
		c.arcTo(6.90 * skx, 6.90 * sky, 0, 0, 0, 54.30* skx, 31.30* sky);
		c.curveTo(56.30 * skx, 29.70 * sky, 58.70 * skx, 26.50 * sky, 61.20 * skx, 22.40 * sky);
		c.curveTo(62.50 * skx, 20.40 * sky, 63.70 * skx, 18.10 * sky, 65.10 * skx, 15.60 * sky);
		c.lineTo(67.40* skx,11.80* sky);
		c.lineTo(68.70* skx,9.80* sky);
		c.arcTo(13.70 * skx, 13.70 * sky, 0, 0, 1, 70.30* skx, 8.00* sky);
		c.arcTo(23.40 * skx, 23.40 * sky, 0, 0, 1, 74.40* skx, 5.00* sky);
		c.arcTo(49.80 * skx, 49.80 * sky, 0, 0, 1, 79.00* skx, 2.50* sky);
		c.arcTo(37.00 * skx, 37.00 * sky, 0, 0, 1, 84.00* skx, 0.60* sky);
		c.lineTo(86.70* skx,0.10* sky);
		c.lineTo(88.20 * skx,0.10* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 1, 89.90* skx, 0.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 90.30* skx, 1.70* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 90.30* skx, 2.60* sky);
		c.lineTo(90.00* skx,3.80* sky);
		c.curveTo(89.80 * skx, 4.70 * sky, 89.70 * skx, 5.60 * sky, 89.50 * skx, 6.50 * sky);
		c.lineTo(89.20* skx,7.80* sky);
		c.lineTo(89.00* skx,9.10* sky);
		c.arcTo(6.90 * skx, 6.90 * sky, 0, 0, 1, 88.80* skx, 10.40* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 1, 88.70* skx, 11.70* sky);
		c.arcTo(20.90 * skx, 20.90 * sky, 0, 0, 0, 88.60* skx, 14.20* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 88.60* skx, 15.40* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 88.70* skx, 16.70* sky);
		c.curveTo(88.70 * skx, 17.10 * sky, 88.80 * skx, 17.50 * sky, 88.80 * skx, 17.90 * sky);
		c.curveTo(88.8 * skx, 18.299999999999997 * sky, 88.90 * skx, 18.70 * sky, 89.00 * skx, 19.10 * sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 1, 89.20* skx, 20.20* sky);
		c.lineTo(89.40* skx,20.80* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 89.50* skx, 21.50* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 1, 89.10* skx, 24.00* sky);
		c.arcTo(15.10 * skx, 15.10 * sky, 0, 0, 1, 88.00* skx, 26.20* sky);
		c.arcTo(33.90 * skx, 33.90 * sky, 0, 0, 1, 85.20* skx, 29.60* sky);
		c.curveTo(83.20 * skx, 31.80 * sky, 81.40 * skx, 33.70 * sky, 79.90 * skx, 35.50 * sky);
		c.arcTo(43.40 * skx, 43.40 * sky, 0, 0, 0, 73.50* skx, 44.90* sky);
		c.curveTo(72.30 * skx, 47.30 * sky, 71.80 * skx, 48.70 * sky, 71.70 * skx, 48.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(30.20 * skx, 15.60* sky);
		c.curveTo(30.20 * skx, 15.50 * sky, 30.10 * skx, 15.20 * sky, 30.00 * skx, 15.30 * sky);
		c.lineTo(29.30 * skx,15.30* sky);
		c.curveTo(28.70 * skx, 15.30 * sky, 28.70 * skx, 16.30 * sky, 29.30 * skx, 16.40 * sky);
		c.lineTo(29.90 * skx,16.40* sky);
		c.curveTo(30.00 * skx, 16.30 * sky, 30.20 * skx, 16.20 * sky, 30.20 * skx, 16.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(34.70 * skx, 19.10* sky);
		c.lineTo(34.30* skx,18.80* sky);
		c.curveTo(33.90 * skx, 18.40 * sky, 33.20 * skx, 19.00 * sky, 33.60 * skx, 19.50 * sky);
		c.curveTo(34.0 * skx, 20.0 * sky, 34.10 * skx, 19.90 * sky, 34.40 * skx, 19.80 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 34.70* skx, 19.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.30 * skx, 15.00* sky);
		c.lineTo(32.30 * skx,15.00* sky);
		c.curveTo(31.70 * skx, 15.40 * sky, 32.50 * skx, 16.10 * sky, 32.80 * skx, 15.60 * sky);
		c.lineTo(32.90 * skx,15.60* sky);
		c.curveTo(33.20 * skx, 15.30 * sky, 32.70 * skx, 14.70 * sky, 32.30 * skx, 15.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.40 * skx, 14.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.40 * skx, 15.00* sky);
		c.lineTo(32.40 * skx,15.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.30 * skx, 15.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(27.30 * skx, 11.30* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 26.00* skx, 10.90* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 25.80* skx, 11.50* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 26.90* skx, 12.10* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 1, 0, 27.30* skx, 11.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(24.20 * skx, 8.90* sky);
		c.lineTo(23.60* skx,9.10* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 24.00* skx, 9.90* sky);
		c.lineTo(24.40 * skx,9.90* sky);
		c.curveTo(24.90 * skx, 9.70 * sky, 24.70 * skx, 8.90 * sky, 24.20 * skx, 8.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(25.10 * skx, 13.60* sky);
		c.curveTo(24.70 * skx, 13.60 * sky, 24.70 * skx, 14.30 * sky, 25.10 * skx, 14.30 * sky);
		c.curveTo(25.500000000000004 * skx, 14.3 * sky, 25.50 * skx, 13.60 * sky, 25.10 * skx, 13.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.10 * skx, 11.60* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 32.10* skx, 12.40* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 32.10* skx, 11.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(31.60 * skx, 20.30* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 31.60* skx, 21.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 31.60* skx, 20.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(39.70 * skx, 21.70* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 39.20* skx, 22.20* sky);
		c.lineTo(39.20* skx,22.40 * sky);
		c.curveTo(39.30 * skx, 22.70 * sky, 39.70 * skx, 22.60 * sky, 39.90 * skx, 22.30 * sky);
		c.lineTo(39.90 * skx,22.30* sky);
		c.curveTo(40.10 * skx, 22.00 * sky, 40.00 * skx, 21.70 * sky, 39.70 * skx, 21.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(35.50 * skx, 26.20* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 35.50* skx, 27.10* sky);
		c.curveTo(36.00 * skx, 27.10 * sky, 36.00 * skx, 26.20 * sky, 35.50 * skx, 26.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(39.00 * skx, 38.60* sky);
		c.lineTo(39.00* skx,38.30 * sky);
		c.curveTo(38.90 * skx, 38.00 * sky, 38.30 * skx, 37.90 * sky, 38.20 * skx, 38.30 * sky);
		c.curveTo(38.10000000000001 * skx, 38.699999999999996 * sky, 38.10 * skx, 38.50 * sky, 38.10 * skx, 38.60 * sky);
		c.curveTo(38.1 * skx, 38.7 * sky, 39.20 * skx, 39.20 * sky, 39.00 * skx, 38.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(39.30 * skx, 26.70* sky);
		c.curveTo(39.00 * skx, 27.00 * sky, 39.20 * skx, 27.70 * sky, 39.70 * skx, 27.60 * sky);
		c.curveTo(40.2 * skx, 27.500000000000004 * sky, 40.20 * skx, 27.20 * sky, 40.20 * skx, 26.80 * sky);
		c.curveTo(40.2 * skx, 26.400000000000002 * sky, 39.50 * skx, 26.40 * sky, 39.30 * skx, 26.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(38.50 * skx, 31.30* sky);
		c.curveTo(38.40 * skx, 31.10 * sky, 38.10 * skx, 30.90 * sky, 37.90 * skx, 31.00 * sky);
		c.lineTo(37.50 * skx,31.00* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 37.50* skx, 31.90* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 38.30* skx, 31.70* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 38.50* skx, 31.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(45.60 * skx, 30.70* sky);
		c.lineTo(45.20* skx,30.40* sky);
		c.lineTo(45.00 * skx,30.40* sky);
		c.curveTo(44.50 * skx, 29.90 * sky, 43.80 * skx, 30.70 * sky, 44.30 * skx, 31.10 * sky);
		c.curveTo(44.8 * skx, 31.500000000000004 * sky, 44.80 * skx, 31.30 * sky, 45.00 * skx, 31.40 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 45.60* skx, 30.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(46.10 * skx, 41.60* sky);
		c.curveTo(45.60 * skx, 41.40 * sky, 45.30 * skx, 42.20 * sky, 45.80 * skx, 42.50 * sky);
		c.curveTo(46.3 * skx, 42.8 * sky, 46.90 * skx, 43.20 * sky, 47.10 * skx, 42.50 * sky);
		c.curveTo(47.300000000000004 * skx, 41.8 * sky, 46.50 * skx, 41.80 * sky, 46.10 * skx, 41.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(61.00 * skx, 35.20* sky);
		c.curveTo(60.60 * skx, 35.00 * sky, 60.40 * skx, 35.30 * sky, 60.20 * skx, 35.60 * sky);
		c.lineTo(59.70* skx,36.20* sky);
		c.curveTo(59.30 * skx, 36.70 * sky, 60.10 * skx, 37.50 * sky, 60.60 * skx, 36.90 * sky);
		c.curveTo(61.1 * skx, 36.3 * sky, 61.50 * skx, 35.50 * sky, 61.00 * skx, 35.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(52.60 * skx, 34.60* sky);
		c.lineTo(52.40 * skx,34.60* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 52.40* skx, 35.60* sky);
		c.lineTo(53.10* skx,35.40* sky);
		c.curveTo(53.60 * skx, 35.00 * sky, 53.10 * skx, 34.40 * sky, 52.60 * skx, 34.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(63.90 * skx, 28.50* sky);
		c.lineTo(63.20* skx,29.10* sky);
		c.curveTo(62.70 * skx, 29.60 * sky, 63.50 * skx, 30.30 * sky, 63.90 * skx, 29.80 * sky);
		c.lineTo(64.50* skx,29.20* sky);
		c.curveTo(64.80 * skx, 28.80 * sky, 64.30 * skx, 28.20 * sky, 63.90 * skx, 28.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(66.10 * skx, 22.20* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 65.70* skx, 22.90* sky);
		c.curveTo(65.30 * skx, 23.40 * sky, 66.20 * skx, 23.90 * sky, 66.50 * skx, 23.40 * sky);
		c.curveTo(66.8 * skx, 22.9 * sky, 66.80 * skx, 22.90 * sky, 66.90 * skx, 22.60 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 66.10* skx, 22.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(74.10 * skx, 13.90* sky);
		c.lineTo(73.30* skx,14.10* sky);
		c.curveTo(72.70 * skx, 14.30 * sky, 73.20 * skx, 15.20 * sky, 73.70 * skx, 14.90 * sky);
		c.lineTo(74.40* skx,14.60* sky);
		c.curveTo(74.80 * skx, 14.30 * sky, 74.50 * skx, 13.70 * sky, 74.10 * skx, 13.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(72.00 * skx, 16.90* sky);
		c.curveTo(72.00 * skx, 16.30 * sky, 71.10 * skx, 16.40 * sky, 71.10 * skx, 16.90 * sky);
		c.lineTo(71.10* skx,17.50 * sky);
		c.curveTo(71.20 * skx, 17.90 * sky, 71.90 * skx, 18.00 * sky, 72.00 * skx, 17.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(77.80 * skx, 12.40* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 77.80* skx, 13.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 77.80* skx, 12.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(82.80 * skx, 9.20* sky);
		c.curveTo(82.20 * skx, 9.20 * sky, 82.30 * skx, 10.10 * sky, 82.80 * skx, 10.10 * sky);
		c.curveTo(83.3 * skx, 10.1 * sky, 83.30 * skx, 9.20 * sky, 82.80 * skx, 9.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(79.40 * skx, 16.80* sky);
		c.curveTo(79.40 * skx, 16.30 * sky, 78.40 * skx, 16.30 * sky, 78.50 * skx, 16.90 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 79.00* skx, 18.20* sky);
		c.curveTo(79.30 * skx, 18.30 * sky, 79.60 * skx, 18.20 * sky, 79.60 * skx, 17.90 * sky);
		c.curveTo(79.6 * skx, 17.599999999999998 * sky, 79.40 * skx, 17.20 * sky, 79.40 * skx, 16.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(79.20 * skx, 10.00* sky);
		c.curveTo(78.60 * skx, 10.00 * sky, 78.70 * skx, 10.80 * sky, 79.30 * skx, 10.80 * sky);
		c.curveTo(79.89999999999999 * skx, 10.8 * sky, 79.80 * skx, 10.00 * sky, 79.20 * skx, 10.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(74.40 * skx, 24.40* sky);
		c.lineTo(74.00 * skx,24.40* sky);
		c.curveTo(73.30 * skx, 24.30 * sky, 73.30 * skx, 25.30 * sky, 74.00 * skx, 25.30 * sky);
		c.lineTo(74.40 * skx,25.30* sky);
		c.curveTo(74.90 * skx, 25.10 * sky, 74.80 * skx, 24.40 * sky, 74.40 * skx, 24.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(81.70 * skx, 24.30* sky);
		c.lineTo(81.10* skx,24.00* sky);
		c.curveTo(80.50 * skx, 23.90 * sky, 80.40 * skx, 24.80 * sky, 81.00 * skx, 24.90 * sky);
		c.lineTo(81.60 * skx,24.90* sky);
		c.curveTo(82.00 * skx, 24.90 * sky, 82.10 * skx, 24.40 * sky, 81.70 * skx, 24.30 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(75.60 * skx, 20.80* sky);
		c.curveTo(75.10 * skx, 20.80 * sky, 75.20 * skx, 21.60 * sky, 75.70 * skx, 21.60 * sky);
		c.curveTo(76.2 * skx, 21.6 * sky, 76.20 * skx, 20.80 * sky, 75.60 * skx, 20.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(68.80 * skx, 32.10* sky);
		c.lineTo(68.40* skx,32.50* sky);
		c.curveTo(68.10 * skx, 32.90 * sky, 68.70 * skx, 33.50 * sky, 69.10 * skx, 33.20 * sky);
		c.lineTo(69.50* skx,32.80* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 1, 0, 68.80* skx, 32.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(68.80 * skx, 25.10* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 68.60* skx, 25.80* sky);
		c.curveTo(68.50 * skx, 26.40 * sky, 69.50 * skx, 26.40 * sky, 69.50 * skx, 25.80 * sky);
		c.lineTo(69.50 * skx,25.80* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 69.60* skx, 25.30* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 68.80* skx, 25.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(74.50 * skx, 19.30* sky);
		c.curveTo(74.40 * skx, 19.10 * sky, 74.10 * skx, 19.20 * sky, 74.00 * skx, 19.30 * sky);
		c.curveTo(73.9 * skx, 19.400000000000002 * sky, 73.50 * skx, 20.20 * sky, 74.00 * skx, 20.20 * sky);
		c.lineTo(74.30 * skx,20.20* sky);
		c.arcTo(0.30 * skx, 0.30 * sky, 0, 0, 0, 74.60* skx, 19.90* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 74.50* skx, 19.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(57.90 * skx, 32.30* sky);
		c.curveTo(57.60 * skx, 32.30 * sky, 57.50 * skx, 32.40 * sky, 57.40 * skx, 32.70 * sky);
		c.curveTo(57.3 * skx, 33.00000000000001 * sky, 57.40 * skx, 33.20 * sky, 57.70 * skx, 33.20 * sky);
		c.lineTo(58.00 * skx,33.20* sky);
		c.curveTo(58.60 * skx, 33.10 * sky, 58.40 * skx, 32.10 * sky, 57.90 * skx, 32.30 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(46.60 * skx, 37.10* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 46.60* skx, 37.90* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 46.60* skx, 37.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(37.90 * skx, 45.30* sky);
		c.curveTo(37.40 * skx, 45.30 * sky, 37.50 * skx, 46.20 * sky, 38.00 * skx, 46.20 * sky);
		c.curveTo(38.5 * skx, 46.2 * sky, 38.50 * skx, 45.30 * sky, 37.90 * skx, 45.30 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(31.60 * skx, 47.30* sky);
		c.curveTo(31.60 * skx, 47.10 * sky, 31.40 * skx, 47.00 * sky, 31.20 * skx, 46.90 * sky);
		c.lineTo(30.70* skx,47.10* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 30.80* skx, 48.00* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 31.50* skx, 47.80* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 31.60* skx, 47.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(23.30 * skx, 49.10* sky);
		c.curveTo(23.20 * skx, 49.30 * sky, 23.10 * skx, 49.40 * sky, 23.10 * skx, 49.50 * sky);
		c.curveTo(23.1 * skx, 49.6 * sky, 23.20 * skx, 50.30 * sky, 23.50 * skx, 50.00 * sky);
		c.lineTo(23.90* skx,49.80* sky);
		c.curveTo(24.40 * skx, 49.40 * sky, 23.70 * skx, 48.70 * sky, 23.30 * skx, 49.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(23.60 * skx, 57.60* sky);
		c.curveTo(23.40 * skx, 57.70 * sky, 23.20 * skx, 57.70 * sky, 23.20 * skx, 58.00 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 23.60* skx, 58.40* sky);
		c.curveTo(23.90 * skx, 58.50 * sky, 24.20 * skx, 58.40 * sky, 24.20 * skx, 58.10 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 23.60* skx, 57.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(13.00 * skx, 57.60* sky);
		c.curveTo(13.00 * skx, 57.50 * sky, 12.90 * skx, 57.40 * sky, 12.80 * skx, 57.30 * sky);
		c.curveTo(12.700000000000001 * skx, 57.199999999999996 * sky, 12.50 * skx, 57.10 * sky, 12.40 * skx, 57.20 * sky);
		c.lineTo(12.30 * skx,57.20* sky);
		c.curveTo(11.80 * skx, 57.20 * sky, 11.80 * skx, 58.00 * sky, 12.40 * skx, 58.10 * sky);
		c.lineTo(12.50 * skx,58.10* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 13.00* skx, 57.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(20.10 * skx, 55.30* sky);
		c.curveTo(19.50 * skx, 55.30 * sky, 19.40 * skx, 56.30 * sky, 20.10 * skx, 56.30 * sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 20.10* skx, 55.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(16.00 * skx, 51.20* sky);
		c.lineTo(15.70 * skx,51.20* sky);
		c.curveTo(15.70 * skx, 51.20 * sky, 15.40 * skx, 51.30 * sky, 15.40 * skx, 51.40 * sky);
		c.lineTo(15.40 * skx,51.40* sky);
		c.curveTo(15.20 * skx, 51.50 * sky, 15.30 * skx, 51.90 * sky, 15.50 * skx, 52.00 * sky);
		c.arcTo(0.10 * skx, 0.10 * sky, 0, 0, 1, 15.60* skx, 52.10* sky);
		c.curveTo(15.90 * skx, 52.20 * sky, 16.30 * skx, 51.90 * sky, 16.20 * skx, 51.60 * sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 16.00* skx, 51.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(9.50 * skx, 55.90* sky);
		c.lineTo(9.10 * skx,55.90* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 8.50* skx, 56.30* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 9.10* skx, 56.80* sky);
		c.lineTo(9.50 * skx,56.80* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 9.50* skx, 55.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(17.40 * skx, 53.70* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 17.00* skx, 53.50* sky);
		c.curveTo(16.90 * skx, 53.60 * sky, 16.80 * skx, 53.60 * sky, 16.80 * skx, 53.70 * sky);
		c.lineTo(16.80 * skx,53.70* sky);
		c.curveTo(16.30 * skx, 53.90 * sky, 16.60 * skx, 54.90 * sky, 17.20 * skx, 54.60 * sky);
		c.curveTo(17.799999999999997 * skx, 54.300000000000004 * sky, 17.70 * skx, 54.00 * sky, 17.40 * skx, 53.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(18.90 * skx, 49.00* sky);
		c.curveTo(18.30 * skx, 49.00 * sky, 18.40 * skx, 49.90 * sky, 18.90 * skx, 49.90 * sky);
		c.curveTo(19.4 * skx, 49.9 * sky, 19.40 * skx, 49.00 * sky, 18.90 * skx, 49.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(27.30 * skx, 51.80* sky);
		c.curveTo(26.80 * skx, 51.80 * sky, 26.80 * skx, 52.70 * sky, 27.30 * skx, 52.70 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 27.30* skx, 51.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(36.10 * skx, 49.60* sky);
		c.curveTo(35.60 * skx, 49.60 * sky, 35.50 * skx, 50.40 * sky, 36.00 * skx, 50.40 * sky);
		c.curveTo(36.5 * skx, 50.4 * sky, 36.60 * skx, 49.60 * sky, 36.10 * skx, 49.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.60 * skx, 58.10* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 32.00* skx, 58.20* sky);
		c.curveTo(31.80 * skx, 58.40 * sky, 31.90 * skx, 58.60 * sky, 32.10 * skx, 58.80 * sky);
		c.curveTo(32.300000000000004 * skx, 58.99999999999999 * sky, 32.20 * skx, 59.10 * sky, 32.30 * skx, 59.20 * sky);
		c.curveTo(32.39999999999999 * skx, 59.300000000000004 * sky, 32.90 * skx, 59.50 * sky, 33.00 * skx, 59.20 * sky);
		c.curveTo(33.1 * skx, 58.900000000000006 * sky, 33.00 * skx, 58.40 * sky, 32.60 * skx, 58.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(29.50 * skx, 67.80* sky);
		c.curveTo(29.20 * skx, 67.50 * sky, 28.60 * skx, 67.70 * sky, 28.70 * skx, 68.10 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 28.60* skx, 68.40* sky);
		c.curveTo(28.40 * skx, 68.80 * sky, 28.90 * skx, 69.00 * sky, 29.20 * skx, 68.80 * sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 29.50* skx, 67.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(21.20 * skx, 76.40* sky);
		c.lineTo(21.20* skx,76.60 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 21.70* skx, 77.10* sky);
		c.lineTo(21.90 * skx,77.10* sky);
		c.curveTo(22.30 * skx, 76.70 * sky, 21.60 * skx, 75.90 * sky, 21.20 * skx, 76.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(19.40 * skx, 85.30* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 18.40* skx, 85.90* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 18.20* skx, 86.50* sky);
		c.curveTo(18.30 * skx, 86.60 * sky, 18.60 * skx, 86.80 * sky, 18.80 * skx, 86.70 * sky);
		c.lineTo(19.10 * skx,86.70* sky);
		c.lineTo(19.40* skx,86.50* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 19.90* skx, 85.90* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 19.40* skx, 85.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(17.60 * skx, 82.50* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 15.90* skx, 82.70* sky);
		c.curveTo(15.40 * skx, 82.90 * sky, 15.70 * skx, 83.80 * sky, 16.20 * skx, 83.60 * sky);
		c.lineTo(17.60* skx,83.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 17.60* skx, 82.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(25.10 * skx, 83.00* sky);
		c.lineTo(24.90 * skx,83.00* sky);
		c.curveTo(24.30 * skx, 83.00 * sky, 24.40 * skx, 83.90 * sky, 24.90 * skx, 83.90 * sky);
		c.lineTo(25.20 * skx,83.90* sky);
		c.curveTo(25.70 * skx, 83.80 * sky, 25.70 * skx, 83.10 * sky, 25.10 * skx, 83.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(23.90 * skx, 78.70* sky);
		c.curveTo(23.60 * skx, 78.70 * sky, 23.50 * skx, 79.30 * sky, 23.90 * skx, 79.30 * sky);
		c.arcTo(0.30 * skx, 0.30 * sky, 0, 0, 0, 23.90* skx, 78.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(31.90 * skx, 75.80* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 31.90* skx, 76.60* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 31.90* skx, 75.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(25.90 * skx, 72.10* sky);
		c.curveTo(25.30 * skx, 72.10 * sky, 25.30 * skx, 72.90 * sky, 25.80 * skx, 72.90 * sky);
		c.curveTo(26.3 * skx, 72.9 * sky, 26.40 * skx, 72.10 * sky, 25.90 * skx, 72.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(36.00 * skx, 62.50* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 34.50* skx, 62.60* sky);
		c.curveTo(33.90 * skx, 62.90 * sky, 34.40 * skx, 63.70 * sky, 35.00 * skx, 63.50 * sky);
		c.curveTo(35.6 * skx, 63.3 * sky, 35.70 * skx, 63.40 * sky, 36.10 * skx, 63.20 * sky);
		c.curveTo(36.5 * skx, 63.00000000000001 * sky, 36.30 * skx, 62.60 * sky, 36.00 * skx, 62.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(33.60 * skx, 70.70* sky);
		c.lineTo(33.10* skx,71.10* sky);
		c.curveTo(32.60 * skx, 71.50 * sky, 33.30 * skx, 72.30 * sky, 33.70 * skx, 71.80 * sky);
		c.lineTo(34.20* skx,71.20* sky);
		c.curveTo(34.50 * skx, 70.90 * sky, 33.90 * skx, 70.50 * sky, 33.60 * skx, 70.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(40.30 * skx, 52.60* sky);
		c.lineTo(40.20 * skx,52.60* sky);
		c.curveTo(39.60 * skx, 52.70 * sky, 39.90 * skx, 53.70 * sky, 40.60 * skx, 53.50 * sky);
		c.lineTo(40.60 * skx,53.50* sky);
		c.lineTo(40.90* skx,53.30* sky);
		c.arcTo(0.60 * skx, 0.60 * sky, 0, 0, 0, 41.00* skx, 53.00* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 40.30* skx, 52.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(46.40 * skx, 60.80* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 45.80* skx, 60.60* sky);
		c.lineTo(45.70 * skx,60.60* sky);
		c.curveTo(45.60 * skx, 60.70 * sky, 45.50 * skx, 60.70 * sky, 45.50 * skx, 60.90 * sky);
		c.curveTo(45.5 * skx, 61.099999999999994 * sky, 45.70 * skx, 61.80 * sky, 46.20 * skx, 61.50 * sky);
		c.lineTo(46.40* skx,61.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 46.40* skx, 60.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(45.90 * skx, 60.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(45.90 * skx, 60.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(50.20 * skx, 51.20* sky);
		c.curveTo(50.10 * skx, 51.30 * sky, 50.00 * skx, 51.40 * sky, 50.00 * skx, 51.50 * sky);
		c.lineTo(49.90 * skx,51.50* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 50.00* skx, 52.40* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 50.80* skx, 51.60* sky);
		c.curveTo(50.80 * skx, 51.30 * sky, 50.40 * skx, 51.00 * sky, 50.20 * skx, 51.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(56.50 * skx, 60.40* sky);
		c.lineTo(56.30* skx,60.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 55.70* skx, 60.30* sky);
		c.curveTo(55.50 * skx, 60.50 * sky, 55.60 * skx, 60.70 * sky, 55.70 * skx, 60.90 * sky);
		c.arcTo(0.10 * skx, 0.10 * sky, 0, 0, 1, 55.80* skx, 61.00* sky);
		c.curveTo(56.20 * skx, 61.30 * sky, 56.80 * skx, 60.80 * sky, 56.50 * skx, 60.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(53.90 * skx, 76.50* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 53.20* skx, 75.50* sky);
		c.curveTo(52.90 * skx, 75.10 * sky, 52.30 * skx, 75.70 * sky, 52.60 * skx, 76.00 * sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 0, 53.40* skx, 76.90* sky);
		c.curveTo(53.70 * skx, 77.10 * sky, 54.20 * skx, 76.80 * sky, 53.90 * skx, 76.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(50.00 * skx, 87.40* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 49.50* skx, 86.90* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 49.00* skx, 87.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 49.40* skx, 88.20* sky);
		c.curveTo(49.60 * skx, 88.50 * sky, 50.00 * skx, 88.30 * sky, 50.10 * skx, 88.00 * sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 0, 50.00* skx, 87.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(39.90 * skx, 95.50* sky);
		c.curveTo(39.40 * skx, 95.50 * sky, 39.30 * skx, 96.00 * sky, 39.50 * skx, 96.40 * sky);
		c.lineTo(39.60 * skx,96.40* sky);
		c.curveTo(39.70 * skx, 96.60 * sky, 40.00 * skx, 96.60 * sky, 40.20 * skx, 96.40 * sky);
		c.lineTo(40.30 * skx,96.40* sky);
		c.curveTo(40.60 * skx, 96.00 * sky, 40.30 * skx, 95.50 * sky, 39.90 * skx, 95.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(52.90 * skx, 102.10* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 0, 52.50* skx, 101.60* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 51.90* skx, 102.00* sky);
		c.lineTo(51.90 * skx,102.00* sky);
		c.curveTo(51.50 * skx, 102.70 * sky, 52.80 * skx, 103.10 * sky, 52.90 * skx, 102.30 * sky);
		c.lineTo(52.90 * skx,102.30* sky);
		c.curveTo(52.90 * skx, 102.30 * sky, 53.00 * skx, 102.20 * sky, 52.90 * skx, 102.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(46.20 * skx, 95.80* sky);
		c.curveTo(46.10 * skx, 95.70 * sky, 46.10 * skx, 95.40 * sky, 46.10 * skx, 95.30 * sky);
		c.curveTo(46.1 * skx, 95.19999999999999 * sky, 45.40 * skx, 94.80 * sky, 45.30 * skx, 95.20 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 45.20* skx, 95.80* sky);
		c.curveTo(45.10 * skx, 96.00 * sky, 45.30 * skx, 96.30 * sky, 45.60 * skx, 96.40 * sky);
		c.lineTo(45.90 * skx,96.40* sky);
		c.curveTo(46.10 * skx, 96.20 * sky, 46.30 * skx, 96.00 * sky, 46.20 * skx, 95.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(54.80 * skx, 93.70* sky);
		c.curveTo(54.60 * skx, 93.20 * sky, 53.90 * skx, 93.30 * sky, 54.00 * skx, 93.80 * sky);
		c.arcTo(8.80 * skx, 8.80 * sky, 0, 0, 1, 53.80* skx, 95.40* sky);
		c.curveTo(53.70 * skx, 96.00 * sky, 54.70 * skx, 96.20 * sky, 54.90 * skx, 95.60 * sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 54.80* skx, 93.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(55.30 * skx, 86.70* sky);
		c.curveTo(55.30 * skx, 86.30 * sky, 54.80 * skx, 86.20 * sky, 54.60 * skx, 86.60 * sky);
		c.curveTo(54.400000000000006 * skx, 86.99999999999999 * sky, 54.40 * skx, 87.00 * sky, 54.40 * skx, 87.20 * sky);
		c.curveTo(54.4 * skx, 87.4 * sky, 55.40 * skx, 88.00 * sky, 55.30 * skx, 87.30 * sky);
		c.curveTo(55.199999999999996 * skx, 86.6 * sky, 55.40 * skx, 86.90 * sky, 55.30 * skx, 86.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(48.30 * skx, 64.40* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 48.30* skx, 65.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 48.30* skx, 64.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(52.00 * skx, 55.80* sky);
		c.curveTo(51.50 * skx, 55.80 * sky, 51.50 * skx, 56.70 * sky, 52.00 * skx, 56.70 * sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 52.00* skx, 55.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(52.90 * skx, 43.70* sky);
		c.curveTo(52.20 * skx, 43.70 * sky, 52.30 * skx, 44.80 * sky, 53.00 * skx, 44.80 * sky);
		c.curveTo(53.7 * skx, 44.8 * sky, 53.50 * skx, 43.70 * sky, 52.90 * skx, 43.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(45.20 * skx, 52.70* sky);
		c.curveTo(44.60 * skx, 52.70 * sky, 44.70 * skx, 53.60 * sky, 45.30 * skx, 53.60 * sky);
		c.curveTo(45.89999999999999 * skx, 53.6 * sky, 45.70 * skx, 52.70 * sky, 45.20 * skx, 52.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(38.30 * skx, 62.50* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 38.30* skx, 63.30* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 38.30* skx, 62.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(76.30 * skx, 88.30* sky);
		c.lineTo(76.10 * skx,88.30* sky);
		c.curveTo(75.80 * skx, 88.50 * sky, 75.80 * skx, 88.90 * sky, 76.10 * skx, 89.00 * sky);
		c.lineTo(76.40* skx,89.20* sky);
		c.curveTo(76.70 * skx, 89.40 * sky, 77.10 * skx, 89.10 * sky, 77.10 * skx, 88.70 * sky);
		c.curveTo(77.1 * skx, 88.30000000000001 * sky, 76.70 * skx, 88.10 * sky, 76.30 * skx, 88.30 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(68.20 * skx, 80.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 67.50* skx, 80.20* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 67.50* skx, 81.20* sky);
		c.curveTo(67.60 * skx, 81.70 * sky, 68.50 * skx, 81.70 * sky, 68.50 * skx, 81.10 * sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 68.20* skx, 80.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(70.10 * skx, 73.50* sky);
		c.lineTo(69.20* skx,74.20* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 69.10* skx, 74.90* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 69.80* skx, 74.90* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 70.70* skx, 74.10* sky);
		c.curveTo(71.00 * skx, 73.80 * sky, 70.60 * skx, 73.20 * sky, 70.10 * skx, 73.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(83.20 * skx, 71.90* sky);
		c.lineTo(82.50 * skx,71.90* sky);
		c.curveTo(82.00 * skx, 72.00 * sky, 82.10 * skx, 72.90 * sky, 82.60 * skx, 72.90 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 83.80* skx, 72.50* sky);
		c.curveTo(84.10 * skx, 72.30 * sky, 83.60 * skx, 71.70 * sky, 83.20 * skx, 71.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(93.60 * skx, 70.70* sky);
		c.lineTo(93.50 * skx,70.70* sky);
		c.lineTo(93.50* skx,71.10 * sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 0, 94.00* skx, 71.50* sky);
		c.lineTo(94.30* skx,70.70* sky);
		c.curveTo(94.10 * skx, 70.50 * sky, 93.70 * skx, 70.40 * sky, 93.60 * skx, 70.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(79.80 * skx, 68.40* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 79.80* skx, 69.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 79.80* skx, 68.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(78.30 * skx, 61.50* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 0, 77.80* skx, 62.40* sky);
		c.curveTo(77.80 * skx, 62.90 * sky, 78.60 * skx, 62.90 * sky, 78.70 * skx, 62.40 * sky);
		c.lineTo(78.70* skx,62.00 * sky);
		c.curveTo(78.80 * skx, 61.70 * sky, 78.60 * skx, 61.40 * sky, 78.30 * skx, 61.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(84.10 * skx, 55.20* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 83.60* skx, 56.60* sky);
		c.curveTo(83.80 * skx, 57.10 * sky, 84.70 * skx, 56.90 * sky, 84.60 * skx, 56.40 * sky);
		c.curveTo(84.49999999999999 * skx, 55.9 * sky, 84.70 * skx, 55.90 * sky, 84.70 * skx, 55.80 * sky);
		c.curveTo(84.7 * skx, 55.699999999999996 * sky, 84.50 * skx, 54.80 * sky, 84.10 * skx, 55.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(99.00 * skx, 50.70* sky);
		c.lineTo(97.40* skx,51.20* sky);
		c.curveTo(96.90 * skx, 51.40 * sky, 97.20 * skx, 52.20 * sky, 97.70 * skx, 52.10 * sky);
		c.lineTo(99.40* skx,51.40* sky);
		c.curveTo(99.80 * skx, 51.20 * sky, 99.50 * skx, 50.50 * sky, 99.00 * skx, 50.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(110.40 * skx, 47.40* sky);
		c.curveTo(110.10 * skx, 47.50 * sky, 109.90 * skx, 47.70 * sky, 109.60 * skx, 47.70 * sky);
		c.curveTo(109.29999999999998 * skx, 47.7 * sky, 109.20 * skx, 48.60 * sky, 109.80 * skx, 48.60 * sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 110.90* skx, 47.90* sky);
		c.curveTo(111.10 * skx, 47.50 * sky, 110.70 * skx, 47.10 * sky, 110.40 * skx, 47.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(114.10 * skx, 39.40* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 114.10* skx, 40.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 114.10* skx, 39.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(105.10 * skx, 45.10* sky);
		c.lineTo(104.50 * skx,45.10* sky);
		c.lineTo(104.00* skx,44.90* sky);
		c.curveTo(103.50 * skx, 44.80 * sky, 103.10 * skx, 45.30 * sky, 103.50 * skx, 45.70 * sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 104.80* skx, 46.30* sky);
		c.curveTo(105.00 * skx, 46.30 * sky, 105.30 * skx, 46.30 * sky, 105.40 * skx, 46.00 * sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 105.10* skx, 45.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(92.50 * skx, 44.40* sky);
		c.lineTo(92.10* skx,44.80* sky);
		c.curveTo(91.90 * skx, 45.10 * sky, 92.20 * skx, 45.50 * sky, 92.50 * skx, 45.30 * sky);
		c.lineTo(93.10* skx,45.10* sky);
		c.curveTo(93.60 * skx, 44.80 * sky, 93.00 * skx, 44.00 * sky, 92.50 * skx, 44.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(87.10 * skx, 49.30* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 0, 87.20* skx, 50.50* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 87.90* skx, 50.50* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 1, 88.00* skx, 49.30* sky);
		c.curveTo(88.00 * skx, 48.70 * sky, 87.10 * skx, 48.80 * sky, 87.10 * skx, 49.30 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(94.60 * skx, 51.70* sky);
		c.curveTo(94.70 * skx, 51.90 * sky, 94.60 * skx, 51.60 * sky, 94.60 * skx, 51.60 * sky);
		c.lineTo(94.40* skx,51.30* sky);
		c.curveTo(94.00 * skx, 50.80 * sky, 93.30 * skx, 51.40 * sky, 93.70 * skx, 51.80 * sky);
		c.lineTo(93.90* skx,52.10* sky);
		c.curveTo(94.20 * skx, 52.50 * sky, 94.90 * skx, 52.20 * sky, 94.60 * skx, 51.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(78.40 * skx, 53.00* sky);
		c.curveTo(77.90 * skx, 53.00 * sky, 77.80 * skx, 53.80 * sky, 78.30 * skx, 53.80 * sky);
		c.curveTo(78.8 * skx, 53.8 * sky, 78.90 * skx, 53.00 * sky, 78.40 * skx, 53.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(77.60 * skx, 47.10* sky);
		c.curveTo(77.60 * skx, 47.00 * sky, 77.50 * skx, 46.90 * sky, 77.50 * skx, 46.80 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 76.80* skx, 46.80* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 76.70* skx, 47.20* sky);
		c.curveTo(76.60 * skx, 47.40 * sky, 77.00 * skx, 47.70 * sky, 77.20 * skx, 47.70 * sky);
		c.curveTo(77.4 * skx, 47.7 * sky, 77.70 * skx, 47.30 * sky, 77.60 * skx, 47.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(70.30 * skx, 37.60* sky);
		c.lineTo(70.30 * skx,37.60* sky);
		c.curveTo(70.00 * skx, 37.40 * sky, 69.50 * skx, 37.80 * sky, 69.60 * skx, 38.20 * sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 0, 70.80* skx, 38.50* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 70.30* skx, 37.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(76.60 * skx, 32.60* sky);
		c.lineTo(76.10* skx,32.40* sky);
		c.lineTo(75.90 * skx,32.40* sky);
		c.curveTo(75.90 * skx, 32.50 * sky, 75.60 * skx, 32.70 * sky, 75.70 * skx, 32.70 * sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 75.60* skx, 33.00* sky);
		c.curveTo(75.60 * skx, 33.10 * sky, 75.70 * skx, 33.30 * sky, 75.80 * skx, 33.30 * sky);
		c.curveTo(75.89999999999999 * skx, 33.3 * sky, 76.10 * skx, 33.30 * sky, 76.20 * skx, 33.30 * sky);
		c.curveTo(76.30000000000001 * skx, 33.3 * sky, 76.70 * skx, 32.90 * sky, 76.60 * skx, 32.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(62.60 * skx, 41.80* sky);
		c.curveTo(62.40 * skx, 41.70 * sky, 62.10 * skx, 41.70 * sky, 62.00 * skx, 41.90 * sky);
		c.arcTo(16.20 * skx, 16.20 * sky, 0, 0, 0, 61.00* skx, 43.70* sky);
		c.curveTo(60.90 * skx, 44.00 * sky, 61.20 * skx, 44.40 * sky, 61.50 * skx, 44.20 * sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 62.80* skx, 42.50* sky);
		c.curveTo(62.90 * skx, 42.20 * sky, 62.90 * skx, 41.90 * sky, 62.60 * skx, 41.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(57.40 * skx, 49.80* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 57.30* skx, 50.70* sky);
		c.curveTo(57.30 * skx, 51.10 * sky, 57.90 * skx, 51.00 * sky, 58.00 * skx, 50.70 * sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 58.20* skx, 49.80* sky);
		c.curveTo(58.30 * skx, 49.20 * sky, 57.40 * skx, 49.10 * sky, 57.40 * skx, 49.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(64.00 * skx, 56.80* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 63.20* skx, 57.20* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 63.40* skx, 58.00* sky);
		c.curveTo(63.30 * skx, 58.40 * sky, 63.80 * skx, 58.50 * sky, 64.00 * skx, 58.20 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 64.00* skx, 56.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(53.00 * skx, 65.50* sky);
		c.curveTo(53.00 * skx, 65.30 * sky, 53.00 * skx, 65.20 * sky, 52.80 * skx, 65.10 * sky);
		c.lineTo(52.40 * skx,65.10* sky);
		c.curveTo(51.90 * skx, 65.10 * sky, 51.90 * skx, 66.00 * sky, 52.40 * skx, 66.00 * sky);
		c.lineTo(52.60 * skx,66.00* sky);
		c.curveTo(52.90 * skx, 66.00 * sky, 53.00 * skx, 65.70 * sky, 53.00 * skx, 65.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(59.80 * skx, 72.70* sky);
		c.lineTo(59.70 * skx,72.70* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 59.10* skx, 73.50* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 60.30* skx, 73.30* sky);
		c.curveTo(60.60 * skx, 73.00 * sky, 60.20 * skx, 72.60 * sky, 59.80 * skx, 72.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(68.80 * skx, 70.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 68.10* skx, 70.20* sky);
		c.lineTo(68.10* skx,70.50 * sky);
		c.curveTo(68.00 * skx, 71.20 * sky, 69.10 * skx, 71.20 * sky, 69.00 * skx, 70.60 * sky);
		c.curveTo(68.9 * skx, 69.99999999999999 * sky, 68.80 * skx, 70.30 * sky, 68.80 * skx, 70.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(61.30 * skx, 68.00* sky);
		c.lineTo(60.50* skx,68.50* sky);
		c.curveTo(60.10 * skx, 69.00 * sky, 60.80 * skx, 69.50 * sky, 61.20 * skx, 69.20 * sky);
		c.lineTo(61.80* skx,68.70* sky);
		c.curveTo(62.10 * skx, 68.30 * sky, 61.70 * skx, 67.70 * sky, 61.30 * skx, 68.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(74.10 * skx, 67.90* sky);
		c.lineTo(73.80* skx,67.50* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 73.10* skx, 68.00* sky);
		c.lineTo(73.10 * skx,68.00* sky);
		c.arcTo(0.60 * skx, 0.60 * sky, 0, 0, 0, 73.70* skx, 68.50* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 74.10* skx, 67.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(67.10 * skx, 62.20* sky);
		c.arcTo(7.60 * skx, 7.60 * sky, 0, 0, 0, 66.20* skx, 63.10* sky);
		c.curveTo(66.00 * skx, 63.20 * sky, 66.10 * skx, 63.60 * sky, 66.20 * skx, 63.70 * sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 66.90* skx, 63.60* sky);
		c.lineTo(67.70* skx,62.70* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 67.10* skx, 62.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(75.70 * skx, 56.00* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 0, 74.80* skx, 55.10* sky);
		c.curveTo(74.40 * skx, 54.70 * sky, 73.90 * skx, 55.30 * sky, 74.20 * skx, 55.60 * sky);
		c.lineTo(74.80* skx,56.40* sky);
		c.curveTo(75.00 * skx, 57.10 * sky, 76.10 * skx, 56.50 * sky, 75.70 * skx, 56.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(66.70 * skx, 51.10* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 66.70* skx, 51.90* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 66.70* skx, 51.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(69.00 * skx, 43.90* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 69.00* skx, 44.70* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 69.00* skx, 43.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(57.10 * skx, 65.90* sky);
		c.curveTo(56.60 * skx, 65.90 * sky, 56.50 * skx, 66.70 * sky, 57.00 * skx, 66.70 * sky);
		c.curveTo(57.5 * skx, 66.7 * sky, 57.60 * skx, 65.90 * sky, 57.10 * skx, 65.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(42.90 * skx, 66.90* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 42.90* skx, 67.70* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 42.90* skx, 66.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(41.80 * skx, 57.60* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 41.00* skx, 57.70* sky);
		c.lineTo(41.00 * skx,57.70* sky);
		c.curveTo(40.80 * skx, 58.40 * sky, 41.90 * skx, 58.30 * sky, 41.80 * skx, 57.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.90 * skx, 53.20* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 32.90* skx, 54.00* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 1, 0, 32.90* skx, 53.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(106.60 * skx, 49.00* sky);
		c.curveTo(105.00 * skx, 47.80 * sky, 99.20 * skx, 44.40 * sky, 99.80 * skx, 46.80 * sky);
		c.curveTo(100.39999999999999 * skx, 49.199999999999996 * sky, 99.50 * skx, 49.00 * sky, 102.30 * skx, 50.00 * sky);
		c.curveTo(105.1 * skx, 51.0 * sky, 109.00 * skx, 50.80 * sky, 106.60 * skx, 49.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(66.20 * skx, 36.00* sky);
		c.curveTo(70.70 * skx, 37.20 * sky, 67.80 * skx, 45.40 * sky, 65.50 * skx, 46.30 * sky);
		c.curveTo(63.2 * skx, 47.199999999999996 * sky, 64.40 * skx, 47.70 * sky, 64.00 * skx, 44.40 * sky);
		c.curveTo(63.599999999999994 * skx, 41.099999999999994 * sky, 62.10 * skx, 43.70 * sky, 63.30 * skx, 39.70 * sky);
		c.curveTo(64.5 * skx, 35.7 * sky, 63.60 * skx, 35.20 * sky, 66.20 * skx, 36.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(53.90 * skx, 36.70* sky);
		c.curveTo(50.60 * skx, 36.80 * sky, 46.70 * skx, 40.00 * sky, 50.40 * skx, 41.30 * sky);
		c.curveTo(54.099999999999994 * skx, 42.599999999999994 * sky, 56.20 * skx, 43.80 * sky, 55.90 * skx, 41.90 * sky);
		c.curveTo(55.599999999999994 * skx, 40.0 * sky, 58.50 * skx, 36.60 * sky, 53.90 * skx, 36.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(35.90 * skx, 13.80* sky);
		c.curveTo(33.80 * skx, 14.40 * sky, 35.00 * skx, 15.40 * sky, 36.80 * skx, 18.20 * sky);
		c.curveTo(38.599999999999994 * skx, 21.0 * sky, 41.70 * skx, 20.50 * sky, 39.80 * skx, 18.20 * sky);
		c.curveTo(37.89999999999999 * skx, 15.899999999999999 * sky, 37.80 * skx, 13.20 * sky, 35.90 * skx, 13.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(17.10 * skx, 47.40* sky);
		c.curveTo(14.20 * skx, 47.90 * sky, 7.50 * skx, 45.90 * sky, 5.10 * skx, 52.10 * sky);
		c.curveTo(4.20 * skx, 54.70 * sky, 8.70 * skx, 51.80 * sky, 11.70 * skx, 50.80 * sky);
		c.curveTo(14.7 * skx, 49.8 * sky, 19.60 * skx, 46.90 * sky, 17.10 * skx, 47.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(44.50 * skx, 61.60* sky);
		c.curveTo(38.90 * skx, 61.40 * sky, 34.40 * skx, 70.10 * sky, 37.40 * skx, 70.30 * sky);
		c.curveTo(40.4 * skx, 70.5 * sky, 41.70 * skx, 65.10 * sky, 43.60 * skx, 64.10 * sky);
		c.curveTo(45.5 * skx, 63.099999999999994 * sky, 46.70 * skx, 61.60 * sky, 44.50 * skx, 61.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(53.70 * skx, 79.60* sky);
		c.curveTo(52.90 * skx, 83.60 * sky, 44.50 * skx, 90.00 * sky, 46.40 * skx, 85.80 * sky);
		c.curveTo(48.3 * skx, 81.6 * sky, 48.50 * skx, 78.90 * sky, 51.00 * skx, 78.10 * sky);
		c.curveTo(53.5 * skx, 77.29999999999998 * sky, 54.20 * skx, 76.50 * sky, 53.70 * skx, 79.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(79.80 * skx, 93.90* sky);
		c.curveTo(79.00 * skx, 96.10 * sky, 82.80 * skx, 99.70 * sky, 84.10 * skx, 97.50 * sky);
		c.curveTo(85.39999999999999 * skx, 95.3 * sky, 86.20 * skx, 94.70 * sky, 84.50 * skx, 94.10 * sky);
		c.curveTo(82.8 * skx, 93.49999999999999 * sky, 80.20 * skx, 93.10 * sky, 79.80 * skx, 93.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(65.70 * skx, 60.30* sky);
		c.curveTo(60.70 * skx, 60.30 * sky, 56.50 * skx, 58.40 * sky, 55.80 * skx, 55.90 * sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 55.60* skx, 56.70* sky);
		c.curveTo(55.60 * skx, 59.60 * sky, 60.10 * skx, 61.90 * sky, 65.70 * skx, 61.90 * sky);
		c.curveTo(71.30000000000001 * skx, 61.9 * sky, 75.70 * skx, 59.60 * sky, 75.70 * skx, 56.70 * sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 75.60* skx, 55.90* sky);
		c.curveTo(74.90 * skx, 58.40 * sky, 70.70 * skx, 60.30 * sky, 65.70 * skx, 60.30 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(75.70 * skx, 56.70* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 75.30* skx, 55.40* sky);
		c.lineTo(74.90* skx,54.70* sky);
		c.lineTo(74.20* skx,54.10* sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 0, 72.30* skx, 53.00* sky);
		c.arcTo(15.00 * skx, 15.00 * sky, 0, 0, 0, 66.70* skx, 51.80* sky);
		c.arcTo(17.50 * skx, 17.50 * sky, 0, 0, 0, 59.70* skx, 52.80* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 0, 56.70* skx, 54.70* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 55.80* skx, 56.10* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 55.90* skx, 57.70* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 0, 58.00* skx, 59.90* sky);
		c.arcTo(8.60 * skx, 8.60 * sky, 0, 0, 0, 60.40* skx, 61.00* sky);
		c.arcTo(19.90 * skx, 19.90 * sky, 0, 0, 0, 64.20* skx, 61.80* sky);
		c.lineTo(64.20 * skx,61.80* sky);
		c.arcTo(16.90 * skx, 16.90 * sky, 0, 0, 1, 60.40* skx, 61.20* sky);
		c.arcTo(13.60 * skx, 13.60 * sky, 0, 0, 1, 57.90* skx, 60.10* sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 1, 55.70* skx, 57.80* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 55.60* skx, 56.10* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 56.50* skx, 54.50* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 1, 59.60* skx, 52.50* sky);
		c.arcTo(18.00 * skx, 18.00 * sky, 0, 0, 1, 66.70* skx, 51.50* sky);
		c.arcTo(17.70 * skx, 17.70 * sky, 0, 0, 1, 72.40* skx, 52.80* sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 1, 74.30* skx, 54.00* sky);
		c.lineTo(75.00* skx,54.70* sky);
		c.lineTo(75.40* skx,55.30* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 75.70* skx, 56.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(65.70 * skx, 61.90* sky);
		c.lineTo(67.50 * skx,61.90* sky);
		c.arcTo(15.10 * skx, 15.10 * sky, 0, 0, 0, 71.60* skx, 60.90* sky);
		c.arcTo(7.40 * skx, 7.40 * sky, 0, 0, 0, 75.10* skx, 58.60* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 75.70* skx, 56.90* sky);
		c.lineTo(75.70* skx,57.40 * sky);
		c.curveTo(75.70 * skx, 57.60 * sky, 75.60 * skx, 57.80 * sky, 75.60 * skx, 58.00 * sky);
		c.lineTo(75.20* skx,58.70* sky);
		c.arcTo(7.50 * skx, 7.50 * sky, 0, 0, 1, 71.70* skx, 61.00* sky);
		c.arcTo(15.90 * skx, 15.90 * sky, 0, 0, 1, 67.50* skx, 61.90* sky);
		c.lineTo(65.70 * skx,61.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(42.40 * skx, 50.00* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 1, 36.90* skx, 44.40* sky);
		c.lineTo(36.90* skx,43.90 * sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 0, 36.70* skx, 45.40* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 42.20* skx, 51.00* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 0, 47.70* skx, 46.00* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 1, 42.40* skx, 50.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(42.10 * skx, 50.90* sky);
		c.lineTo(43.50 * skx,50.90* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 46.50* skx, 48.80* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 47.50* skx, 46.50* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 0, 47.20* skx, 43.60* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 46.50* skx, 42.30* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 45.30* skx, 41.10* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 38.90* skx, 41.10* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 0, 37.70* skx, 42.30* sky);
		c.arcTo(8.30 * skx, 8.30 * sky, 0, 0, 0, 37.00* skx, 43.60* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 0, 36.70* skx, 46.50* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 0, 37.70* skx, 48.80* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 0, 40.80* skx, 50.90* sky);
		c.lineTo(40.80 * skx,50.90* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 1, 37.60* skx, 48.90* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 1, 36.60* skx, 46.50* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 1, 36.80* skx, 43.60* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 1, 37.50* skx, 42.10* sky);
		c.arcTo(13.60 * skx, 13.60 * sky, 0, 0, 1, 38.70* skx, 40.90* sky);
		c.arcTo(6.00 * skx, 6.00 * sky, 0, 0, 1, 42.10* skx, 39.80* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 1, 45.50* skx, 40.90* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 46.70* skx, 42.10* sky);
		c.arcTo(10.90 * skx, 10.90 * sky, 0, 0, 1, 47.50* skx, 43.60* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 1, 47.70* skx, 46.50* sky);
		c.arcTo(5.30 * skx, 5.30 * sky, 0, 0, 1, 46.60* skx, 48.90* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 1, 43.50* skx, 50.90* sky);
		c.lineTo(42.10 * skx,50.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(79.10 * skx, 50.50* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 79.40* skx, 51.60* sky);
		c.lineTo(79.70* skx,52.10* sky);
		c.lineTo(80.30* skx,52.60* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 81.80* skx, 53.10* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 83.20* skx, 52.60* sky);
		c.lineTo(83.80* skx,52.10* sky);
		c.lineTo(84.10* skx,51.60* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 84.40* skx, 50.50* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 84.10* skx, 51.70* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 83.80* skx, 52.20* sky);
		c.curveTo(83.70 * skx, 52.40 * sky, 83.50 * skx, 52.50 * sky, 83.30 * skx, 52.70 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 81.80* skx, 53.20* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 80.20* skx, 52.70* sky);
		c.curveTo(80.00 * skx, 52.50 * sky, 79.80 * skx, 52.40 * sky, 79.70 * skx, 52.20 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 79.40* skx, 51.70* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 79.10* skx, 50.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(84.40 * skx, 50.50* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 84.10* skx, 49.30* sky);
		c.lineTo(83.80* skx,48.80* sky);
		c.lineTo(83.20* skx,48.30* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 81.80* skx, 47.90* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 80.30* skx, 48.30* sky);
		c.lineTo(79.70* skx,48.80* sky);
		c.lineTo(79.40* skx,49.30* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 79.10* skx, 50.50* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 79.40* skx, 49.30* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 1, 79.70* skx, 48.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 80.20* skx, 48.30* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 81.80* skx, 47.80* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 83.30* skx, 48.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 83.80* skx, 48.80* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 1, 84.10* skx, 49.30* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 84.40* skx, 50.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(83.30 * skx, 50.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 82.60* skx, 49.10* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 80.10* skx, 50.80* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 80.70* skx, 51.30* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 81.50* skx, 52.00* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 83.10* skx, 51.60* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 83.30* skx, 50.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(66.90 * skx, 30.70* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 67.20* skx, 31.90* sky);
		c.lineTo(67.50* skx,32.40* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 68.00* skx, 32.80* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 69.50* skx, 33.30* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 71.00* skx, 32.80* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 71.50* skx, 32.40* sky);
		c.lineTo(71.90* skx,31.90* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 72.20* skx, 30.70* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 1, 71.90* skx, 31.90* sky);
		c.lineTo(71.60* skx,32.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 71.10* skx, 32.90* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 69.50* skx, 33.40* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 68.00* skx, 32.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 67.50* skx, 32.40* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 67.10* skx, 31.90* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 66.90* skx, 30.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(72.20 * skx, 30.70* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 71.90* skx, 29.50* sky);
		c.lineTo(71.50* skx,29.00* sky);
		c.lineTo(71.00* skx,28.60* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 69.50* skx, 28.10* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 68.00* skx, 28.60* sky);
		c.lineTo(67.50* skx,29.00* sky);
		c.lineTo(67.20* skx,29.50* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 66.90* skx, 30.70* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 67.10* skx, 29.50* sky);
		c.lineTo(67.50* skx,29.00* sky);
		c.curveTo(67.60 * skx, 28.80 * sky, 67.80 * skx, 28.70 * sky, 68.00 * skx, 28.50 * sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 69.50* skx, 28.00* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 71.10* skx, 28.50* sky);
		c.curveTo(71.30 * skx, 28.70 * sky, 71.50 * skx, 28.80 * sky, 71.60 * skx, 29.00 * sky);
		c.lineTo(71.90* skx,29.50* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 1, 72.20* skx, 30.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(71.00 * skx, 30.50* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 70.40* skx, 29.30* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 67.90* skx, 31.10* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 68.50* skx, 31.60* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 69.30* skx, 32.30* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 70.90* skx, 31.80* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 71.00* skx, 30.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(51.50 * skx, 72.50* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 51.60* skx, 73.00* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 52.00* skx, 74.30* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 53.30* skx, 75.70* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 0, 55.50* skx, 76.40* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 57.80* skx, 75.70* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 59.10* skx, 74.30* sky);
		c.curveTo(59.30 * skx, 73.80 * sky, 59.40 * skx, 73.30 * sky, 59.50 * skx, 73.00 * sky);
		c.lineTo(59.50* skx,73.00 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 59.10* skx, 74.30* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 1, 57.90* skx, 75.80* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 1, 55.50* skx, 76.60* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 53.20* skx, 75.80* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 1, 51.90* skx, 74.30* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 1, 51.60* skx, 73.00* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 51.50* skx, 72.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(59.50 * skx, 72.50* sky);
		c.lineTo(59.50* skx,72.00 * sky);
		c.lineTo(59.10* skx,70.80* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 57.80* skx, 69.30* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 55.50* skx, 68.60* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 0, 53.30* skx, 69.30* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 52.00* skx, 70.80* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 51.60* skx, 72.00* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 51.50* skx, 72.50* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 51.60* skx, 72.00* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 1, 51.90* skx, 70.70* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 1, 53.20* skx, 69.20* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 55.50* skx, 68.40* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 1, 57.90* skx, 69.20* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 1, 59.10* skx, 70.70* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 59.50* skx, 72.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(57.80 * skx, 72.20* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 56.80* skx, 70.40* sky);
		c.curveTo(55.00 * skx, 69.50 * sky, 53.10 * skx, 71.20 * sky, 53.00 * skx, 73.10 * sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 53.90* skx, 73.80* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 55.10* skx, 74.90* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 57.60* skx, 74.20* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 57.80* skx, 72.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(31.00 * skx, 65.80* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 31.30* skx, 67.00* sky);
		c.lineTo(31.60* skx,67.50* sky);
		c.lineTo(32.10* skx,67.90* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 33.60* skx, 68.40* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 35.10* skx, 67.90* sky);
		c.lineTo(35.60* skx,67.50* sky);
		c.lineTo(36.00* skx,67.00* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 36.30* skx, 65.80* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 36.00* skx, 67.00* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 1, 35.70* skx, 67.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 35.20* skx, 68.00* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 33.60* skx, 68.50* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 32.10* skx, 68.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 31.60* skx, 67.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 31.20* skx, 67.00* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 31.00* skx, 65.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(36.30 * skx, 65.80* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 36.00* skx, 64.60* sky);
		c.lineTo(35.60* skx,64.10* sky);
		c.lineTo(35.10* skx,63.70* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 33.60* skx, 63.20* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 32.10* skx, 63.70* sky);
		c.lineTo(31.60* skx,64.10* sky);
		c.lineTo(31.30* skx,64.60* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 31.00* skx, 65.80* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 31.20* skx, 64.60* sky);
		c.lineTo(31.60* skx,64.10* sky);
		c.curveTo(31.70 * skx, 63.90 * sky, 31.90 * skx, 63.80 * sky, 32.10 * skx, 63.60 * sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 33.60* skx, 63.10* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 35.20* skx, 63.60* sky);
		c.lineTo(35.70* skx,64.10* sky);
		c.curveTo(35.90 * skx, 64.30 * sky, 36.00 * skx, 64.40 * sky, 36.00 * skx, 64.60 * sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 36.30* skx, 65.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(35.20 * skx, 65.60* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 34.50* skx, 64.40* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 32.00* skx, 66.20* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 32.60* skx, 66.70* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 33.40* skx, 67.40* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 35.00* skx, 66.90* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 35.20* skx, 65.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m30fab2a281cd2c738769983a755b0f1', m30fab2a281cd2c738769983a755b0f1);
	m30fab2a281cd2c738769983a755b0f1.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m85136750a38b9c13a57d8887904cc0f() {
		mxActor.call(this);
	};
	mxUtils.extend(m85136750a38b9c13a57d8887904cc0f, mxActor);
	m85136750a38b9c13a57d8887904cc0f.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 55;
		h1 = 55;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(54.40 * skx, 34.20* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 0, 53.00* skx, 33.40* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 1, 51.30* skx, 30.50* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 53.00* skx, 27.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 53.50* skx, 27.00* sky);
		c.curveTo(53.70 * skx, 26.60 * sky, 53.10 * skx, 26.20 * sky, 52.60 * skx, 26.30 * sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 0, 51.40* skx, 26.90* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 49.70* skx, 26.20* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 49.90* skx, 24.50* sky);
		c.curveTo(50.40 * skx, 23.90 * sky, 51.50 * skx, 23.30 * sky, 51.10 * skx, 22.70 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 49.70* skx, 22.60* sky);
		c.curveTo(49.20 * skx, 23.00 * sky, 48.80 * skx, 23.40 * sky, 48.20 * skx, 23.40 * sky);
		c.lineTo(47.40* skx,22.90* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 46.80* skx, 19.90* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 1, 47.70* skx, 18.50* sky);
		c.curveTo(47.80 * skx, 18.30 * sky, 48.30 * skx, 18.10 * sky, 48.30 * skx, 17.80 * sky);
		c.curveTo(48.3 * skx, 17.5 * sky, 47.60 * skx, 17.30 * sky, 47.40 * skx, 17.20 * sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 46.20* skx, 16.50* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 46.60* skx, 14.00* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 49.20* skx, 13.50* sky);
		c.lineTo(49.90 * skx,13.50* sky);
		c.curveTo(50.60 * skx, 13.30 * sky, 50.20 * skx, 12.10 * sky, 49.50 * skx, 12.00 * sky);
		c.curveTo(48.8 * skx, 11.9 * sky, 48.10 * skx, 12.20 * sky, 47.40 * skx, 12.10 * sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 1, 44.80* skx, 9.80* sky);
		c.curveTo(44.50 * skx, 8.90 * sky, 44.30 * skx, 7.90 * sky, 45.00 * skx, 7.30 * sky);
		c.curveTo(45.7 * skx, 6.699999999999999 * sky, 46.00 * skx, 6.90 * sky, 46.50 * skx, 6.60 * sky);
		c.curveTo(47.0 * skx, 6.299999999999999 * sky, 47.20 * skx, 5.40 * sky, 46.70 * skx, 5.20 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 45.80* skx, 5.60* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 1, 41.60* skx, 5.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 40.40* skx, 4.10* sky);
		c.curveTo(40.60 * skx, 3.30 * sky, 41.40 * skx, 2.90 * sky, 42.00 * skx, 2.50 * sky);
		c.curveTo(42.6 * skx, 2.1 * sky, 43.40 * skx, 1.90 * sky, 43.30 * skx, 1.40 * sky);
		c.curveTo(43.199999999999996 * skx, 0.8999999999999999 * sky, 42.80 * skx, 1.00 * sky, 42.50 * skx, 1.00 * sky);
		c.lineTo(41.40* skx,1.40* sky);
		c.arcTo(11.20 * skx, 11.20 * sky, 0, 0, 0, 39.40* skx, 3.10* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 35.80* skx, 4.70* sky);
		c.curveTo(34.50 * skx, 4.60 * sky, 33.10 * skx, 3.40 * sky, 33.50 * skx, 2.10 * sky);
		c.curveTo(33.9 * skx, 0.8000000000000003 * sky, 33.80 * skx, 1.20 * sky, 33.90 * skx, 0.70 * sky);
		c.curveTo(34.0 * skx, 0.19999999999999996 * sky, 32.90 * skx, -0.40 * sky, 32.40 * skx, 0.30 * sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 32.10* skx, 2.40* sky);
		c.curveTo(32.20 * skx, 3.30 * sky, 32.30 * skx, 4.50 * sky, 31.60 * skx, 5.20 * sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 29.00* skx, 5.00* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 1, 28.10* skx, 2.20* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 28.00* skx, 1.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 26.50* skx, 1.70* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 26.70* skx, 3.50* sky);
		c.arcTo(8.30 * skx, 8.30 * sky, 0, 0, 1, 27.60* skx, 5.10* sky);
		c.curveTo(28.30 * skx, 7.00 * sky, 26.40 * skx, 8.90 * sky, 24.80 * skx, 10.10 * sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 1, 23.20* skx, 11.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 21.60* skx, 10.40* sky);
		c.curveTo(21.20 * skx, 9.60 * sky, 21.60 * skx, 8.30 * sky, 20.80 * skx, 8.00 * sky);
		c.curveTo(20.0 * skx, 7.699999999999999 * sky, 19.70 * skx, 8.50 * sky, 19.70 * skx, 9.10 * sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 20.30* skx, 10.70* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 1, 19.90* skx, 15.20* sky);
		c.curveTo(18.80 * skx, 16.30 * sky, 16.50 * skx, 16.00 * sky, 16.00 * skx, 14.60 * sky);
		c.arcTo(11.30 * skx, 11.30 * sky, 0, 0, 1, 15.70* skx, 12.80* sky);
		c.curveTo(15.60 * skx, 12.20 * sky, 15.10 * skx, 11.50 * sky, 14.40 * skx, 11.60 * sky);
		c.curveTo(13.700000000000001 * skx, 11.7 * sky, 14.10 * skx, 13.20 * sky, 14.30 * skx, 13.80 * sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 14.90* skx, 16.50* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 1, 11.90* skx, 17.60* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 1, 10.40* skx, 16.30* sky);
		c.curveTo(10.10 * skx, 15.80 * sky, 9.80 * skx, 13.60 * sky, 8.90 * skx, 13.90 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 8.30* skx, 15.30* sky);
		c.curveTo(8.60 * skx, 15.90 * sky, 9.30 * skx, 16.40 * sky, 9.60 * skx, 17.00 * sky);
		c.curveTo(9.899999999999999 * skx, 17.6 * sky, 9.20 * skx, 20.10 * sky, 8.00 * skx, 21.20 * sky);
		c.curveTo(6.800000000000001 * skx, 22.299999999999997 * sky, 6.30 * skx, 22.60 * sky, 5.50 * skx, 22.10 * sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 1, 4.50* skx, 20.90* sky);
		c.curveTo(4.20 * skx, 20.50 * sky, 3.60 * skx, 20.20 * sky, 3.20 * skx, 20.50 * sky);
		c.curveTo(2.8000000000000003 * skx, 20.8 * sky, 2.90 * skx, 21.40 * sky, 3.30 * skx, 21.80 * sky);
		c.lineTo(4.60* skx,22.60* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 1, 6.20* skx, 25.50* sky);
		c.arcTo(10.20 * skx, 10.20 * sky, 0, 0, 1, 5.80* skx, 29.00* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 5.30* skx, 30.00* sky);
		c.curveTo(4.90 * skx, 30.40 * sky, 4.20 * skx, 30.20 * sky, 3.60 * skx, 30.10 * sky);
		c.curveTo(3.0 * skx, 30.000000000000004 * sky, 2.20 * skx, 30.40 * sky, 2.30 * skx, 31.00 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 3.50* skx, 31.60* sky);
		c.lineTo(4.90* skx,31.10* sky);
		c.curveTo(6.10 * skx, 31.00 * sky, 6.90 * skx, 32.50 * sky, 6.50 * skx, 33.60 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 3.60* skx, 35.10* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 0, 1.70* skx, 34.90* sky);
		c.curveTo(1.10 * skx, 35.00 * sky, 0.50 * skx, 35.70 * sky, 0.80 * skx, 36.30 * sky);
		c.curveTo(1.1 * skx, 36.89999999999999 * sky, 2.80 * skx, 36.00 * sky, 3.80 * skx, 36.30 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 4.60* skx, 37.70* sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 1, 3.80* skx, 39.30* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 1, 2.20* skx, 40.40* sky);
		c.curveTo(1.60 * skx, 40.70 * sky, 1.00 * skx, 40.50 * sky, 0.40 * skx, 40.60 * sky);
		c.lineTo(0.20 * skx,40.60* sky);
		c.curveTo(-0.10 * skx, 40.70 * sky, 0.10 * skx, 41.00 * sky, 0.20 * skx, 41.10 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 1.00* skx, 41.70* sky);
		c.curveTo(1.60 * skx, 42.10 * sky, 2.50 * skx, 42.30 * sky, 2.80 * skx, 43.00 * sky);
		c.curveTo(3.0999999999999996 * skx, 43.7 * sky, 2.40 * skx, 45.00 * sky, 1.60 * skx, 45.70 * sky);
		c.arcTo(7.40 * skx, 7.40 * sky, 0, 0, 0, 0.40* skx, 47.00* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 0.00* skx, 48.00* sky);
		c.curveTo(0.10 * skx, 49.00 * sky, 1.70 * skx, 47.20 * sky, 2.00 * skx, 47.10 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 5.30* skx, 48.50* sky);
		c.arcTo(7.50 * skx, 7.50 * sky, 0, 0, 1, 4.90* skx, 51.40* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 5.60* skx, 53.60* sky);
		c.lineTo(5.90 * skx,53.60* sky);
		c.arcTo(0.20 * skx, 0.20 * sky, 0, 0, 0, 6.10* skx, 53.40* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 6.10* skx, 52.50* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 1, 6.20* skx, 50.80* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 8.60* skx, 50.00* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 9.30* skx, 51.30* sky);
		c.curveTo(9.50 * skx, 52.00 * sky, 9.60 * skx, 52.70 * sky, 9.80 * skx, 53.40 * sky);
		c.curveTo(10.000000000000002 * skx, 54.099999999999994 * sky, 9.80 * skx, 55.00 * sky, 10.40 * skx, 55.20 * sky);
		c.curveTo(11.0 * skx, 55.400000000000006 * sky, 11.00 * skx, 54.90 * sky, 11.10 * skx, 54.60 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 11.20* skx, 53.50* sky);
		c.arcTo(9.00 * skx, 9.00 * sky, 0, 0, 0, 10.40* skx, 51.40* sky);
		c.curveTo(10.40 * skx, 51.20 * sky, 10.30 * skx, 51.00 * sky, 10.40 * skx, 50.80 * sky);
		c.curveTo(10.5 * skx, 50.599999999999994 * sky, 11.70 * skx, 50.10 * sky, 12.30 * skx, 50.00 * sky);
		c.lineTo(15.10* skx,49.70* sky);
		c.curveTo(15.70 * skx, 49.60 * sky, 16.40 * skx, 49.50 * sky, 16.80 * skx, 50.00 * sky);
		c.curveTo(17.200000000000003 * skx, 50.5 * sky, 17.20 * skx, 51.20 * sky, 17.20 * skx, 51.80 * sky);
		c.curveTo(17.2 * skx, 52.39999999999999 * sky, 17.30 * skx, 53.20 * sky, 17.80 * skx, 53.20 * sky);
		c.curveTo(18.3 * skx, 53.2 * sky, 18.50 * skx, 51.60 * sky, 18.50 * skx, 51.20 * sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 1, 18.70* skx, 49.00* sky);
		c.curveTo(19.00 * skx, 48.30 * sky, 19.90 * skx, 47.70 * sky, 20.50 * skx, 48.20 * sky);
		c.curveTo(21.1 * skx, 48.7 * sky, 21.10 * skx, 49.40 * sky, 21.20 * skx, 50.10 * sky);
		c.curveTo(21.299999999999997 * skx, 50.800000000000004 * sky, 22.10 * skx, 51.60 * sky, 22.60 * skx, 51.20 * sky);
		c.curveTo(23.1 * skx, 50.800000000000004 * sky, 22.90 * skx, 50.20 * sky, 22.80 * skx, 49.70 * sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 1, 23.10* skx, 46.40* sky);
		c.curveTo(23.80 * skx, 45.50 * sky, 25.40 * skx, 45.40 * sky, 25.90 * skx, 46.40 * sky);
		c.curveTo(26.4 * skx, 47.4 * sky, 25.80 * skx, 47.80 * sky, 26.10 * skx, 48.30 * sky);
		c.curveTo(26.400000000000002 * skx, 48.8 * sky, 27.10 * skx, 48.00 * sky, 27.20 * skx, 47.60 * sky);
		c.arcTo(9.00 * skx, 9.00 * sky, 0, 0, 0, 27.50* skx, 46.00* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 1, 28.90* skx, 43.60* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 31.40* skx, 43.70* sky);
		c.curveTo(32.00 * skx, 44.70 * sky, 31.20 * skx, 46.00 * sky, 31.20 * skx, 47.10 * sky);
		c.curveTo(31.2 * skx, 48.2 * sky, 31.20 * skx, 47.50 * sky, 31.40 * skx, 47.60 * sky);
		c.curveTo(31.599999999999998 * skx, 47.7 * sky, 32.30 * skx, 47.50 * sky, 32.50 * skx, 47.00 * sky);
		c.arcTo(12.60 * skx, 12.60 * sky, 0, 0, 1, 34.10* skx, 43.70* sky);
		c.curveTo(35.00 * skx, 42.90 * sky, 36.90 * skx, 42.80 * sky, 37.20 * skx, 44.00 * sky);
		c.curveTo(37.50000000000001 * skx, 45.2 * sky, 36.30 * skx, 46.30 * sky, 36.70 * skx, 47.40 * sky);
		c.lineTo(36.90 * skx,47.40* sky);
		c.curveTo(38.00 * skx, 47.10 * sky, 38.40 * skx, 45.70 * sky, 39.10 * skx, 44.70 * sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 1, 41.90* skx, 43.00* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 44.30* skx, 45.00* sky);
		c.arcTo(11.50 * skx, 11.50 * sky, 0, 0, 0, 44.20* skx, 46.90* sky);
		c.curveTo(44.40 * skx, 47.50 * sky, 45.20 * skx, 48.00 * sky, 45.60 * skx, 47.50 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 45.70* skx, 46.50* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 1, 45.60* skx, 42.50* sky);
		c.curveTo(46.10 * skx, 41.30 * sky, 48.10 * skx, 40.70 * sky, 48.90 * skx, 41.80 * sky);
		c.curveTo(49.699999999999996 * skx, 42.89999999999999 * sky, 49.50 * skx, 43.60 * sky, 50.30 * skx, 43.40 * sky);
		c.curveTo(51.099999999999994 * skx, 43.199999999999996 * sky, 50.90 * skx, 42.60 * sky, 50.70 * skx, 42.10 * sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 1, 49.80* skx, 40.80* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 50.30* skx, 37.80* sky);
		c.curveTo(50.70 * skx, 37.10 * sky, 51.20 * skx, 36.40 * sky, 51.60 * skx, 35.60 * sky);
		c.curveTo(52.0 * skx, 34.800000000000004 * sky, 51.90 * skx, 34.70 * sky, 52.50 * skx, 35.00 * sky);
		c.curveTo(53.1 * skx, 35.3 * sky, 53.80 * skx, 36.20 * sky, 54.50 * skx, 35.70 * sky);
		c.curveTo(55.2 * skx, 35.2 * sky, 54.80 * skx, 34.60 * sky, 54.40 * skx, 34.20 * sky);
		c.close();
		c.moveTo(48.00 * skx, 36.10* sky);
		c.curveTo(45.60 * skx, 40.40 * sky, 41.20 * skx, 41.10 * sky, 36.60 * skx, 40.80 * sky);
		c.curveTo(35.00 * skx, 40.70 * sky, 33.40 * skx, 40.30 * sky, 31.70 * skx, 40.20 * sky);
		c.arcTo(13.30 * skx, 13.30 * sky, 0, 0, 0, 24.00* skx, 42.40* sky);
		c.curveTo(19.40 * skx, 45.20 * sky, 15.10 * skx, 46.50 * sky, 11.10 * skx, 46.50 * sky);
		c.curveTo(7.1 * skx, 46.5 * sky, 4.10 * skx, 43.60 * sky, 6.40 * skx, 38.90 * sky);
		c.arcTo(17.70 * skx, 17.70 * sky, 0, 0, 1, 8.10* skx, 36.50* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 0, 9.00* skx, 30.00* sky);
		c.curveTo(7.00 * skx, 24.60 * sky, 9.00 * skx, 20.70 * sky, 14.60 * skx, 19.50 * sky);
		c.arcTo(15.90 * skx, 15.90 * sky, 0, 0, 0, 24.30* skx, 13.30* sky);
		c.arcTo(20.50 * skx, 20.50 * sky, 0, 0, 1, 31.80* skx, 7.10* sky);
		c.curveTo(37.80 * skx, 4.40 * sky, 43.00 * skx, 7.40 * sky, 43.70 * skx, 13.90 * sky);
		c.arcTo(25.50 * skx, 25.50 * sky, 0, 0, 1, 43.90* skx, 17.80* sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 0, 45.90* skx, 24.80* sky);
		c.curveTo(48.40 * skx, 28.20 * sky, 50.30 * skx, 32.00 * sky, 48.00 * skx, 36.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(35.50 * skx, 34.10* sky);
		c.curveTo(35.40 * skx, 34.10 * sky, 35.00 * skx, 34.00 * sky, 34.90 * skx, 33.80 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 35.00* skx, 32.90* sky);
		c.arcTo(23.40 * skx, 23.40 * sky, 0, 0, 1, 40.40* skx, 29.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 41.60* skx, 30.10* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 41.40* skx, 31.20* sky);
		c.arcTo(21.60 * skx, 21.60 * sky, 0, 0, 1, 35.50* skx, 34.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(13.60 * skx, 40.10* sky);
		c.lineTo(14.20 * skx,40.10* sky);
		c.curveTo(15.00 * skx, 40.40 * sky, 16.20 * skx, 40.40 * sky, 16.70 * skx, 41.30 * sky);
		c.curveTo(17.2 * skx, 42.199999999999996 * sky, 16.60 * skx, 42.10 * sky, 16.40 * skx, 42.10 * sky);
		c.curveTo(16.199999999999996 * skx, 42.1 * sky, 14.10 * skx, 41.80 * sky, 13.00 * skx, 41.50 * sky);
		c.curveTo(11.9 * skx, 41.2 * sky, 12.00 * skx, 41.10 * sky, 12.10 * skx, 40.50 * sky);
		c.curveTo(12.2 * skx, 39.9 * sky, 12.90 * skx, 39.90 * sky, 13.60 * skx, 40.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(18.00 * skx, 27.80* sky);
		c.curveTo(18.10 * skx, 28.50 * sky, 18.10 * skx, 29.40 * sky, 17.30 * skx, 29.10 * sky);
		c.curveTo(16.5 * skx, 28.800000000000004 * sky, 16.20 * skx, 27.90 * sky, 16.10 * skx, 27.00 * sky);
		c.curveTo(16.000000000000004 * skx, 26.1 * sky, 15.60 * skx, 24.70 * sky, 16.50 * skx, 24.90 * sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 17.90* skx, 27.00* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 18.00* skx, 27.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(34.00 * skx, 24.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 35.30* skx, 25.90* sky);
		c.curveTo(35.30 * skx, 26.80 * sky, 34.80 * skx, 27.20 * sky, 33.90 * skx, 27.20 * sky);
		c.curveTo(33.0 * skx, 27.2 * sky, 32.80 * skx, 26.60 * sky, 32.80 * skx, 25.80 * sky);
		c.curveTo(32.8 * skx, 25.0 * sky, 33.30 * skx, 24.70 * sky, 34.00 * skx, 24.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(42.20 * skx, 36.70* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 43.20* skx, 38.00* sky);
		c.curveTo(43.20 * skx, 38.80 * sky, 42.70 * skx, 39.10 * sky, 41.90 * skx, 39.10 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 40.80* skx, 37.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 42.20* skx, 36.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(34.40 * skx, 31.20* sky);
		c.curveTo(34.40 * skx, 32.00 * sky, 33.90 * skx, 32.30 * sky, 33.20 * skx, 32.30 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 32.20* skx, 31.20* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 33.30* skx, 29.90* sky);
		c.curveTo(34.10 * skx, 29.90 * sky, 34.40 * skx, 30.40 * sky, 34.40 * skx, 31.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(28.40 * skx, 28.30* sky);
		c.curveTo(28.50 * skx, 27.70 * sky, 28.80 * skx, 27.20 * sky, 29.50 * skx, 27.20 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 30.50* skx, 28.30* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 29.50* skx, 29.40* sky);
		c.curveTo(28.90 * skx, 29.40 * sky, 28.50 * skx, 29.00 * sky, 28.40 * skx, 28.30 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(25.40 * skx, 34.90* sky);
		c.curveTo(25.40 * skx, 35.80 * sky, 25.00 * skx, 36.20 * sky, 24.40 * skx, 36.30 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 23.20* skx, 35.30* sky);
		c.curveTo(23.20 * skx, 34.70 * sky, 23.50 * skx, 34.10 * sky, 24.20 * skx, 34.10 * sky);
		c.curveTo(24.9 * skx, 34.1 * sky, 25.30 * skx, 34.40 * sky, 25.40 * skx, 34.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(21.10 * skx, 38.10* sky);
		c.curveTo(21.00 * skx, 38.70 * sky, 20.80 * skx, 39.20 * sky, 20.10 * skx, 39.20 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 19.00* skx, 38.10* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 20.00* skx, 37.00* sky);
		c.curveTo(20.80 * skx, 37.00 * sky, 21.00 * skx, 37.40 * sky, 21.10 * skx, 38.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(37.80 * skx, 9.60* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 38.70* skx, 10.70* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 37.50* skx, 11.60* sky);
		c.curveTo(37.00 * skx, 11.60 * sky, 36.70 * skx, 11.20 * sky, 36.70 * skx, 10.60 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 37.80* skx, 9.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(25.80 * skx, 27.60* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 24.80* skx, 28.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 23.90* skx, 27.40* sky);
		c.curveTo(23.90 * skx, 26.70 * sky, 24.40 * skx, 26.60 * sky, 24.90 * skx, 26.60 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 25.80* skx, 27.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(23.00 * skx, 20.90* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 22.10* skx, 21.90* sky);
		c.curveTo(21.50 * skx, 21.90 * sky, 21.00 * skx, 21.70 * sky, 21.00 * skx, 20.90 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 21.80* skx, 19.90* sky);
		c.curveTo(22.50 * skx, 19.80 * sky, 22.90 * skx, 20.20 * sky, 23.00 * skx, 20.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(15.60 * skx, 33.90* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 1, 14.80* skx, 34.60* sky);
		c.curveTo(14.30 * skx, 34.60 * sky, 13.90 * skx, 34.40 * sky, 13.90 * skx, 33.80 * sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 14.90* skx, 33.00* sky);
		c.curveTo(15.40 * skx, 33.00 * sky, 15.60 * skx, 33.40 * sky, 15.60 * skx, 33.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(13.20 * skx, 26.60* sky);
		c.curveTo(13.50 * skx, 26.70 * sky, 13.80 * skx, 26.90 * sky, 13.80 * skx, 27.20 * sky);
		c.curveTo(13.8 * skx, 27.5 * sky, 13.50 * skx, 27.90 * sky, 13.20 * skx, 27.80 * sky);
		c.curveTo(12.899999999999999 * skx, 27.700000000000003 * sky, 12.70 * skx, 27.50 * sky, 12.60 * skx, 27.20 * sky);
		c.curveTo(12.5 * skx, 26.9 * sky, 12.80 * skx, 26.70 * sky, 13.20 * skx, 26.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(33.60 * skx, 12.90* sky);
		c.curveTo(30.70 * skx, 12.90 * sky, 28.20 * skx, 15.30 * sky, 28.40 * skx, 18.00 * sky);
		c.curveTo(28.599999999999998 * skx, 20.7 * sky, 31.20 * skx, 22.20 * sky, 34.70 * skx, 22.20 * sky);
		c.curveTo(38.2 * skx, 22.2 * sky, 39.20 * skx, 20.40 * sky, 39.20 * skx, 18.00 * sky);
		c.curveTo(39.2 * skx, 15.600000000000001 * sky, 36.40 * skx, 12.90 * sky, 33.60 * skx, 12.90 * sky);
		c.close();
		c.moveTo(36.60 * skx, 16.40* sky);
		c.curveTo(36.50 * skx, 16.60 * sky, 36.20 * skx, 16.60 * sky, 36.00 * skx, 16.60 * sky);
		c.lineTo(34.10 * skx,16.60* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 1, 32.70* skx, 15.90* sky);
		c.lineTo(32.10* skx,15.50* sky);
		c.curveTo(31.90 * skx, 15.30 * sky, 31.60 * skx, 15.20 * sky, 31.60 * skx, 15.00 * sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 1, 32.00* skx, 14.70* sky);
		c.lineTo(33.00* skx,14.50* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 34.40* skx, 14.70* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 1, 35.70* skx, 15.40* sky);
		c.curveTo(36.00 * skx, 15.70 * sky, 36.30 * skx, 15.80 * sky, 36.50 * skx, 16.10 * sky);
		c.close();
		c.moveTo(32.30 * skx, 20.60* sky);
		c.curveTo(32.30 * skx, 20.50 * sky, 32.40 * skx, 20.40 * sky, 32.60 * skx, 20.40 * sky);
		c.lineTo(33.60 * skx,20.40* sky);
		c.curveTo(34.00 * skx, 20.60 * sky, 33.50 * skx, 20.80 * sky, 33.20 * skx, 20.80 * sky);
		c.lineTo(32.60 * skx,20.80* sky);
		c.curveTo(32.40 * skx, 20.80 * sky, 32.30 * skx, 20.70 * sky, 32.30 * skx, 20.60 * sky);
		c.close();
		c.moveTo(36.50 * skx, 20.60* sky);
		c.curveTo(35.70 * skx, 21.00 * sky, 35.70 * skx, 20.50 * sky, 35.50 * skx, 19.80 * sky);
		c.curveTo(35.3 * skx, 19.1 * sky, 34.50 * skx, 19.10 * sky, 33.90 * skx, 19.00 * sky);
		c.curveTo(33.3 * skx, 18.9 * sky, 31.90 * skx, 18.70 * sky, 31.50 * skx, 17.80 * sky);
		c.curveTo(31.1 * skx, 16.900000000000002 * sky, 31.20 * skx, 17.20 * sky, 31.40 * skx, 17.10 * sky);
		c.curveTo(31.599999999999998 * skx, 17.000000000000004 * sky, 32.30 * skx, 17.50 * sky, 32.50 * skx, 17.60 * sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 0, 34.60* skx, 18.20* sky);
		c.lineTo(35.60* skx,18.40* sky);
		c.lineTo(36.40* skx,18.80* sky);
		c.lineTo(37.00 * skx,18.80* sky);
		c.curveTo(37.50 * skx, 18.90 * sky, 37.70 * skx, 19.00 * sky, 37.70 * skx, 19.50 * sky);
		c.curveTo(37.7 * skx, 20.0 * sky, 37.00 * skx, 20.40 * sky, 36.50 * skx, 20.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m85136750a38b9c13a57d8887904cc0f', m85136750a38b9c13a57d8887904cc0f);
	m85136750a38b9c13a57d8887904cc0f.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mc572d996f3cde53aee9338ed6d64e86() {
		mxActor.call(this);
	};
	mxUtils.extend(mc572d996f3cde53aee9338ed6d64e86, mxActor);
	mc572d996f3cde53aee9338ed6d64e86.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 49;
		h1 = 49;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(0.00 * skx, 28.10* sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 1, 1.00* skx, 22.90* sky);
		c.curveTo(2.20 * skx, 20.00 * sky, 4.40 * skx, 18.80 * sky, 7.50 * skx, 19.10 * sky);
		c.lineTo(10.90* skx,19.40* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 0, 13.70* skx, 18.90* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 15.60* skx, 15.50* sky);
		c.arcTo(7.40 * skx, 7.40 * sky, 0, 0, 0, 13.40* skx, 11.70* sky);
		c.curveTo(12.50 * skx, 10.70 * sky, 11.40 * skx, 9.70 * sky, 10.50 * skx, 8.60 * sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 1, 9.00* skx, 5.10* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 13.10* skx, 0.10* sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 1, 19.00* skx, 1.80* sky);
		c.curveTo(20.40 * skx, 3.00 * sky, 21.70 * skx, 4.40 * sky, 23.00 * skx, 5.60 * sky);
		c.lineTo(25.10* skx,7.60* sky);
		c.curveTo(28.00 * skx, 9.90 * sky, 30.50 * skx, 10.10 * sky, 33.60 * skx, 8.20 * sky);
		c.lineTo(38.40* skx,5.20* sky);
		c.arcTo(7.60 * skx, 7.60 * sky, 0, 0, 1, 43.10* skx, 4.10* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 1, 47.40* skx, 7.90* sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 1, 46.50* skx, 10.90* sky);
		c.lineTo(43.40* skx,13.90* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 0, 42.00* skx, 15.40* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 41.90* skx, 18.50* sky);
		c.arcTo(9.70 * skx, 9.70 * sky, 0, 0, 0, 44.20* skx, 20.70* sky);
		c.curveTo(45.10 * skx, 21.40 * sky, 46.00 * skx, 22.00 * sky, 46.90 * skx, 22.80 * sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 1, 48.40* skx, 25.40* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 1, 45.40* skx, 29.50* sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 1, 41.80* skx, 29.20* sky);
		c.lineTo(39.60* skx,28.70* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 36.00* skx, 30.70* sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 0, 35.10* skx, 35.60* sky);
		c.curveTo(34.90 * skx, 37.90 * sky, 34.90 * skx, 40.20 * sky, 34.60 * skx, 42.40 * sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 1, 30.60* skx, 48.00* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 1, 24.90* skx, 46.40* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 23.80* skx, 41.50* sky);
		c.curveTo(24.00 * skx, 39.80 * sky, 24.30 * skx, 38.20 * sky, 24.40 * skx, 36.50 * sky);
		c.arcTo(7.40 * skx, 7.40 * sky, 0, 0, 0, 24.30* skx, 34.40* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 19.90* skx, 30.90* sky);
		c.arcTo(9.90 * skx, 9.90 * sky, 0, 0, 0, 14.80* skx, 32.20* sky);
		c.lineTo(9.90* skx,34.40* sky);
		c.arcTo(8.30 * skx, 8.30 * sky, 0, 0, 1, 5.00* skx, 35.00* sky);
		c.arcTo(5.30 * skx, 5.30 * sky, 0, 0, 1, 0.30* skx, 30.30* sky);
		c.curveTo(0.10 * skx, 29.40 * sky, 0.10 * skx, 28.60 * sky, -0.00 * skx, 28.10 * sky);
		c.close();
		c.moveTo(7.00 * skx, 20.20* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 2.50* skx, 22.40* sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 0, 1.80* skx, 31.40* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 0, 4.40* skx, 33.70* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 0, 9.60* skx, 33.40* sky);
		c.lineTo(14.40* skx,31.10* sky);
		c.arcTo(11.10 * skx, 11.10 * sky, 0, 0, 1, 20.60* skx, 29.80* sky);
		c.arcTo(5.30 * skx, 5.30 * sky, 0, 0, 1, 25.10* skx, 33.30* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 25.50* skx, 37.30* sky);
		c.curveTo(25.40 * skx, 38.70 * sky, 25.10 * skx, 40.00 * sky, 25.00 * skx, 41.40 * sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 0, 26.00* skx, 46.00* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 30.00* skx, 47.00* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 0, 33.40* skx, 42.40* sky);
		c.curveTo(33.70 * skx, 40.20 * sky, 33.80 * skx, 37.90 * sky, 33.90 * skx, 35.60 * sky);
		c.arcTo(17.10 * skx, 17.10 * sky, 0, 0, 1, 34.90* skx, 30.50* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 1, 39.70* skx, 27.60* sky);
		c.curveTo(40.70 * skx, 27.70 * sky, 41.70 * skx, 28.00 * sky, 42.70 * skx, 28.20 * sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 45.80* skx, 28.20* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 47.30* skx, 25.60* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 0, 46.40* skx, 23.90* sky);
		c.lineTo(43.70* skx,21.70* sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 1, 41.50* skx, 19.70* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 1, 41.50* skx, 14.20* sky);
		c.lineTo(43.10* skx,12.60* sky);
		c.arcTo(23.90 * skx, 23.90 * sky, 0, 0, 0, 45.40* skx, 10.40* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 46.30* skx, 7.80* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 43.30* skx, 5.20* sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 0, 38.80* skx, 6.30* sky);
		c.lineTo(34.10* skx,9.20* sky);
		c.curveTo(30.40 * skx, 11.30 * sky, 27.10 * skx, 11.00 * sky, 23.90 * skx, 8.10 * sky);
		c.curveTo(22.80 * skx, 7.00 * sky, 21.70 * skx, 5.80 * sky, 20.50 * skx, 4.70 * sky);
		c.arcTo(34.70 * skx, 34.70 * sky, 0, 0, 0, 17.60* skx, 2.20* sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 0, 13.10* skx, 1.20* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 10.10* skx, 5.30* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 0, 11.20* skx, 7.60* sky);
		c.curveTo(12.20 * skx, 8.80 * sky, 13.30 * skx, 9.90 * sky, 14.30 * skx, 11.00 * sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 1, 16.60* skx, 15.00* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 1, 13.70* skx, 20.10* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 10.70* skx, 20.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(41.20 * skx, 10.10* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 1, 1, 39.60* skx, 10.10* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 1, 1, 41.20* skx, 10.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(24.00 * skx, 17.30* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 1, 23.30* skx, 16.50* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 24.00* skx, 15.70* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 24.80* skx, 16.50* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 24.00* skx, 17.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(29.90 * skx, 28.40* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 29.10* skx, 29.10* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 28.30* skx, 28.30* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 29.10* skx, 27.60* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 1, 29.90* skx, 28.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(37.60 * skx, 23.20* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 1, 1, 36.80* skx, 22.40* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 37.60* skx, 23.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(18.90 * skx, 23.70* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 19.60* skx, 24.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 18.80* skx, 25.30* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 18.10* skx, 24.50* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 1, 18.90* skx, 23.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(19.10 * skx, 10.70* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 18.30* skx, 9.90* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 19.00* skx, 9.10* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 1, 19.80* skx, 9.90* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 19.10* skx, 10.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(28.90 * skx, 40.50* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 28.10* skx, 39.70* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 28.90* skx, 38.90* sky);
		c.curveTo(29.30 * skx, 39.00 * sky, 29.70 * skx, 39.30 * sky, 29.70 * skx, 39.70 * sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 28.90* skx, 40.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mc572d996f3cde53aee9338ed6d64e86', mc572d996f3cde53aee9338ed6d64e86);
	mc572d996f3cde53aee9338ed6d64e86.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mc41fc6ed93dba7f4e5a2fc36db393a7() {
		mxActor.call(this);
	};
	mxUtils.extend(mc41fc6ed93dba7f4e5a2fc36db393a7, mxActor);
	mc41fc6ed93dba7f4e5a2fc36db393a7.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 57;
		h1 = 57;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(16.00 * skx, 31.80* sky);
		c.lineTo(17.90* skx,30.50* sky);
		c.lineTo(17.10* skx,29.80* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 17.10* skx, 28.40* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 18.30* skx, 28.50* sky);
		c.lineTo(19.30* skx,29.50* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 0, 20.80* skx, 26.80* sky);
		c.lineTo(19.10* skx,25.90* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 18.60* skx, 24.70* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 19.80* skx, 24.30* sky);
		c.lineTo(20.20* skx,24.50* sky);
		c.lineTo(21.40* skx,25.20* sky);
		c.lineTo(22.10* skx,23.30* sky);
		c.lineTo(20.40* skx,22.40* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 19.90* skx, 21.50* sky);
		c.curveTo(19.90 * skx, 21.10 * sky, 20.10 * skx, 20.80 * sky, 20.50 * skx, 20.80 * sky);
		c.curveTo(20.9 * skx, 20.8 * sky, 21.00 * skx, 20.80 * sky, 21.20 * skx, 20.80 * sky);
		c.lineTo(22.80* skx,21.60* sky);
		c.curveTo(23.00 * skx, 21.00 * sky, 23.30 * skx, 20.40 * sky, 23.50 * skx, 19.70 * sky);
		c.arcTo(0.20 * skx, 0.20 * sky, 0, 0, 0, 23.40* skx, 19.40* sky);
		c.lineTo(22.10* skx,18.40* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 21.80* skx, 17.10* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 23.10* skx, 17.00* sky);
		c.lineTo(24.30* skx,17.90* sky);
		c.lineTo(24.40 * skx,17.90* sky);
		c.arcTo(19.80 * skx, 19.80 * sky, 0, 0, 0, 25.50* skx, 15.90* sky);
		c.curveTo(25.60 * skx, 15.90 * sky, 25.50 * skx, 15.70 * sky, 25.40 * skx, 15.60 * sky);
		c.lineTo(24.60* skx,14.80* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 24.60* skx, 13.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 25.90* skx, 13.50* sky);
		c.lineTo(26.60* skx,14.30* sky);
		c.lineTo(28.20* skx,12.50* sky);
		c.lineTo(27.30* skx,11.80* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 27.20* skx, 10.40* sky);
		c.curveTo(27.60 * skx, 10.00 * sky, 28.10 * skx, 10.10 * sky, 28.60 * skx, 10.50 * sky);
		c.lineTo(29.30* skx,11.20* sky);
		c.lineTo(29.40 * skx,11.20* sky);
		c.lineTo(31.10* skx,9.90* sky);
		c.lineTo(30.20* skx,8.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 31.80* skx, 7.60* sky);
		c.lineTo(32.60* skx,9.00* sky);
		c.lineTo(34.50* skx,8.00* sky);
		c.lineTo(33.70* skx,6.20* sky);
		c.curveTo(33.50 * skx, 5.60 * sky, 33.60 * skx, 5.10 * sky, 34.10 * skx, 4.90 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 35.30* skx, 5.40* sky);
		c.lineTo(36.10* skx,7.20* sky);
		c.lineTo(37.70* skx,6.50* sky);
		c.lineTo(36.80* skx,3.90* sky);
		c.curveTo(36.60 * skx, 3.30 * sky, 36.70 * skx, 2.90 * sky, 37.20 * skx, 2.70 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 38.40* skx, 3.30* sky);
		c.lineTo(39.30* skx,5.80* sky);
		c.lineTo(41.20* skx,5.10* sky);
		c.curveTo(41.00 * skx, 4.40 * sky, 40.90 * skx, 3.70 * sky, 40.70 * skx, 3.00 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 41.30* skx, 1.80* sky);
		c.curveTo(41.80 * skx, 1.60 * sky, 42.30 * skx, 2.00 * sky, 42.40 * skx, 2.60 * sky);
		c.curveTo(42.5 * skx, 3.2 * sky, 42.70 * skx, 3.90 * sky, 42.90 * skx, 4.60 * sky);
		c.lineTo(44.40* skx,4.10* sky);
		c.arcTo(17.90 * skx, 17.90 * sky, 0, 0, 1, 44.20* skx, 1.80* sky);
		c.arcTo(0.60 * skx, 0.60 * sky, 0, 0, 1, 44.60* skx, 1.00* sky);
		c.lineTo(45.50 * skx,1.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 45.90* skx, 1.80* sky);
		c.arcTo(10.80 * skx, 10.80 * sky, 0, 0, 1, 46.20* skx, 3.70* sky);
		c.lineTo(48.10* skx,3.40* sky);
		c.curveTo(48.20 * skx, 3.40 * sky, 48.30 * skx, 3.20 * sky, 48.30 * skx, 3.10 * sky);
		c.arcTo(18.70 * skx, 18.70 * sky, 0, 0, 0, 49.00* skx, 0.90* sky);
		c.quadTo(49.30 * skx, -0.10* sky, 50.20 * skx, 0.00 * sky);
		c.curveTo(50.70 * skx, 0.20 * sky, 50.90 * skx, 0.70 * sky, 50.70 * skx, 1.40 * sky);
		c.lineTo(50.10* skx,3.30* sky);
		c.lineTo(51.90* skx,3.80* sky);
		c.lineTo(52.20* skx,3.60* sky);
		c.lineTo(54.10* skx,1.60* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 55.00* skx, 1.30* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 55.40* skx, 2.70* sky);
		c.arcTo(11.40 * skx, 11.40 * sky, 0, 0, 1, 53.90* skx, 4.30* sky);
		c.lineTo(53.40* skx,4.90* sky);
		c.lineTo(54.10* skx,6.30* sky);
		c.lineTo(55.20* skx,5.80* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 56.50* skx, 6.30* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 55.90* skx, 7.40* sky);
		c.lineTo(54.60* skx,8.00* sky);
		c.arcTo(0.50 * skx, 0.50 * sky, 0, 0, 0, 54.30* skx, 8.30* sky);
		c.lineTo(54.30* skx,9.70 * sky);
		c.lineTo(55.50 * skx,9.70* sky);
		c.curveTo(56.10 * skx, 9.70 * sky, 56.50 * skx, 10.00 * sky, 56.50 * skx, 10.60 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 55.50* skx, 11.50* sky);
		c.lineTo(54.40 * skx,11.50* sky);
		c.lineTo(54.00* skx,11.80* sky);
		c.arcTo(13.00 * skx, 13.00 * sky, 0, 0, 0, 53.60* skx, 13.90* sky);
		c.lineTo(55.80* skx,14.20* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 1, 56.50* skx, 14.90* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 55.50* skx, 15.90* sky);
		c.lineTo(53.50* skx,15.70* sky);
		c.curveTo(53.10 * skx, 15.60 * sky, 53.00 * skx, 15.70 * sky, 52.90 * skx, 16.00 * sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 52.40* skx, 17.40* sky);
		c.lineTo(54.40* skx,18.20* sky);
		c.curveTo(55.10 * skx, 18.40 * sky, 55.30 * skx, 18.80 * sky, 55.20 * skx, 19.30 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 53.90* skx, 19.80* sky);
		c.lineTo(51.80* skx,19.00* sky);
		c.lineTo(50.80* skx,21.10* sky);
		c.lineTo(53.20* skx,22.10* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 53.90* skx, 22.80* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 52.60* skx, 23.70* sky);
		c.lineTo(50.40* skx,22.80* sky);
		c.curveTo(50.10 * skx, 22.70 * sky, 50.00 * skx, 22.80 * sky, 49.90 * skx, 23.00 * sky);
		c.curveTo(49.8 * skx, 23.2 * sky, 49.20 * skx, 24.30 * sky, 48.80 * skx, 25.00 * sky);
		c.lineTo(50.60* skx,25.90* sky);
		c.lineTo(51.00 * skx,25.90* sky);
		c.curveTo(51.60 * skx, 26.20 * sky, 51.80 * skx, 26.70 * sky, 51.60 * skx, 27.10 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 50.30* skx, 27.60* sky);
		c.lineTo(49.00* skx,27.00* sky);
		c.lineTo(47.80* skx,26.50* sky);
		c.lineTo(46.40* skx,28.40* sky);
		c.lineTo(47.60* skx,29.20* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 48.00* skx, 30.40* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 46.70* skx, 30.70* sky);
		c.lineTo(45.30* skx,29.90* sky);
		c.lineTo(43.80* skx,31.30* sky);
		c.lineTo(44.80* skx,32.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 44.80* skx, 33.80* sky);
		c.curveTo(44.50 * skx, 34.20 * sky, 43.90 * skx, 34.10 * sky, 43.50 * skx, 33.60 * sky);
		c.lineTo(42.50* skx,32.50* sky);
		c.lineTo(40.40* skx,34.20* sky);
		c.lineTo(41.30* skx,35.50* sky);
		c.curveTo(41.60 * skx, 36.10 * sky, 41.60 * skx, 36.60 * sky, 41.10 * skx, 36.90 * sky);
		c.curveTo(40.6 * skx, 37.199999999999996 * sky, 40.20 * skx, 37.10 * sky, 39.80 * skx, 36.50 * sky);
		c.lineTo(38.90* skx,35.20* sky);
		c.lineTo(36.80* skx,36.60* sky);
		c.lineTo(37.40* skx,38.00* sky);
		c.curveTo(37.60 * skx, 38.50 * sky, 37.50 * skx, 38.90 * sky, 37.10 * skx, 39.10 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 35.80* skx, 38.70* sky);
		c.lineTo(35.50* skx,38.10* sky);
		c.curveTo(35.40 * skx, 38.00 * sky, 35.40 * skx, 37.80 * sky, 35.30 * skx, 37.60 * sky);
		c.lineTo(32.30* skx,39.50* sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 1, 33.00* skx, 41.00* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 32.20* skx, 42.30* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 31.30* skx, 41.70* sky);
		c.arcTo(7.60 * skx, 7.60 * sky, 0, 0, 0, 30.90* skx, 40.60* sky);
		c.lineTo(27.90* skx,43.00* sky);
		c.lineTo(28.90* skx,44.50* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 28.80* skx, 45.80* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 27.50* skx, 45.50* sky);
		c.lineTo(26.50* skx,44.20* sky);
		c.lineTo(23.80* skx,46.80* sky);
		c.lineTo(24.50* skx,48.00* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 24.30* skx, 49.30* sky);
		c.curveTo(23.90 * skx, 49.60 * sky, 23.40 * skx, 49.40 * sky, 23.00 * skx, 48.90 * sky);
		c.lineTo(22.50* skx,48.00* sky);
		c.lineTo(20.90* skx,49.40* sky);
		c.lineTo(21.50* skx,50.60* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 21.20* skx, 52.00* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 19.90* skx, 51.40* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 19.50* skx, 50.50* sky);
		c.lineTo(17.00* skx,52.30* sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 1, 17.50* skx, 53.40* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 17.20* skx, 54.60* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 16.00* skx, 54.20* sky);
		c.lineTo(15.40* skx,53.10* sky);
		c.lineTo(13.20* skx,54.00* sky);
		c.arcTo(0.60 * skx, 0.60 * sky, 0, 0, 0, 13.10* skx, 54.40* sky);
		c.curveTo(13.10 * skx, 54.80 * sky, 13.20 * skx, 55.20 * sky, 13.20 * skx, 55.50 * sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 12.50* skx, 56.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 11.50* skx, 55.70* sky);
		c.curveTo(11.40 * skx, 55.40 * sky, 11.40 * skx, 55.00 * sky, 11.30 * skx, 54.60 * sky);
		c.lineTo(9.00* skx,54.80* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 8.80* skx, 55.70* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 7.70* skx, 56.50* sky);
		c.curveTo(7.20 * skx, 56.40 * sky, 7.00 * skx, 55.90 * sky, 7.10 * skx, 55.30 * sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 1, 7.20* skx, 54.80* sky);
		c.lineTo(5.00* skx,54.10* sky);
		c.lineTo(4.60* skx,54.30* sky);
		c.lineTo(3.50* skx,55.50* sky);
		c.lineTo(2.90* skx,56.00* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 1.90* skx, 55.60* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 2.00* skx, 54.60* sky);
		c.lineTo(3.20* skx,53.10* sky);
		c.lineTo(2.10* skx,51.60* sky);
		c.lineTo(1.40* skx,51.90* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 0.20* skx, 51.60* sky);
		c.curveTo(-0.10 * skx, 51.20 * sky, 0.00 * skx, 50.60 * sky, 0.40 * skx, 50.50 * sky);
		c.curveTo(0.8 * skx, 50.4 * sky, 1.40 * skx, 48.80 * sky, 1.50 * skx, 47.80 * sky);
		c.lineTo(0.70* skx,47.60* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 0.00* skx, 46.70* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 0.80* skx, 45.90* sky);
		c.lineTo(1.00 * skx,45.90* sky);
		c.curveTo(1.30 * skx, 45.90 * sky, 1.70 * skx, 46.10 * sky, 1.90 * skx, 45.90 * sky);
		c.curveTo(2.0999999999999996 * skx, 45.699999999999996 * sky, 2.20 * skx, 45.40 * sky, 2.30 * skx, 45.10 * sky);
		c.lineTo(2.70* skx,44.10* sky);
		c.lineTo(1.80* skx,43.60* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 1.40* skx, 42.30* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 2.60* skx, 42.00* sky);
		c.lineTo(3.70* skx,42.60* sky);
		c.lineTo(4.90* skx,41.10* sky);
		c.lineTo(3.80* skx,39.90* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 3.80* skx, 38.60* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 5.10* skx, 38.70* sky);
		c.lineTo(6.10* skx,39.80* sky);
		c.lineTo(7.80* skx,38.30* sky);
		c.arcTo(0.30 * skx, 0.30 * sky, 0, 0, 0, 7.80* skx, 37.90* sky);
		c.lineTo(7.20* skx,36.60* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 7.60* skx, 35.40* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 8.80* skx, 35.80* sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 0, 9.30* skx, 36.90* sky);
		c.lineTo(11.00* skx,35.50* sky);
		c.lineTo(10.30* skx,33.90* sky);
		c.curveTo(10.10 * skx, 33.40 * sky, 10.20 * skx, 33.00 * sky, 10.60 * skx, 32.80 * sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 11.80* skx, 33.20* sky);
		c.curveTo(12.00 * skx, 33.30 * sky, 12.00 * skx, 33.50 * sky, 12.10 * skx, 33.70 * sky);
		c.lineTo(12.50* skx,34.40* sky);
		c.lineTo(14.40* skx,32.90* sky);
		c.lineTo(14.40* skx,32.60 * sky);
		c.lineTo(13.80* skx,31.30* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 14.20* skx, 30.00* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 15.40* skx, 30.50* sky);
		c.close();
		c.moveTo(22.60 * skx, 27.00* sky);
		c.lineTo(22.90 * skx,27.00* sky);
		c.arcTo(27.50 * skx, 27.50 * sky, 0, 0, 0, 25.50* skx, 24.80* sky);
		c.arcTo(9.40 * skx, 9.40 * sky, 0, 0, 0, 28.30* skx, 20.60* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 29.80* skx, 20.20* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 29.90* skx, 21.40* sky);
		c.arcTo(10.20 * skx, 10.20 * sky, 0, 0, 1, 26.70* skx, 26.00* sky);
		c.curveTo(24.50 * skx, 27.90 * sky, 22.20 * skx, 29.60 * sky, 19.90 * skx, 31.30 * sky);
		c.lineTo(16.40* skx,33.70* sky);
		c.lineTo(8.30* skx,40.20* sky);
		c.arcTo(16.50 * skx, 16.50 * sky, 0, 0, 0, 4.50* skx, 44.70* sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 0, 3.30* skx, 49.30* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 0, 5.10* skx, 52.20* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 0, 8.70* skx, 53.00* sky);
		c.arcTo(15.80 * skx, 15.80 * sky, 0, 0, 0, 16.60* skx, 50.40* sky);
		c.arcTo(39.10 * skx, 39.10 * sky, 0, 0, 0, 22.00* skx, 45.90* sky);
		c.lineTo(27.10* skx,41.30* sky);
		c.arcTo(87.90 * skx, 87.90 * sky, 0, 0, 1, 35.00* skx, 35.60* sky);
		c.arcTo(56.50 * skx, 56.50 * sky, 0, 0, 0, 41.90* skx, 30.80* sky);
		c.arcTo(27.50 * skx, 27.50 * sky, 0, 0, 0, 47.10* skx, 24.20* sky);
		c.arcTo(38.90 * skx, 38.90 * sky, 0, 0, 0, 51.90* skx, 12.90* sky);
		c.arcTo(15.30 * skx, 15.30 * sky, 0, 0, 0, 52.50* skx, 7.30* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 50.20* skx, 5.10* sky);
		c.arcTo(16.40 * skx, 16.40 * sky, 0, 0, 0, 45.70* skx, 5.60* sky);
		c.arcTo(42.30 * skx, 42.30 * sky, 0, 0, 0, 37.90* skx, 8.30* sky);
		c.arcTo(60.20 * skx, 60.20 * sky, 0, 0, 0, 32.30* skx, 11.30* sky);
		c.arcTo(17.20 * skx, 17.20 * sky, 0, 0, 0, 26.60* skx, 17.60* sky);
		c.curveTo(25.80 * skx, 19.20 * sky, 25.10 * skx, 20.80 * sky, 24.40 * skx, 22.40 * sky);
		c.curveTo(23.699999999999996 * skx, 23.999999999999996 * sky, 23.20 * skx, 25.40 * sky, 22.60 * skx, 27.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(45.90 * skx, 45.90* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 45.90* skx, 38.80* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 1, 1, 45.90* skx, 45.90* sky);
		c.close();
		c.moveTo(47.70 * skx, 42.30* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 44.20* skx, 42.40* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 45.90* skx, 44.10* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 47.70* skx, 42.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(7.00 * skx, 19.00* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 1, 11.90* skx, 22.20* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 1, 12.80* skx, 24.90* sky);
		c.curveTo(12.80 * skx, 25.60 * sky, 12.50 * skx, 26.00 * sky, 12.00 * skx, 26.00 * sky);
		c.curveTo(11.5 * skx, 26.0 * sky, 11.10 * skx, 25.70 * sky, 11.00 * skx, 25.10 * sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 9.20* skx, 21.60* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 6.60* skx, 20.70* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 5.80* skx, 19.70* sky);
		c.curveTo(5.90 * skx, 19.10 * sky, 6.20 * skx, 18.90 * sky, 7.00 * skx, 19.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(33.90 * skx, 50.00* sky);
		c.curveTo(34.20 * skx, 48.40 * sky, 34.60 * skx, 46.90 * sky, 34.90 * skx, 45.30 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 35.60* skx, 44.60* sky);
		c.curveTo(36.30 * skx, 44.40 * sky, 36.80 * skx, 45.00 * sky, 36.60 * skx, 45.80 * sky);
		c.lineTo(36.00* skx,48.90* sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 0, 35.80* skx, 50.40* sky);
		c.curveTo(35.70 * skx, 51.10 * sky, 35.40 * skx, 51.40 * sky, 34.80 * skx, 51.40 * sky);
		c.curveTo(34.199999999999996 * skx, 51.4 * sky, 34.00 * skx, 50.90 * sky, 34.00 * skx, 50.20 * sky);
		c.arcTo(0.30 * skx, 0.30 * sky, 0, 0, 1, 34.10* skx, 50.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(33.90 * skx, 29.90* sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 1, 32.40* skx, 34.00* sky);
		c.arcTo(8.70 * skx, 8.70 * sky, 0, 0, 1, 27.50* skx, 37.50* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 1, 23.60* skx, 37.10* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 22.90* skx, 32.50* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 25.00* skx, 31.20* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 27.10* skx, 29.70* sky);
		c.arcTo(15.90 * skx, 15.90 * sky, 0, 0, 1, 28.60* skx, 27.60* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 33.90* skx, 29.90* sky);
		c.close();
		c.moveTo(25.90 * skx, 36.00* sky);
		c.lineTo(27.60* skx,35.70* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 30.90* skx, 32.90* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 0, 32.10* skx, 30.10* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 29.60* skx, 29.10* sky);
		c.lineTo(28.70* skx,30.40* sky);
		c.curveTo(28.20 * skx, 31.10 * sky, 27.80 * skx, 32.00 * sky, 26.80 * skx, 32.40 * sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 1, 25.10* skx, 32.90* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 24.00* skx, 34.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 24.70* skx, 35.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(15.00 * skx, 47.60* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 12.40* skx, 45.00* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 17.70* skx, 45.00* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 15.00* skx, 47.60* sky);
		c.close();
		c.moveTo(15.90 * skx, 45.00* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 15.00* skx, 44.10* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 14.10* skx, 45.00* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 1, 0, 15.90* skx, 45.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(45.10 * skx, 19.80* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 44.20* skx, 19.20* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 44.50* skx, 18.20* sky);
		c.arcTo(9.70 * skx, 9.70 * sky, 0, 0, 0, 48.30* skx, 14.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 49.80* skx, 15.40* sky);
		c.arcTo(12.10 * skx, 12.10 * sky, 0, 0, 1, 47.30* skx, 18.40* sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 1, 45.50* skx, 19.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(45.10 * skx, 11.90* sky);
		c.arcTo(19.40 * skx, 19.40 * sky, 0, 0, 0, 44.60* skx, 13.90* sky);
		c.curveTo(44.50 * skx, 15.00 * sky, 44.30 * skx, 16.20 * sky, 44.20 * skx, 17.30 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 43.20* skx, 18.10* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 42.40* skx, 17.10* sky);
		c.lineTo(43.30* skx,11.70* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 44.00* skx, 11.00* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 44.90* skx, 11.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(36.70 * skx, 27.10* sky);
		c.lineTo(37.20* skx,26.00* sky);
		c.lineTo(39.30* skx,22.70* sky);
		c.lineTo(39.50* skx,22.40* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 40.70* skx, 22.20* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 1, 40.90* skx, 23.30* sky);
		c.arcTo(17.60 * skx, 17.60 * sky, 0, 0, 1, 39.50* skx, 25.60* sky);
		c.lineTo(38.40* skx,27.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 37.30* skx, 28.30* sky);
		c.curveTo(36.90 * skx, 28.20 * sky, 36.60 * skx, 27.80 * sky, 36.70 * skx, 27.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(41.50 * skx, 17.90* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 40.90* skx, 18.90* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 39.90* skx, 18.60* sky);
		c.lineTo(36.90* skx,14.20* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 37.00* skx, 12.90* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 38.30* skx, 13.20* sky);
		c.lineTo(41.20* skx,17.30* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 41.50* skx, 17.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(36.70 * skx, 20.90* sky);
		c.lineTo(35.10* skx,21.10* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 34.10* skx, 20.60* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 34.60* skx, 19.50* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 35.80* skx, 19.20* sky);
		c.lineTo(39.40* skx,19.40* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 40.20* skx, 20.30* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 39.20* skx, 21.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(43.80 * skx, 24.00* sky);
		c.arcTo(19.50 * skx, 19.50 * sky, 0, 0, 1, 43.20* skx, 26.30* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 42.10* skx, 26.80* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 41.60* skx, 25.80* sky);
		c.arcTo(20.00 * skx, 20.00 * sky, 0, 0, 1, 42.00* skx, 23.40* sky);
		c.curveTo(42.00 * skx, 22.80 * sky, 42.30 * skx, 22.50 * sky, 42.80 * skx, 22.50 * sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 43.70* skx, 23.40* sky);
		c.lineTo(43.70* skx,24.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(46.20 * skx, 22.90* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 1, 44.60* skx, 22.30* sky);
		c.curveTo(44.20 * skx, 22.20 * sky, 44.10 * skx, 21.60 * sky, 44.20 * skx, 21.30 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 45.20* skx, 20.70* sky);
		c.lineTo(46.70* skx,21.20* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 47.20* skx, 22.20* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 46.20* skx, 22.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(43.30 * skx, 20.30* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 1, 1, 41.50* skx, 20.30* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 43.30* skx, 20.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.70 * skx, 15.80* sky);
		c.curveTo(32.20 * skx, 15.90 * sky, 31.80 * skx, 15.40 * sky, 31.80 * skx, 14.90 * sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 32.70* skx, 14.10* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 33.60* skx, 15.00* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 32.70* skx, 15.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(22.10 * skx, 38.80* sky);
		c.curveTo(22.60 * skx, 38.80 * sky, 22.90 * skx, 39.20 * sky, 23.00 * skx, 39.70 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 1, 1, 22.10* skx, 38.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(16.80 * skx, 38.80* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 15.90* skx, 38.00* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 16.80* skx, 37.10* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 17.70* skx, 37.90* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 16.80* skx, 38.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(10.60 * skx, 48.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 9.80* skx, 49.40* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 8.80* skx, 48.60* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 9.70* skx, 47.70* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 10.60* skx, 48.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mc41fc6ed93dba7f4e5a2fc36db393a7', mc41fc6ed93dba7f4e5a2fc36db393a7);
	mc41fc6ed93dba7f4e5a2fc36db393a7.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mf7e8ce4b1c61dbfc2cfebfc7c968579() {
		mxActor.call(this);
	};
	mxUtils.extend(mf7e8ce4b1c61dbfc2cfebfc7c968579, mxActor);
	mf7e8ce4b1c61dbfc2cfebfc7c968579.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 23;
		h1 = 72;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(13.40 * skx, 53.80* sky);
		c.curveTo(13.40 * skx, 53.80 * sky, 21.70 * skx, 49.20 * sky, 20.70 * skx, 24.70 * sky);
		c.curveTo(13.80 * skx, 30.40 * sky, 5.90 * skx, 36.80 * sky, 8.00 * skx, 45.00 * sky);
		c.curveTo(10.1 * skx, 53.2 * sky, 13.40 * skx, 53.80 * sky, 13.40 * skx, 53.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(21.00 * skx, 28.70* sky);
		c.curveTo(21.00 * skx, 49.60 * sky, 13.80 * skx, 53.90 * sky, 13.50 * skx, 54.10 * sky);
		c.lineTo(13.30 * skx,54.10* sky);
		c.curveTo(13.20 * skx, 54.00 * sky, 10.00 * skx, 53.30 * sky, 7.80 * skx, 45.10 * sky);
		c.curveTo(5.6 * skx, 36.900000000000006 * sky, 12.50 * skx, 31.90 * sky, 17.80 * skx, 27.10 * sky);
		c.lineTo(20.50* skx,24.50* sky);
		c.lineTo(20.90* skx,24.10* sky);
		c.lineTo(20.90* skx,24.70 * sky);
		c.curveTo(21.00 * skx, 26.10 * sky, 21.00 * skx, 27.40 * sky, 21.00 * skx, 28.70 * sky);
		c.close();
		c.moveTo(13.30 * skx, 53.60* sky);
		c.curveTo(14.20 * skx, 53.00 * sky, 21.20 * skx, 47.40 * sky, 20.50 * skx, 25.20 * sky);
		c.lineTo(18.10* skx,27.40* sky);
		c.curveTo(12.90 * skx, 32.20 * sky, 6.50 * skx, 38.20 * sky, 8.30 * skx, 44.90 * sky);
		c.curveTo(10.100000000000001 * skx, 51.599999999999994 * sky, 12.80 * skx, 53.40 * sky, 13.30 * skx, 53.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(0.50 * skx, 19.30* sky);
		c.arcTo(28.50 * skx, 28.50 * sky, 0, 0, 1, 1.40* skx, 11.60* sky);
		c.curveTo(2.50 * skx, 7.30 * sky, 6.20 * skx, 0.50 * sky, 11.20 * skx, 0.50 * sky);
		c.curveTo(12.50 * skx, 0.50 * sky, 18.90 * skx, 2.70 * sky, 21.20 * skx, 14.00 * sky);
		c.arcTo(63.50 * skx, 63.50 * sky, 0, 0, 1, 22.80* skx, 25.00* sky);
		c.curveTo(22.80 * skx, 28.10 * sky, 21.90 * skx, 29.70 * sky, 20.00 * skx, 30.80 * sky);
		c.curveTo(18.1 * skx, 31.900000000000002 * sky, 14.30 * skx, 33.70 * sky, 14.30 * skx, 42.60 * sky);
		c.curveTo(14.30 * skx, 43.90 * sky, 14.40 * skx, 45.30 * sky, 14.50 * skx, 47.00 * sky);
		c.arcTo(29.90 * skx, 29.90 * sky, 0, 0, 0, 16.00* skx, 54.90* sky);
		c.curveTo(17.10 * skx, 58.10 * sky, 18.80 * skx, 60.50 * sky, 18.80 * skx, 63.70 * sky);
		c.curveTo(18.80 * skx, 64.10 * sky, 18.70 * skx, 64.60 * sky, 18.70 * skx, 65.00 * sky);
		c.curveTo(18.20 * skx, 68.40 * sky, 16.10 * skx, 71.60 * sky, 13.00 * skx, 71.90 * sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 1, 9.80* skx, 71.10* sky);
		c.curveTo(5.20 * skx, 68.70 * sky, 4.20 * skx, 62.10 * sky, 3.90 * skx, 57.50 * sky);
		c.curveTo(3.5999999999999996 * skx, 52.9 * sky, 3.30 * skx, 45.60 * sky, 2.40 * skx, 39.60 * sky);
		c.curveTo(1.80 * skx, 35.80 * sky, 1.30 * skx, 32.10 * sky, 1.00 * skx, 28.30 * sky);
		c.curveTo(0.7 * skx, 24.5 * sky, 0.50 * skx, 22.40 * sky, 0.50 * skx, 19.30 * sky);
		c.moveTo(0.00 * skx, 19.30* sky);
		c.lineTo(0.00 * skx,19.30* sky);
		c.curveTo(0.00 * skx, 22.00 * sky, 0.20 * skx, 24.60 * sky, 0.40 * skx, 27.10 * sky);
		c.lineTo(0.40* skx,28.30 * sky);
		c.curveTo(0.70 * skx, 32.10 * sky, 1.20 * skx, 35.90 * sky, 1.80 * skx, 39.70 * sky);
		c.curveTo(2.4000000000000004 * skx, 43.50000000000001 * sky, 2.80 * skx, 48.20 * sky, 3.00 * skx, 52.40 * sky);
		c.curveTo(3.10 * skx, 54.10 * sky, 3.20 * skx, 55.80 * sky, 3.40 * skx, 57.50 * sky);
		c.curveTo(3.70 * skx, 62.40 * sky, 4.70 * skx, 69.10 * sky, 9.60 * skx, 71.60 * sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 0, 13.10* skx, 72.40* sky);
		c.curveTo(16.60 * skx, 72.10 * sky, 18.70 * skx, 68.40 * sky, 19.20 * skx, 65.10 * sky);
		c.curveTo(19.20 * skx, 64.60 * sky, 19.30 * skx, 64.20 * sky, 19.30 * skx, 63.70 * sky);
		c.arcTo(14.80 * skx, 14.80 * sky, 0, 0, 0, 17.50* skx, 57.50* sky);
		c.curveTo(17.20 * skx, 56.60 * sky, 16.80 * skx, 55.70 * sky, 16.40 * skx, 54.80 * sky);
		c.arcTo(32.10 * skx, 32.10 * sky, 0, 0, 1, 15.00* skx, 47.00* sky);
		c.curveTo(14.90 * skx, 45.40 * sky, 14.80 * skx, 43.90 * sky, 14.80 * skx, 42.60 * sky);
		c.curveTo(14.80 * skx, 34.50 * sky, 17.10 * skx, 33.10 * sky, 19.80 * skx, 31.60 * sky);
		c.lineTo(20.30* skx,31.30* sky);
		c.curveTo(22.40 * skx, 30.00 * sky, 23.30 * skx, 28.20 * sky, 23.30 * skx, 25.00 * sky);
		c.curveTo(23.3 * skx, 21.8 * sky, 22.80 * skx, 19.30 * sky, 21.70 * skx, 13.90 * sky);
		c.curveTo(19.30 * skx, 2.40 * sky, 12.80 * skx, 0.00 * sky, 11.20 * skx, 0.00 * sky);
		c.curveTo(5.90 * skx, 0.00 * sky, 2.20 * skx, 6.80 * sky, 0.90 * skx, 11.40 * sky);
		c.arcTo(31.20 * skx, 31.20 * sky, 0, 0, 0, 0.00* skx, 19.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(1.40 * skx, 11.60* sky);
		c.curveTo(-0.10 * skx, 17.00 * sky, 0.60 * skx, 22.90 * sky, 1.00 * skx, 28.30 * sky);
		c.curveTo(1.30 * skx, 32.10 * sky, 1.80 * skx, 35.80 * sky, 2.40 * skx, 39.60 * sky);
		c.curveTo(3.30 * skx, 45.60 * sky, 3.40 * skx, 51.50 * sky, 3.90 * skx, 57.50 * sky);
		c.curveTo(4.4 * skx, 63.5 * sky, 5.20 * skx, 68.70 * sky, 9.80 * skx, 71.10 * sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 0, 13.00* skx, 71.90* sky);
		c.curveTo(16.10 * skx, 71.60 * sky, 18.20 * skx, 68.40 * sky, 18.70 * skx, 65.00 * sky);
		c.curveTo(19.2 * skx, 61.599999999999994 * sky, 17.20 * skx, 58.50 * sky, 16.00 * skx, 54.90 * sky);
		c.arcTo(29.90 * skx, 29.90 * sky, 0, 0, 1, 14.50* skx, 47.00* sky);
		c.curveTo(13.50 * skx, 34.00 * sky, 16.70 * skx, 32.80 * sky, 20.00 * skx, 30.80 * sky);
		c.curveTo(23.3 * skx, 28.800000000000004 * sky, 23.50 * skx, 25.30 * sky, 21.20 * skx, 14.00 * sky);
		c.curveTo(18.9 * skx, 2.6999999999999993 * sky, 12.50 * skx, 0.50 * sky, 11.20 * skx, 0.50 * sky);
		c.curveTo(6.20 * skx, 0.50 * sky, 2.50 * skx, 7.30 * sky, 1.40 * skx, 11.60 * sky);
		c.close();
		c.moveTo(17.80 * skx, 23.20* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 13.80* skx, 23.20* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 15.80* skx, 21.10* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 17.80* skx, 23.20* sky);
		c.close();
		c.moveTo(11.50 * skx, 27.00* sky);
		c.curveTo(11.50 * skx, 30.50 * sky, 10.00 * skx, 33.30 * sky, 8.10 * skx, 33.30 * sky);
		c.curveTo(6.199999999999999 * skx, 33.3 * sky, 4.70 * skx, 30.50 * sky, 4.70 * skx, 27.00 * sky);
		c.curveTo(4.7 * skx, 23.5 * sky, 6.20 * skx, 20.70 * sky, 8.10 * skx, 20.70 * sky);
		c.curveTo(10.0 * skx, 20.7 * sky, 11.50 * skx, 23.50 * sky, 11.50 * skx, 27.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mf7e8ce4b1c61dbfc2cfebfc7c968579', mf7e8ce4b1c61dbfc2cfebfc7c968579);
	mf7e8ce4b1c61dbfc2cfebfc7c968579.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m063fecad02e225e239c6522fa3b9a2d() {
		mxActor.call(this);
	};
	mxUtils.extend(m063fecad02e225e239c6522fa3b9a2d, mxActor);
	m063fecad02e225e239c6522fa3b9a2d.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 64;
		h1 = 63;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(29.40 * skx, 63.40* sky);
		c.arcTo(45.70 * skx, 45.70 * sky, 0, 0, 0, 27.90* skx, 50.10* sky);
		c.arcTo(43.90 * skx, 43.90 * sky, 0, 0, 0, 22.40* skx, 37.30* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 1, 21.90* skx, 35.90* sky);
		c.curveTo(20.20 * skx, 26.80 * sky, 17.50 * skx, 18.10 * sky, 12.30 * skx, 10.30 * sky);
		c.curveTo(10.70 * skx, 7.90 * sky, 8.70 * skx, 5.80 * sky, 6.90 * skx, 3.60 * sky);
		c.lineTo(5.70* skx,2.20* sky);
		c.curveTo(5.30 * skx, 1.60 * sky, 5.20 * skx, 0.90 * sky, 5.70 * skx, 0.50 * sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 7.20* skx, -0.00* sky);
		c.arcTo(8.30 * skx, 8.30 * sky, 0, 0, 1, 9.40* skx, 0.80* sky);
		c.arcTo(40.60 * skx, 40.60 * sky, 0, 0, 1, 21.80* skx, 12.10* sky);
		c.arcTo(63.80 * skx, 63.80 * sky, 0, 0, 1, 32.30* skx, 33.50* sky);
		c.arcTo(95.90 * skx, 95.90 * sky, 0, 0, 1, 36.00* skx, 59.00* sky);
		c.arcTo(26.20 * skx, 26.20 * sky, 0, 0, 0, 36.10* skx, 61.80* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 34.70* skx, 63.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(20.80 * skx, 63.40* sky);
		c.lineTo(16.80 * skx,63.40* sky);
		c.curveTo(15.30 * skx, 63.40 * sky, 15.00 * skx, 63.10 * sky, 14.90 * skx, 61.60 * sky);
		c.curveTo(14.60 * skx, 58.20 * sky, 14.50 * skx, 54.80 * sky, 14.00 * skx, 51.40 * sky);
		c.arcTo(43.50 * skx, 43.50 * sky, 0, 0, 0, 2.50* skx, 27.30* sky);
		c.lineTo(0.40* skx,24.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 0.30* skx, 23.20* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 1.90* skx, 22.50* sky);
		c.arcTo(19.20 * skx, 19.20 * sky, 0, 0, 1, 5.20* skx, 23.90* sky);
		c.arcTo(43.80 * skx, 43.80 * sky, 0, 0, 1, 24.70* skx, 48.50* sky);
		c.arcTo(41.20 * skx, 41.20 * sky, 0, 0, 1, 26.80* skx, 61.90* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 25.30* skx, 63.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(44.70 * skx, 63.40* sky);
		c.lineTo(40.60 * skx,63.40* sky);
		c.curveTo(39.10 * skx, 63.40 * sky, 38.70 * skx, 63.00 * sky, 38.70 * skx, 61.50 * sky);
		c.arcTo(46.20 * skx, 46.20 * sky, 0, 0, 1, 48.60* skx, 33.40* sky);
		c.arcTo(36.40 * skx, 36.40 * sky, 0, 0, 1, 59.90* skx, 23.30* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 1, 61.80* skx, 22.60* sky);
		c.curveTo(62.40 * skx, 22.50 * sky, 63.60 * skx, 22.60 * sky, 63.70 * skx, 23.00 * sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 1, 63.50* skx, 25.30* sky);
		c.curveTo(62.50 * skx, 26.80 * sky, 61.20 * skx, 28.20 * sky, 60.10 * skx, 29.60 * sky);
		c.arcTo(43.00 * skx, 43.00 * sky, 0, 0, 0, 52.40* skx, 46.60* sky);
		c.arcTo(68.10 * skx, 68.10 * sky, 0, 0, 0, 50.70* skx, 61.50* sky);
		c.curveTo(50.60 * skx, 63.10 * sky, 50.30 * skx, 63.40 * sky, 48.60 * skx, 63.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(37.10 * skx, 41.40* sky);
		c.curveTo(35.90 * skx, 37.20 * sky, 34.50 * skx, 32.50 * sky, 33.20 * skx, 27.80 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 33.20* skx, 27.00* sky);
		c.curveTo(36.10 * skx, 20.70 * sky, 40.20 * skx, 15.30 * sky, 46.70 * skx, 12.30 * sky);
		c.arcTo(40.50 * skx, 40.50 * sky, 0, 0, 1, 52.90* skx, 10.50* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 54.60* skx, 11.40* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 53.90* skx, 13.20* sky);
		c.curveTo(45.90 * skx, 18.10 * sky, 41.50 * skx, 25.60 * sky, 38.90 * skx, 34.30 * sky);
		c.curveTo(38.20 * skx, 36.80 * sky, 37.60 * skx, 39.40 * sky, 37.10 * skx, 41.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m063fecad02e225e239c6522fa3b9a2d', m063fecad02e225e239c6522fa3b9a2d);
	m063fecad02e225e239c6522fa3b9a2d.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m2539a3438922f0584b0d2f2ad95f70f() {
		mxActor.call(this);
	};
	mxUtils.extend(m2539a3438922f0584b0d2f2ad95f70f, mxActor);
	m2539a3438922f0584b0d2f2ad95f70f.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 64;
		h1 = 64;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(23.20 * skx, 43.80* sky);
		c.curveTo(22.70 * skx, 41.20 * sky, 22.40 * skx, 38.60 * sky, 21.90 * skx, 36.00 * sky);
		c.arcTo(78.70 * skx, 78.70 * sky, 0, 0, 0, 15.30* skx, 15.40* sky);
		c.arcTo(45.90 * skx, 45.90 * sky, 0, 0, 0, 6.10* skx, 2.80* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 5.60* skx, 0.80* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 7.40* skx, 0.10* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 1, 9.10* skx, 0.70* sky);
		c.arcTo(37.30 * skx, 37.30 * sky, 0, 0, 1, 20.40* skx, 10.30* sky);
		c.arcTo(60.00 * skx, 60.00 * sky, 0, 0, 1, 31.10* skx, 30.00* sky);
		c.lineTo(31.50* skx,30.90* sky);
		c.arcTo(0.30 * skx, 0.30 * sky, 0, 0, 0, 31.60* skx, 31.10* sky);
		c.lineTo(33.30* skx,27.00* sky);
		c.curveTo(35.70 * skx, 21.80 * sky, 39.00 * skx, 17.10 * sky, 43.90 * skx, 13.90 * sky);
		c.arcTo(20.00 * skx, 20.00 * sky, 0, 0, 1, 52.80* skx, 10.60* sky);
		c.curveTo(53.60 * skx, 10.60 * sky, 54.40 * skx, 10.60 * sky, 54.60 * skx, 11.60 * sky);
		c.curveTo(54.800000000000004 * skx, 12.6 * sky, 54.40 * skx, 13.00 * sky, 53.60 * skx, 13.50 * sky);
		c.curveTo(48.10 * skx, 16.80 * sky, 44.30 * skx, 21.70 * sky, 41.60 * skx, 27.40 * sky);
		c.curveTo(38.900000000000006 * skx, 33.099999999999994 * sky, 37.20 * skx, 40.20 * sky, 36.30 * skx, 47.00 * sky);
		c.arcTo(98.90 * skx, 98.90 * sky, 0, 0, 0, 36.10* skx, 61.40* sky);
		c.curveTo(36.10 * skx, 62.90 * sky, 35.70 * skx, 63.50 * sky, 34.70 * skx, 63.50 * sky);
		c.curveTo(33.7 * skx, 63.5 * sky, 33.40 * skx, 62.90 * sky, 33.40 * skx, 61.50 * sky);
		c.arcTo(98.90 * skx, 98.90 * sky, 0, 0, 0, 29.60* skx, 33.90* sky);
		c.curveTo(27.00 * skx, 25.10 * sky, 23.00 * skx, 17.00 * sky, 16.80 * skx, 10.20 * sky);
		c.curveTo(15.80 * skx, 9.10 * sky, 14.60 * skx, 8.10 * sky, 13.50 * skx, 7.10 * sky);
		c.curveTo(14.50 * skx, 8.90 * sky, 15.60 * skx, 10.50 * sky, 16.60 * skx, 12.30 * sky);
		c.arcTo(76.40 * skx, 76.40 * sky, 0, 0, 1, 24.40* skx, 35.00* sky);
		c.arcTo(137.20 * skx, 137.20 * sky, 0, 0, 1, 26.80* skx, 61.40* sky);
		c.lineTo(26.80* skx,62.00 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 25.50* skx, 63.50* sky);
		c.curveTo(24.80 * skx, 63.60 * sky, 24.20 * skx, 63.00 * sky, 24.20 * skx, 62.00 * sky);
		c.curveTo(24.2 * skx, 61.0 * sky, 24.00 * skx, 58.80 * sky, 23.80 * skx, 57.10 * sky);
		c.curveTo(22.30 * skx, 45.10 * sky, 16.50 * skx, 35.60 * sky, 7.00 * skx, 28.30 * sky);
		c.curveTo(7.00 * skx, 28.20 * sky, 6.90 * skx, 28.20 * sky, 6.80 * skx, 28.20 * sky);
		c.lineTo(6.80* skx,28.40 * sky);
		c.arcTo(43.90 * skx, 43.90 * sky, 0, 0, 1, 15.70* skx, 46.50* sky);
		c.arcTo(61.20 * skx, 61.20 * sky, 0, 0, 1, 17.50* skx, 61.90* sky);
		c.curveTo(17.50 * skx, 62.90 * sky, 17.00 * skx, 63.50 * sky, 16.30 * skx, 63.50 * sky);
		c.curveTo(15.600000000000001 * skx, 63.5 * sky, 14.90 * skx, 63.00 * sky, 14.90 * skx, 61.90 * sky);
		c.curveTo(14.60 * skx, 58.80 * sky, 14.60 * skx, 55.80 * sky, 14.20 * skx, 52.70 * sky);
		c.curveTo(12.80 * skx, 43.00 * sky, 9.20 * skx, 34.30 * sky, 2.30 * skx, 27.20 * sky);
		c.curveTo(1.70 * skx, 26.50 * sky, 1.10 * skx, 25.90 * sky, 0.60 * skx, 25.20 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 0.20* skx, 23.40* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 2.10* skx, 22.60* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 1, 4.00* skx, 23.30* sky);
		c.arcTo(39.40 * skx, 39.40 * sky, 0, 0, 1, 14.70* skx, 31.60* sky);
		c.arcTo(43.10 * skx, 43.10 * sky, 0, 0, 1, 22.70* skx, 43.40* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 22.90* skx, 43.80* sky);
		c.close();
		c.moveTo(46.50 * skx, 15.80* sky);
		c.lineTo(45.70* skx,16.00* sky);
		c.arcTo(45.80 * skx, 45.80 * sky, 0, 0, 0, 41.40* skx, 19.40* sky);
		c.curveTo(37.00 * skx, 24.00 * sky, 34.60 * skx, 29.60 * sky, 33.00 * skx, 35.70 * sky);
		c.curveTo(33.00 * skx, 35.80 * sky, 32.90 * skx, 36.00 * sky, 33.00 * skx, 36.20 * sky);
		c.arcTo(28.60 * skx, 28.60 * sky, 0, 0, 0, 33.70* skx, 39.00* sky);
		c.lineTo(34.30* skx,41.90* sky);
		c.curveTo(36.20 * skx, 32.30 * sky, 39.30 * skx, 23.20 * sky, 46.50 * skx, 15.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(58.10 * skx, 27.80* sky);
		c.arcTo(40.10 * skx, 40.10 * sky, 0, 0, 0, 49.30* skx, 36.90* sky);
		c.arcTo(42.70 * skx, 42.70 * sky, 0, 0, 0, 41.40* skx, 61.30* sky);
		c.lineTo(41.40* skx,62.10 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 40.10* skx, 63.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 38.70* skx, 62.10* sky);
		c.curveTo(38.70 * skx, 60.70 * sky, 38.80 * skx, 59.30 * sky, 38.90 * skx, 57.90 * sky);
		c.arcTo(46.10 * skx, 46.10 * sky, 0, 0, 1, 49.20* skx, 32.60* sky);
		c.arcTo(37.90 * skx, 37.90 * sky, 0, 0, 1, 60.20* skx, 23.30* sky);
		c.lineTo(61.60* skx,22.70* sky);
		c.curveTo(62.30 * skx, 22.50 * sky, 63.30 * skx, 22.30 * sky, 63.70 * skx, 23.10 * sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 63.50* skx, 25.50* sky);
		c.curveTo(62.30 * skx, 26.90 * sky, 61.10 * skx, 28.30 * sky, 60.00 * skx, 29.80 * sky);
		c.arcTo(46.30 * skx, 46.30 * sky, 0, 0, 0, 51.60* skx, 50.60* sky);
		c.curveTo(51.10 * skx, 54.30 * sky, 50.90 * skx, 58.10 * sky, 50.60 * skx, 61.90 * sky);
		c.curveTo(50.60 * skx, 62.90 * sky, 50.10 * skx, 63.50 * sky, 49.30 * skx, 63.50 * sky);
		c.curveTo(48.49999999999999 * skx, 63.5 * sky, 48.00 * skx, 62.90 * sky, 48.00 * skx, 61.90 * sky);
		c.curveTo(48.10 * skx, 52.20 * sky, 49.70 * skx, 42.80 * sky, 54.30 * skx, 34.10 * sky);
		c.curveTo(55.40 * skx, 31.90 * sky, 56.80 * skx, 29.90 * sky, 58.10 * skx, 27.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m2539a3438922f0584b0d2f2ad95f70f', m2539a3438922f0584b0d2f2ad95f70f);
	m2539a3438922f0584b0d2f2ad95f70f.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function med372359cb16e5b58287617e6656bfa() {
		mxActor.call(this);
	};
	mxUtils.extend(med372359cb16e5b58287617e6656bfa, mxActor);
	med372359cb16e5b58287617e6656bfa.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 72;
		h1 = 69;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(27.90 * skx, 48.00* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 32.90* skx, 45.80* sky);
		c.curveTo(34.00 * skx, 45.80 * sky, 35.10 * skx, 46.20 * sky, 36.00 * skx, 45.90 * sky);
		c.curveTo(36.9 * skx, 45.599999999999994 * sky, 37.40 * skx, 44.40 * sky, 38.20 * skx, 43.90 * sky);
		c.arcTo(16.80 * skx, 16.80 * sky, 0, 0, 1, 41.20* skx, 42.40* sky);
		c.curveTo(41.50 * skx, 42.20 * sky, 41.80 * skx, 41.90 * sky, 41.80 * skx, 41.60 * sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 1, 43.30* skx, 37.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 43.40* skx, 36.60* sky);
		c.arcTo(10.60 * skx, 10.60 * sky, 0, 0, 1, 42.90* skx, 28.60* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 42.70* skx, 27.70* sky);
		c.curveTo(38.00 * skx, 23.00 * sky, 37.00 * skx, 17.70 * sky, 39.80 * skx, 11.80 * sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 40.00* skx, 10.50* sky);
		c.arcTo(11.40 * skx, 11.40 * sky, 0, 0, 1, 42.10* skx, 2.50* sky);
		c.lineTo(42.80* skx,1.70* sky);
		c.lineTo(44.30* skx,6.70* sky);
		c.arcTo(17.30 * skx, 17.30 * sky, 0, 0, 1, 59.90* skx, 4.60* sky);
		c.lineTo(58.80* skx,0.00* sky);
		c.lineTo(60.80* skx,1.40* sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 1, 63.80* skx, 6.00* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 64.80* skx, 7.50* sky);
		c.arcTo(12.80 * skx, 12.80 * sky, 0, 0, 1, 68.20* skx, 22.30* sky);
		c.curveTo(67.90 * skx, 22.90 * sky, 68.10 * skx, 23.20 * sky, 68.40 * skx, 23.70 * sky);
		c.curveTo(71.10 * skx, 27.30 * sky, 72.40 * skx, 31.20 * sky, 71.20 * skx, 35.60 * sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 1, 70.20* skx, 38.00* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 69.60* skx, 40.70* sky);
		c.curveTo(69.70 * skx, 44.20 * sky, 69.40 * skx, 47.60 * sky, 67.50 * skx, 50.60 * sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 66.20* skx, 52.40* sky);
		c.arcTo(11.10 * skx, 11.10 * sky, 0, 0, 0, 63.30* skx, 56.30* sky);
		c.arcTo(16.80 * skx, 16.80 * sky, 0, 0, 1, 54.30* skx, 64.70* sky);
		c.arcTo(13.10 * skx, 13.10 * sky, 0, 0, 1, 48.40* skx, 65.60* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 46.70* skx, 66.10* sky);
		c.arcTo(21.20 * skx, 21.20 * sky, 0, 0, 1, 35.40* skx, 68.80* sky);
		c.arcTo(20.70 * skx, 20.70 * sky, 0, 0, 1, 31.10* skx, 67.80* sky);
		c.curveTo(30.70 * skx, 67.80 * sky, 30.20 * skx, 67.60 * sky, 29.90 * skx, 67.70 * sky);
		c.arcTo(13.00 * skx, 13.00 * sky, 0, 0, 1, 18.20* skx, 65.20* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 17.10* skx, 64.80* sky);
		c.arcTo(11.70 * skx, 11.70 * sky, 0, 0, 1, 7.70* skx, 59.30* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 6.50* skx, 58.30* sky);
		c.curveTo(3.90 * skx, 57.00 * sky, 2.60 * skx, 54.70 * sky, 1.90 * skx, 52.00 * sky);
		c.arcTo(13.80 * skx, 13.80 * sky, 0, 0, 0, 0.70* skx, 48.60* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 1, 2.10* skx, 40.40* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 4.30* skx, 39.80* sky);
		c.lineTo(7.40* skx,41.70* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 8.40* skx, 42.10* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 1, 13.20* skx, 44.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 14.00* skx, 45.00* sky);
		c.curveTo(16.10 * skx, 44.50 * sky, 17.70 * skx, 45.40 * sky, 19.20 * skx, 46.70 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 20.70* skx, 46.90* sky);
		c.curveTo(23.20 * skx, 46.10 * sky, 24.40 * skx, 46.30 * sky, 27.90 * skx, 48.00 * sky);
		c.close();
		c.moveTo(15.10 * skx, 61.60* sky);
		c.lineTo(14.60* skx,60.50* sky);
		c.arcTo(10.40 * skx, 10.40 * sky, 0, 0, 1, 13.80* skx, 55.30* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 1, 1, 16.60* skx, 55.40* sky);
		c.lineTo(16.60* skx,56.60 * sky);
		c.arcTo(10.00 * skx, 10.00 * sky, 0, 0, 0, 25.30* skx, 65.20* sky);
		c.lineTo(27.20 * skx,65.20* sky);
		c.arcTo(15.90 * skx, 15.90 * sky, 0, 0, 1, 23.50* skx, 58.50* sky);
		c.curveTo(23.20 * skx, 57.40 * sky, 23.60 * skx, 56.60 * sky, 24.40 * skx, 56.40 * sky);
		c.curveTo(25.199999999999996 * skx, 56.199999999999996 * sky, 25.90 * skx, 56.70 * sky, 26.20 * skx, 57.70 * sky);
		c.curveTo(28.10 * skx, 63.60 * sky, 31.80 * skx, 66.30 * sky, 38.00 * skx, 65.80 * sky);
		c.arcTo(16.80 * skx, 16.80 * sky, 0, 0, 0, 43.50* skx, 64.30* sky);
		c.lineTo(42.70* skx,63.90* sky);
		c.arcTo(13.80 * skx, 13.80 * sky, 0, 0, 1, 36.50* skx, 57.90* sky);
		c.curveTo(35.90 * skx, 56.90 * sky, 36.10 * skx, 56.10 * sky, 36.90 * skx, 55.70 * sky);
		c.curveTo(37.699999999999996 * skx, 55.300000000000004 * sky, 38.40 * skx, 55.60 * sky, 39.00 * skx, 56.60 * sky);
		c.curveTo(42.10 * skx, 62.40 * sky, 52.00 * skx, 66.10 * sky, 58.70 * skx, 58.20 * sky);
		c.lineTo(59.60* skx,56.90* sky);
		c.lineTo(60.40* skx,55.60* sky);
		c.arcTo(22.30 * skx, 22.30 * sky, 0, 0, 1, 47.60* skx, 54.20* sky);
		c.curveTo(46.60 * skx, 53.70 * sky, 46.20 * skx, 52.90 * sky, 46.50 * skx, 52.10 * sky);
		c.curveTo(46.8 * skx, 51.300000000000004 * sky, 47.70 * skx, 51.10 * sky, 48.80 * skx, 51.50 * sky);
		c.arcTo(18.60 * skx, 18.60 * sky, 0, 0, 0, 59.20* skx, 52.80* sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 0, 66.60* skx, 42.10* sky);
		c.arcTo(32.50 * skx, 32.50 * sky, 0, 0, 1, 62.30* skx, 44.00* sky);
		c.arcTo(13.70 * skx, 13.70 * sky, 0, 0, 1, 51.80* skx, 43.20* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 50.90* skx, 41.10* sky);
		c.curveTo(51.40 * skx, 40.30 * sky, 52.10 * skx, 40.20 * sky, 53.20 * skx, 40.70 * sky);
		c.arcTo(11.40 * skx, 11.40 * sky, 0, 0, 0, 65.80* skx, 39.00* sky);
		c.curveTo(69.70 * skx, 35.90 * sky, 69.80 * skx, 29.20 * sky, 66.20 * skx, 25.80 * sky);
		c.curveTo(60.30 * skx, 31.90 * sky, 53.50 * skx, 33.30 * sky, 45.50 * skx, 29.80 * sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 0, 46.20* skx, 36.10* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 46.00* skx, 38.90* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 44.40* skx, 43.00* sky);
		c.curveTo(44.40 * skx, 44.10 * sky, 43.90 * skx, 44.60 * sky, 42.80 * skx, 44.90 * sky);
		c.arcTo(7.40 * skx, 7.40 * sky, 0, 0, 0, 38.30* skx, 47.70* sky);
		c.curveTo(37.30 * skx, 49.20 * sky, 37.30 * skx, 49.20 * sky, 35.40 * skx, 48.70 * sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 0, 29.40* skx, 50.10* sky);
		c.curveTo(27.90 * skx, 51.30 * sky, 27.90 * skx, 51.30 * sky, 26.30 * skx, 50.30 * sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 20.40* skx, 50.00* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 18.20* skx, 49.50* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 0, 13.40* skx, 47.80* sky);
		c.curveTo(12.00 * skx, 48.00 * sky, 11.70 * skx, 47.90 * sky, 11.10 * skx, 46.60 * sky);
		c.curveTo(10.5 * skx, 45.300000000000004 * sky, 10.20 * skx, 45.00 * sky, 9.30 * skx, 45.10 * sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 1, 4.80* skx, 43.30* sky);
		c.curveTo(4.10 * skx, 42.50 * sky, 3.60 * skx, 42.80 * sky, 3.30 * skx, 43.90 * sky);
		c.curveTo(5.30 * skx, 43.80 * sky, 5.90 * skx, 44.70 * sky, 5.00 * skx, 46.50 * sky);
		c.curveTo(4.1 * skx, 48.3 * sky, 4.40 * skx, 52.60 * sky, 5.80 * skx, 53.80 * sky);
		c.curveTo(6.30 * skx, 52.40 * sky, 6.70 * skx, 50.80 * sky, 7.30 * skx, 49.30 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 9.30* skx, 48.50* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 9.80* skx, 50.50* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 0, 9.80* skx, 57.10* sky);
		c.arcTo(9.60 * skx, 9.60 * sky, 0, 0, 0, 15.10* skx, 61.60* sky);
		c.close();
		c.moveTo(60.30 * skx, 8.00* sky);
		c.arcTo(13.70 * skx, 13.70 * sky, 0, 0, 0, 43.10* skx, 12.00* sky);
		c.arcTo(10.20 * skx, 10.20 * sky, 0, 0, 0, 45.00* skx, 26.00* sky);
		c.arcTo(12.40 * skx, 12.40 * sky, 0, 0, 0, 54.60* skx, 28.70* sky);
		c.curveTo(59.70 * skx, 28.20 * sky, 63.60 * skx, 25.80 * sky, 65.70 * skx, 20.90 * sky);
		c.arcTo(8.30 * skx, 8.30 * sky, 0, 0, 0, 65.60* skx, 14.00* sky);
		c.curveTo(65.30 * skx, 15.00 * sky, 64.50 * skx, 15.00 * sky, 63.80 * skx, 14.60 * sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 1, 59.50* skx, 9.90* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 60.30* skx, 8.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(51.50 * skx, 13.60* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 1, 48.60* skx, 18.00* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 44.00* skx, 15.40* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 46.40* skx, 10.50* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 49.90* skx, 10.20* sky);
		c.curveTo(51.10 * skx, 10.90 * sky, 51.50 * skx, 12.00 * sky, 51.50 * skx, 13.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('med372359cb16e5b58287617e6656bfa', med372359cb16e5b58287617e6656bfa);
	med372359cb16e5b58287617e6656bfa.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m1187a00f495460b0a0e85106d7a5406() {
		mxActor.call(this);
	};
	mxUtils.extend(m1187a00f495460b0a0e85106d7a5406, mxActor);
	m1187a00f495460b0a0e85106d7a5406.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 72;
		h1 = 72;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(24.20 * skx, 61.80* sky);
		c.curveTo(23.10 * skx, 65.30 * sky, 24.20 * skx, 68.10 * sky, 26.20 * skx, 70.70 * sky);
		c.curveTo(21.10 * skx, 72.80 * sky, 14.50 * skx, 66.60 * sky, 14.20 * skx, 59.30 * sky);
		c.curveTo(12.70 * skx, 60.40 * sky, 12.30 * skx, 63.00 * sky, 13.00 * skx, 66.50 * sky);
		c.curveTo(7.80 * skx, 65.70 * sky, 4.90 * skx, 59.30 * sky, 7.20 * skx, 53.60 * sky);
		c.curveTo(5.60 * skx, 54.00 * sky, 4.70 * skx, 55.50 * sky, 3.90 * skx, 58.60 * sky);
		c.curveTo(1.50 * skx, 57.50 * sky, 0.80 * skx, 53.70 * sky, 2.30 * skx, 48.70 * sky);
		c.lineTo(0.30* skx,50.50* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 1.90* skx, 44.40* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 2.80* skx, 44.40* sky);
		c.lineTo(6.00* skx,46.40* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 6.90* skx, 46.70* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 1, 11.70* skx, 49.10* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 12.50* skx, 49.60* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 13.70* skx, 49.60* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 1, 18.70* skx, 52.60* sky);
		c.curveTo(21.80 * skx, 50.70 * sky, 24.60 * skx, 51.30 * sky, 27.30 * skx, 53.40 * sky);
		c.curveTo(29.60 * skx, 50.90 * sky, 32.50 * skx, 50.50 * sky, 35.70 * skx, 51.10 * sky);
		c.curveTo(36.00 * skx, 51.10 * sky, 36.50 * skx, 51.00 * sky, 36.60 * skx, 50.70 * sky);
		c.arcTo(8.40 * skx, 8.40 * sky, 0, 0, 1, 42.70* skx, 46.90* sky);
		c.arcTo(9.00 * skx, 9.00 * sky, 0, 0, 1, 44.90* skx, 41.20* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 45.00* skx, 40.50* sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 1, 45.80* skx, 31.00* sky);
		c.curveTo(45.70 * skx, 30.80 * sky, 45.50 * skx, 30.70 * sky, 45.40 * skx, 30.60 * sky);
		c.curveTo(38.30 * skx, 25.60 * sky, 37.80 * skx, 16.50 * sky, 44.10 * skx, 10.70 * sky);
		c.curveTo(50.400000000000006 * skx, 4.899999999999999 * sky, 60.20 * skx, 5.60 * sky, 65.60 * skx, 11.40 * sky);
		c.curveTo(70.99999999999999 * skx, 17.200000000000003 * sky, 69.80 * skx, 24.80 * sky, 63.80 * skx, 29.50 * sky);
		c.arcTo(16.20 * skx, 16.20 * sky, 0, 0, 1, 55.70* skx, 32.90* sky);
		c.lineTo(54.70* skx,33.40* sky);
		c.curveTo(60.40 * skx, 34.80 * sky, 65.00 * skx, 32.30 * sky, 69.40 * skx, 29.00 * sky);
		c.arcTo(10.90 * skx, 10.90 * sky, 0, 0, 1, 66.10* skx, 44.80* sky);
		c.arcTo(23.20 * skx, 23.20 * sky, 0, 0, 1, 56.80* skx, 47.10* sky);
		c.lineTo(55.30 * skx,47.10* sky);
		c.arcTo(11.70 * skx, 11.70 * sky, 0, 0, 0, 61.60* skx, 48.80* sky);
		c.curveTo(63.80 * skx, 48.80 * sky, 66.00 * skx, 48.40 * sky, 68.20 * skx, 48.20 * sky);
		c.curveTo(68.80 * skx, 52.90 * sky, 64.90 * skx, 57.80 * sky, 59.80 * skx, 58.60 * sky);
		c.arcTo(20.90 * skx, 20.90 * sky, 0, 0, 1, 49.30* skx, 57.50* sky);
		c.lineTo(48.40* skx,57.20* sky);
		c.lineTo(48.30 * skx,57.20* sky);
		c.curveTo(49.20 * skx, 59.00 * sky, 52.80 * skx, 60.80 * sky, 59.70 * skx, 62.90 * sky);
		c.curveTo(58.10 * skx, 65.90 * sky, 55.80 * skx, 68.00 * sky, 52.50 * skx, 68.60 * sky);
		c.curveTo(46.90 * skx, 69.70 * sky, 42.20 * skx, 67.80 * sky, 38.30 * skx, 63.90 * sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 37.60* skx, 63.20* sky);
		c.arcTo(9.90 * skx, 9.90 * sky, 0, 0, 0, 43.50* skx, 70.70* sky);
		c.lineTo(41.80* skx,71.00* sky);
		c.lineTo(40.20* skx,71.20* sky);
		c.arcTo(33.70 * skx, 33.70 * sky, 0, 0, 1, 33.10* skx, 71.20* sky);
		c.curveTo(28.60 * skx, 70.30 * sky, 26.10 * skx, 67.00 * sky, 24.60 * skx, 62.90 * sky);
		c.close();
		c.moveTo(51.90 * skx, 15.40* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 47.40* skx, 12.10* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 44.00* skx, 18.10* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 47.40* skx, 20.60* sky);
		c.curveTo(49.80 * skx, 20.50 * sky, 51.90 * skx, 18.10 * sky, 51.90 * skx, 15.40 * sky);
		c.close();
		c.moveTo(66.50 * skx, 15.70* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 66.30* skx, 14.90* sky);
		c.arcTo(9.00 * skx, 9.00 * sky, 0, 0, 0, 61.80* skx, 10.20* sky);
		c.curveTo(61.40 * skx, 10.00 * sky, 60.70 * skx, 9.90 * sky, 60.40 * skx, 10.20 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 60.00* skx, 11.60* sky);
		c.arcTo(8.20 * skx, 8.20 * sky, 0, 0, 0, 65.10* skx, 16.90* sky);
		c.curveTo(66.00 * skx, 17.30 * sky, 66.50 * skx, 16.80 * sky, 66.50 * skx, 15.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(39.00 * skx, 13.20* sky);
		c.curveTo(38.10 * skx, 9.00 * sky, 38.60 * skx, 5.10 * sky, 41.50 * skx, 1.70 * sky);
		c.lineTo(43.40* skx,7.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(58.80 * skx, 0.00* sky);
		c.curveTo(62.00 * skx, 1.60 * sky, 63.50 * skx, 4.30 * sky, 64.40 * skx, 7.40 * sky);
		c.lineTo(59.80* skx,4.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m1187a00f495460b0a0e85106d7a5406', m1187a00f495460b0a0e85106d7a5406);
	m1187a00f495460b0a0e85106d7a5406.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mb0c536f7f45f1db410055cdb72a53ae() {
		mxActor.call(this);
	};
	mxUtils.extend(mb0c536f7f45f1db410055cdb72a53ae, mxActor);
	mb0c536f7f45f1db410055cdb72a53ae.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 59;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(49.70 * skx, 16.50* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 1, 54.20* skx, 20.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 54.80* skx, 21.50* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 1, 59.30* skx, 27.60* sky);
		c.curveTo(59.40 * skx, 30.60 * sky, 57.90 * skx, 32.70 * sky, 55.30 * skx, 34.10 * sky);
		c.lineTo(55.00 * skx,34.10* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 57.10* skx, 39.40* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 54.80* skx, 44.10* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 44.50* skx, 42.70* sky);
		c.arcTo(9.10 * skx, 9.10 * sky, 0, 0, 1, 38.60* skx, 43.50* sky);
		c.curveTo(38.40 * skx, 43.40 * sky, 38.10 * skx, 43.60 * sky, 38.00 * skx, 43.80 * sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 30.80* skx, 44.40* sky);
		c.curveTo(30.70 * skx, 44.20 * sky, 30.30 * skx, 44.20 * sky, 30.10 * skx, 44.30 * sky);
		c.arcTo(6.90 * skx, 6.90 * sky, 0, 0, 1, 25.20* skx, 44.80* sky);
		c.lineTo(24.40 * skx,44.80* sky);
		c.arcTo(9.30 * skx, 9.30 * sky, 0, 0, 1, 19.50* skx, 45.70* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 18.40* skx, 46.00* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 7.60* skx, 44.00* sky);
		c.curveTo(7.30 * skx, 43.40 * sky, 7.00 * skx, 43.40 * sky, 6.40 * skx, 43.40 * sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 0.60* skx, 39.50* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 1, 1.90* skx, 32.20* sky);
		c.arcTo(8.90 * skx, 8.90 * sky, 0, 0, 1, 4.10* skx, 30.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 4.90* skx, 29.60* sky);
		c.curveTo(5.00 * skx, 29.00 * sky, 5.30 * skx, 28.30 * sky, 5.50 * skx, 27.60 * sky);
		c.arcTo(14.90 * skx, 14.90 * sky, 0, 0, 1, 3.00* skx, 26.30* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 4.00* skx, 14.80* sky);
		c.curveTo(4.50 * skx, 14.50 * sky, 4.80 * skx, 14.30 * sky, 4.80 * skx, 13.60 * sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 1, 13.90* skx, 7.50* sky);
		c.arcTo(22.60 * skx, 22.60 * sky, 0, 0, 1, 15.50* skx, 4.90* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 1, 21.30* skx, 2.50* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 22.40* skx, 2.10* sky);
		c.arcTo(7.40 * skx, 7.40 * sky, 0, 0, 1, 34.20* skx, 4.10* sky);
		c.curveTo(34.30 * skx, 4.40 * sky, 34.50 * skx, 4.70 * sky, 34.70 * skx, 4.70 * sky);
		c.arcTo(6.90 * skx, 6.90 * sky, 0, 0, 1, 40.10* skx, 8.00* sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 1, 47.90* skx, 8.90* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 49.70* skx, 16.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(35.90 * skx, 47.70* sky);
		c.curveTo(35.90 * skx, 49.40 * sky, 35.90 * skx, 50.90 * sky, 36.00 * skx, 52.40 * sky);
		c.curveTo(36.1 * skx, 53.9 * sky, 36.90 * skx, 55.20 * sky, 38.80 * skx, 55.40 * sky);
		c.lineTo(41.70* skx,55.70* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 43.80* skx, 57.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 42.70* skx, 59.30* sky);
		c.lineTo(17.50 * skx,59.30* sky);
		c.curveTo(16.00 * skx, 59.30 * sky, 15.60 * skx, 59.10 * sky, 15.40 * skx, 57.90 * sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 16.70* skx, 55.30* sky);
		c.arcTo(13.70 * skx, 13.70 * sky, 0, 0, 1, 19.60* skx, 54.60* sky);
		c.arcTo(29.30 * skx, 29.30 * sky, 0, 0, 0, 22.50* skx, 54.10* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 24.70* skx, 51.30* sky);
		c.curveTo(24.70 * skx, 50.30 * sky, 24.70 * skx, 49.30 * sky, 24.60 * skx, 48.30 * sky);
		c.curveTo(24.500000000000004 * skx, 47.3 * sky, 24.90 * skx, 47.50 * sky, 25.50 * skx, 47.50 * sky);
		c.lineTo(29.90* skx,47.20* sky);
		c.curveTo(30.10 * skx, 47.20 * sky, 30.40 * skx, 47.10 * sky, 30.50 * skx, 47.20 * sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 0, 35.90* skx, 47.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mb0c536f7f45f1db410055cdb72a53ae', mb0c536f7f45f1db410055cdb72a53ae);
	mb0c536f7f45f1db410055cdb72a53ae.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m7d79075032d1df360f494dc27ec6d8b() {
		mxActor.call(this);
	};
	mxUtils.extend(m7d79075032d1df360f494dc27ec6d8b, mxActor);
	m7d79075032d1df360f494dc27ec6d8b.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 59;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(17.80 * skx, 57.40* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 17.90* skx, 57.90* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 17.00* skx, 59.30* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 15.60* skx, 58.50* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 17.20* skx, 55.00* sky);
		c.curveTo(18.40 * skx, 54.70 * sky, 19.70 * skx, 54.60 * sky, 20.90 * skx, 54.40 * sky);
		c.lineTo(22.50* skx,54.10* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 24.70* skx, 51.10* sky);
		c.curveTo(24.60 * skx, 49.10 * sky, 24.40 * skx, 47.20 * sky, 24.30 * skx, 45.30 * sky);
		c.arcTo(36.40 * skx, 36.40 * sky, 0, 0, 1, 19.80* skx, 45.80* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 17.90* skx, 46.40* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 1, 7.80* skx, 44.50* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 7.40* skx, 43.60* sky);
		c.arcTo(12.60 * skx, 12.60 * sky, 0, 0, 1, 4.70* skx, 43.20* sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 1, 0.00* skx, 37.20* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 4.00* skx, 30.70* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 5.00* skx, 29.50* sky);
		c.arcTo(16.60 * skx, 16.60 * sky, 0, 0, 1, 5.60* skx, 27.40* sky);
		c.curveTo(2.00 * skx, 26.10 * sky, 0.20 * skx, 24.10 * sky, 0.10 * skx, 21.00 * sky);
		c.curveTo(0.10 * skx, 17.9 * sky, 1.60 * skx, 15.90 * sky, 4.70 * skx, 14.50 * sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 7.50* skx, 8.50* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 1, 14.00* skx, 7.60* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 14.40* skx, 6.70* sky);
		c.curveTo(15.70 * skx, 3.50 * sky, 19.10 * skx, 1.90 * sky, 21.60 * skx, 2.50 * sky);
		c.curveTo(21.80 * skx, 2.60 * sky, 22.20 * skx, 2.40 * sky, 22.40 * skx, 2.20 * sky);
		c.curveTo(26.30 * skx, -1.40 * sky, 31.50 * skx, -0.50 * sky, 34.00 * skx, 4.10 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 34.60* skx, 4.70* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 40.00* skx, 8.10* sky);
		c.curveTo(42.80 * skx, 6.60 * sky, 45.50 * skx, 6.80 * sky, 47.80 * skx, 8.90 * sky);
		c.curveTo(50.099999999999994 * skx, 11.0 * sky, 50.70 * skx, 13.60 * sky, 49.50 * skx, 16.60 * sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 54.10* skx, 21.10* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 54.60* skx, 21.50* sky);
		c.curveTo(57.40 * skx, 22.50 * sky, 59.10 * skx, 24.40 * sky, 59.30 * skx, 27.40 * sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 55.10* skx, 34.00* sky);
		c.lineTo(54.80* skx,34.20* sky);
		c.curveTo(57.80 * skx, 37.90 * sky, 57.70 * skx, 41.80 * sky, 54.50 * skx, 44.40 * sky);
		c.curveTo(51.3 * skx, 47.0 * sky, 47.70 * skx, 46.30 * sky, 44.80 * skx, 42.80 * sky);
		c.lineTo(41.00* skx,43.70* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 1, 39.60* skx, 43.60* sky);
		c.curveTo(37.90 * skx, 42.80 * sky, 37.30 * skx, 44.50 * sky, 36.20 * skx, 45.00 * sky);
		c.lineTo(36.20* skx,45.30 * sky);
		c.curveTo(36.10 * skx, 47.70 * sky, 36.00 * skx, 50.20 * sky, 36.00 * skx, 52.60 * sky);
		c.curveTo(36.0 * skx, 55.0 * sky, 36.90 * skx, 55.10 * sky, 38.70 * skx, 55.30 * sky);
		c.lineTo(41.90* skx,55.70* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 1, 43.90* skx, 57.90* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 43.00* skx, 59.30* sky);
		c.curveTo(42.40 * skx, 59.50 * sky, 41.90 * skx, 59.20 * sky, 41.50 * skx, 58.60 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 40.70* skx, 58.00* sky);
		c.lineTo(38.00* skx,57.70* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 1, 33.50* skx, 52.60* sky);
		c.curveTo(33.50 * skx, 50.50 * sky, 33.60 * skx, 48.30 * sky, 33.70 * skx, 46.20 * sky);
		c.lineTo(33.70* skx,45.70 * sky);
		c.lineTo(30.90* skx,44.20* sky);
		c.lineTo(30.30 * skx,44.20* sky);
		c.lineTo(26.90* skx,45.40* sky);
		c.arcTo(19.90 * skx, 19.90 * sky, 0, 0, 0, 27.10* skx, 47.60* sky);
		c.curveTo(27.20 * skx, 48.60 * sky, 27.20 * skx, 49.60 * sky, 27.20 * skx, 50.70 * sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 22.00* skx, 56.80* sky);
		c.close();
		c.moveTo(16.50 * skx, 9.30* sky);
		c.curveTo(16.20 * skx, 9.80 * sky, 16.10 * skx, 10.40 * sky, 15.70 * skx, 10.70 * sky);
		c.curveTo(15.299999999999997 * skx, 10.999999999999998 * sky, 14.50 * skx, 10.80 * sky, 14.00 * skx, 10.40 * sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 0, 10.90* skx, 9.60* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 7.30* skx, 14.80* sky);
		c.curveTo(7.50 * skx, 15.90 * sky, 7.20 * skx, 16.30 * sky, 6.10 * skx, 16.60 * sky);
		c.lineTo(5.60 * skx,16.60* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 7.50* skx, 25.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 9.20* skx, 25.60* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 8.70* skx, 27.30* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 0, 7.20* skx, 31.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 6.00* skx, 32.50* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 2.50* skx, 37.70* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 7.60* skx, 41.00* sky);
		c.curveTo(8.80 * skx, 40.80 * sky, 9.20 * skx, 41.10 * sky, 9.50 * skx, 42.20 * sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 12.70* skx, 45.60* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 0, 17.20* skx, 43.80* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 18.90* skx, 43.20* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 23.80* skx, 42.50* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 25.40* skx, 42.40* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 29.60* skx, 41.80* sky);
		c.curveTo(30.60 * skx, 41.10 * sky, 31.00 * skx, 41.20 * sky, 31.80 * skx, 42.00 * sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 36.60* skx, 41.60* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 38.50* skx, 40.90* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 0, 43.50* skx, 40.40* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 46.60* skx, 41.30* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 50.90* skx, 43.40* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 54.40* skx, 40.30* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 52.90* skx, 35.70* sky);
		c.curveTo(51.90 * skx, 35.00 * sky, 52.10 * skx, 34.10 * sky, 52.30 * skx, 33.10 * sky);
		c.curveTo(52.49999999999999 * skx, 32.1 * sky, 53.00 * skx, 32.20 * sky, 53.60 * skx, 32.00 * sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 56.80* skx, 27.80* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 53.50* skx, 23.70* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 51.80* skx, 22.00* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 47.90* skx, 18.70* sky);
		c.curveTo(47.30 * skx, 18.70 * sky, 46.80 * skx, 18.70 * sky, 46.50 * skx, 18.10 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 46.80* skx, 16.40* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 40.70* skx, 10.60* sky);
		c.curveTo(39.50 * skx, 11.50 * sky, 38.80 * skx, 11.30 * sky, 38.20 * skx, 9.90 * sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 33.90* skx, 7.20* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 32.20* skx, 6.00* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 0, 28.50* skx, 2.60* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 0, 23.60* skx, 4.40* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 21.70* skx, 5.10* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 16.50* skx, 9.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m7d79075032d1df360f494dc27ec6d8b', m7d79075032d1df360f494dc27ec6d8b);
	m7d79075032d1df360f494dc27ec6d8b.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m60cc6192c5c4fda537acd7d31c21e98() {
		mxActor.call(this);
	};
	mxUtils.extend(m60cc6192c5c4fda537acd7d31c21e98, mxActor);
	m60cc6192c5c4fda537acd7d31c21e98.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 60;
		h1 = 60;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(14.40 * skx, 8.20* sky);
		c.lineTo(16.70* skx,11.50* sky);
		c.arcTo(36.50 * skx, 36.50 * sky, 0, 0, 0, 15.30* skx, 15.00* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 13.30* skx, 16.80* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 11.30* skx, 19.10* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 13.10* skx, 21.50* sky);
		c.arcTo(22.60 * skx, 22.60 * sky, 0, 0, 0, 20.30* skx, 23.40* sky);
		c.arcTo(10.80 * skx, 10.80 * sky, 0, 0, 0, 25.40* skx, 22.60* sky);
		c.arcTo(42.70 * skx, 42.70 * sky, 0, 0, 0, 28.30* skx, 26.70* sky);
		c.arcTo(22.70 * skx, 22.70 * sky, 0, 0, 0, 32.50* skx, 30.00* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 35.90* skx, 28.60* sky);
		c.curveTo(36.70 * skx, 26.50 * sky, 37.40 * skx, 24.40 * sky, 38.10 * skx, 22.30 * sky);
		c.lineTo(40.60* skx,23.00* sky);
		c.arcTo(11.10 * skx, 11.10 * sky, 0, 0, 0, 47.50* skx, 21.60* sky);
		c.lineTo(49.30* skx,20.60* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 50.30* skx, 18.30* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 48.80* skx, 16.40* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 45.70* skx, 13.90* sky);
		c.arcTo(10.00 * skx, 10.00 * sky, 0, 0, 0, 49.10* skx, 9.30* sky);
		c.arcTo(14.70 * skx, 14.70 * sky, 0, 0, 1, 54.90* skx, 13.30* sky);
		c.arcTo(19.80 * skx, 19.80 * sky, 0, 0, 1, 59.70* skx, 24.70* sky);
		c.arcTo(34.80 * skx, 34.80 * sky, 0, 0, 1, 57.40* skx, 41.90* sky);
		c.arcTo(27.10 * skx, 27.10 * sky, 0, 0, 1, 40.00* skx, 58.00* sky);
		c.curveTo(30.80 * skx, 61.10 * sky, 21.90 * skx, 60.20 * sky, 13.70 * skx, 55.00 * sky);
		c.curveTo(5.5 * skx, 49.8 * sky, 2.00 * skx, 44.30 * sky, 0.50 * skx, 36.00 * sky);
		c.arcTo(26.80 * skx, 26.80 * sky, 0, 0, 1, 4.50* skx, 15.60* sky);
		c.arcTo(19.40 * skx, 19.40 * sky, 0, 0, 1, 14.40* skx, 8.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(38.90 * skx, 12.50* sky);
		c.arcTo(11.70 * skx, 11.70 * sky, 0, 0, 1, 40.90* skx, 13.10* sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 1, 43.60* skx, 15.30* sky);
		c.curveTo(44.80 * skx, 16.80 * sky, 45.90 * skx, 18.10 * sky, 48.00 * skx, 18.60 * sky);
		c.curveTo(45.60 * skx, 20.00 * sky, 43.40 * skx, 21.20 * sky, 40.70 * skx, 20.60 * sky);
		c.curveTo(38.00000000000001 * skx, 20.000000000000004 * sky, 36.40 * skx, 17.90 * sky, 34.70 * skx, 16.00 * sky);
		c.lineTo(35.10* skx,16.90* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 35.60* skx, 22.00* sky);
		c.curveTo(35.00 * skx, 24.00 * sky, 34.30 * skx, 25.90 * sky, 33.60 * skx, 27.90 * sky);
		c.curveTo(29.60 * skx, 25.40 * sky, 26.70 * skx, 22.40 * sky, 27.60 * skx, 17.20 * sky);
		c.lineTo(26.80* skx,18.40* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 21.20* skx, 21.10* sky);
		c.arcTo(17.70 * skx, 17.70 * sky, 0, 0, 1, 13.80* skx, 19.20* sky);
		c.lineTo(14.40* skx,19.00* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 17.30* skx, 16.20* sky);
		c.arcTo(14.60 * skx, 14.60 * sky, 0, 0, 0, 18.00* skx, 14.30* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 1, 22.90* skx, 11.10* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 23.80* skx, 10.90* sky);
		c.lineTo(21.90* skx,10.70* sky);
		c.curveTo(18.40 * skx, 10.30 * sky, 16.90 * skx, 9.00 * sky, 16.30 * skx, 5.60 * sky);
		c.quadTo(16.10 * skx, 4.40* sky, 16.00 * skx, 2.90 * sky);
		c.lineTo(16.30 * skx,2.90* sky);
		c.curveTo(17.00 * skx, 4.80 * sky, 18.50 * skx, 5.50 * sky, 20.50 * skx, 5.40 * sky);
		c.arcTo(17.80 * skx, 17.80 * sky, 0, 0, 1, 24.50* skx, 5.40* sky);
		c.arcTo(35.60 * skx, 35.60 * sky, 0, 0, 1, 28.60* skx, 7.10* sky);
		c.arcTo(12.80 * skx, 12.80 * sky, 0, 0, 1, 31.20* skx, 2.00* sky);
		c.curveTo(32.30 * skx, 0.70 * sky, 33.70 * skx, -0.30 * sky, 35.50 * skx, 0.10 * sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 1, 37.20* skx, 0.70* sky);
		c.curveTo(35.10 * skx, 2.70 * sky, 33.40 * skx, 4.70 * sky, 33.10 * skx, 7.70 * sky);
		c.lineTo(35.30* skx,6.30* sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 1, 41.40* skx, 5.90* sky);
		c.lineTo(43.10* skx,6.60* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 47.30* skx, 7.10* sky);
		c.curveTo(45.50 * skx, 12.00 * sky, 44.30 * skx, 13.00 * sky, 38.90 * skx, 12.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m60cc6192c5c4fda537acd7d31c21e98', m60cc6192c5c4fda537acd7d31c21e98);
	m60cc6192c5c4fda537acd7d31c21e98.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m244c3f0e1b5fc884c21d53a1c368eb5() {
		mxActor.call(this);
	};
	mxUtils.extend(m244c3f0e1b5fc884c21d53a1c368eb5, mxActor);
	m244c3f0e1b5fc884c21d53a1c368eb5.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 60;
		h1 = 60;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(15.90 * skx, 7.70* sky);
		c.lineTo(15.60* skx,4.00* sky);
		c.curveTo(15.60 * skx, 3.30 * sky, 15.70 * skx, 2.70 * sky, 16.50 * skx, 2.50 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 18.00* skx, 3.40* sky);
		c.curveTo(18.50 * skx, 4.80 * sky, 19.60 * skx, 5.10 * sky, 20.90 * skx, 5.20 * sky);
		c.arcTo(10.90 * skx, 10.90 * sky, 0, 0, 1, 24.00* skx, 5.50* sky);
		c.arcTo(26.30 * skx, 26.30 * sky, 0, 0, 1, 28.20* skx, 7.20* sky);
		c.curveTo(29.20 * skx, 5.50 * sky, 30.20 * skx, 3.60 * sky, 31.40 * skx, 1.70 * sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 1, 36.50* skx, 0.40* sky);
		c.curveTo(38.00 * skx, 1.20 * sky, 38.10 * skx, 2.00 * sky, 37.00 * skx, 3.20 * sky);
		c.curveTo(35.9 * skx, 4.4 * sky, 35.50 * skx, 5.20 * sky, 34.70 * skx, 6.30 * sky);
		c.lineTo(35.00 * skx,6.30* sky);
		c.curveTo(37.60 * skx, 4.80 * sky, 40.10 * skx, 5.10 * sky, 42.80 * skx, 6.30 * sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 45.20* skx, 6.60* sky);
		c.curveTo(46.90 * skx, 6.30 * sky, 47.50 * skx, 6.90 * sky, 47.00 * skx, 8.60 * sky);
		c.lineTo(48.70* skx,9.20* sky);
		c.arcTo(15.70 * skx, 15.70 * sky, 0, 0, 1, 59.00* skx, 21.40* sky);
		c.curveTo(61.10 * skx, 31.30 * sky, 59.60 * skx, 40.50 * sky, 53.50 * skx, 48.70 * sky);
		c.curveTo(48.90 * skx, 54.90 * sky, 42.50 * skx, 58.30 * sky, 34.90 * skx, 59.40 * sky);
		c.arcTo(29.60 * skx, 29.60 * sky, 0, 0, 1, 8.10* skx, 50.50* sky);
		c.curveTo(1.70 * skx, 44.00 * sky, -0.90 * skx, 36.00 * sky, 0.30 * skx, 26.80 * sky);
		c.arcTo(24.00 * skx, 24.00 * sky, 0, 0, 1, 4.80* skx, 15.20* sky);
		c.arcTo(20.30 * skx, 20.30 * sky, 0, 0, 1, 15.10* skx, 8.00* sky);
		c.lineTo(15.90* skx,7.70* sky);
		c.close();
		c.moveTo(19.20 * skx, 11.50* sky);
		c.lineTo(18.30* skx,11.00* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 17.30* skx, 10.10* sky);
		c.lineTo(16.60 * skx,10.10* sky);
		c.curveTo(11.40 * skx, 11.60 * sky, 7.20 * skx, 14.60 * sky, 4.90 * skx, 19.70 * sky);
		c.arcTo(25.50 * skx, 25.50 * sky, 0, 0, 0, 9.00* skx, 47.90* sky);
		c.curveTo(15.80 * skx, 55.40 * sky, 24.30 * skx, 58.50 * sky, 34.40 * skx, 57.10 * sky);
		c.curveTo(41.40 * skx, 56.00 * sky, 47.40 * skx, 52.90 * sky, 51.70 * skx, 47.20 * sky);
		c.curveTo(57.60 * skx, 39.20 * sky, 58.80 * skx, 30.30 * sky, 56.30 * skx, 20.80 * sky);
		c.arcTo(13.00 * skx, 13.00 * sky, 0, 0, 0, 46.60* skx, 11.10* sky);
		c.arcTo(0.60 * skx, 0.60 * sky, 0, 0, 0, 45.60* skx, 11.40* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 42.70* skx, 13.60* sky);
		c.lineTo(43.70* skx,14.80* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 0, 46.80* skx, 17.20* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 47.70* skx, 18.20* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 47.00* skx, 19.40* sky);
		c.arcTo(14.90 * skx, 14.90 * sky, 0, 0, 1, 43.40* skx, 21.10* sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 1, 37.00* skx, 20.10* sky);
		c.lineTo(36.80* skx,19.90* sky);
		c.curveTo(36.40 * skx, 21.20 * sky, 36.10 * skx, 22.50 * sky, 35.70 * skx, 23.80 * sky);
		c.arcTo(28.30 * skx, 28.30 * sky, 0, 0, 1, 34.60* skx, 26.90* sky);
		c.curveTo(34.20 * skx, 28.20 * sky, 33.50 * skx, 28.40 * sky, 32.40 * skx, 27.70 * sky);
		c.curveTo(29.60 * skx, 25.90 * sky, 27.30 * skx, 23.80 * sky, 26.70 * skx, 20.40 * sky);
		c.arcTo(15.30 * skx, 15.30 * sky, 0, 0, 1, 24.00* skx, 21.50* sky);
		c.curveTo(20.60 * skx, 22.30 * sky, 17.40 * skx, 21.30 * sky, 14.40 * skx, 19.90 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 13.90* skx, 18.70* sky);
		c.curveTo(13.90 * skx, 18.40 * sky, 14.30 * skx, 17.80 * sky, 14.70 * skx, 17.80 * sky);
		c.curveTo(15.099999999999998 * skx, 17.8 * sky, 17.10 * skx, 16.30 * sky, 17.60 * skx, 14.80 * sky);
		c.arcTo(32.90 * skx, 32.90 * sky, 0, 0, 1, 19.20* skx, 11.50* sky);
		c.close();
		c.moveTo(43.90 * skx, 9.30* sky);
		c.arcTo(19.90 * skx, 19.90 * sky, 0, 0, 1, 41.30* skx, 8.40* sky);
		c.arcTo(5.30 * skx, 5.30 * sky, 0, 0, 0, 35.20* skx, 9.20* sky);
		c.lineTo(34.00* skx,10.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 32.30* skx, 10.50* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 31.70* skx, 9.10* sky);
		c.arcTo(9.00 * skx, 9.00 * sky, 0, 0, 1, 33.70* skx, 3.60* sky);
		c.lineTo(34.50* skx,2.60* sky);
		c.lineTo(34.30* skx,2.30* sky);
		c.lineTo(33.30* skx,3.10* sky);
		c.arcTo(16.80 * skx, 16.80 * sky, 0, 0, 0, 30.10* skx, 9.50* sky);
		c.curveTo(29.90 * skx, 10.10 * sky, 29.80 * skx, 10.80 * sky, 29.00 * skx, 10.90 * sky);
		c.curveTo(28.2 * skx, 11.0 * sky, 27.90 * skx, 10.60 * sky, 27.50 * skx, 10.10 * sky);
		c.lineTo(27.20* skx,9.80* sky);
		c.arcTo(5.30 * skx, 5.30 * sky, 0, 0, 0, 23.20* skx, 7.70* sky);
		c.lineTo(18.40* skx,7.40* sky);
		c.curveTo(18.80 * skx, 7.90 * sky, 19.10 * skx, 8.60 * sky, 19.50 * skx, 8.80 * sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 21.80* skx, 9.70* sky);
		c.curveTo(22.80 * skx, 10.00 * sky, 23.90 * skx, 10.10 * sky, 24.90 * skx, 10.30 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 25.80* skx, 11.60* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 24.70* skx, 12.60* sky);
		c.lineTo(23.30 * skx,12.60* sky);
		c.curveTo(21.40 * skx, 12.70 * sky, 20.80 * skx, 13.10 * sky, 20.10 * skx, 14.90 * sky);
		c.curveTo(19.400000000000002 * skx, 16.700000000000003 * sky, 19.00 * skx, 17.40 * sky, 18.40 * skx, 18.80 * sky);
		c.lineTo(20.80* skx,19.30* sky);
		c.curveTo(24.00 * skx, 19.80 * sky, 25.60 * skx, 18.90 * sky, 27.00 * skx, 15.90 * sky);
		c.curveTo(27.00 * skx, 15.80 * sky, 27.00 * skx, 15.60 * sky, 27.10 * skx, 15.60 * sky);
		c.curveTo(27.200000000000003 * skx, 15.6 * sky, 28.10 * skx, 15.00 * sky, 28.40 * skx, 15.10 * sky);
		c.curveTo(28.699999999999996 * skx, 15.2 * sky, 29.10 * skx, 15.80 * sky, 29.30 * skx, 16.20 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 29.10* skx, 17.40* sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 0, 32.80* skx, 24.80* sky);
		c.curveTo(34.00 * skx, 22.00 * sky, 35.10 * skx, 19.10 * sky, 33.20 * skx, 16.10 * sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 33.30* skx, 14.80* sky);
		c.curveTo(33.70 * skx, 14.10 * sky, 34.60 * skx, 14.30 * sky, 35.20 * skx, 15.00 * sky);
		c.curveTo(35.800000000000004 * skx, 15.7 * sky, 37.30 * skx, 17.20 * sky, 38.50 * skx, 18.20 * sky);
		c.curveTo(39.7 * skx, 19.2 * sky, 42.00 * skx, 19.10 * sky, 43.70 * skx, 18.30 * sky);
		c.arcTo(9.00 * skx, 9.00 * sky, 0, 0, 1, 42.10* skx, 16.50* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 0, 37.80* skx, 13.90* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 36.70* skx, 12.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 38.00* skx, 11.50* sky);
		c.lineTo(40.50 * skx,11.50* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 43.90* skx, 9.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m244c3f0e1b5fc884c21d53a1c368eb5', m244c3f0e1b5fc884c21d53a1c368eb5);
	m244c3f0e1b5fc884c21d53a1c368eb5.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m3ee9bb4753612a626770bf983a88828() {
		mxActor.call(this);
	};
	mxUtils.extend(m3ee9bb4753612a626770bf983a88828, mxActor);
	m3ee9bb4753612a626770bf983a88828.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 71;
		h1 = 58;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(38.50 * skx, 24.20* sky);
		c.curveTo(34.60 * skx, 26.70 * sky, 30.50 * skx, 26.60 * sky, 26.50 * skx, 25.10 * sky);
		c.arcTo(92.70 * skx, 92.70 * sky, 0, 0, 1, 3.10* skx, 12.50* sky);
		c.lineTo(0.00* skx,9.70* sky);
		c.lineTo(0.00* skx,9.30 * sky);
		c.curveTo(2.50 * skx, 8.80 * sky, 5.00 * skx, 8.20 * sky, 7.50 * skx, 7.90 * sky);
		c.curveTo(14.90 * skx, 6.90 * sky, 22.10 * skx, 8.30 * sky, 29.20 * skx, 10.20 * sky);
		c.lineTo(42.20* skx,13.80* sky);
		c.arcTo(18.90 * skx, 18.90 * sky, 0, 0, 0, 46.60* skx, 6.80* sky);
		c.curveTo(47.70 * skx, 3.40 * sky, 50.40 * skx, 2.10 * sky, 54.00 * skx, 2.80 * sky);
		c.lineTo(55.90* skx,3.30* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 0, 59.70* skx, 3.30* sky);
		c.arcTo(22.80 * skx, 22.80 * sky, 0, 0, 1, 68.70* skx, 2.20* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 1, 70.50* skx, 2.80* sky);
		c.curveTo(69.00 * skx, 3.10 * sky, 67.40 * skx, 3.30 * sky, 65.90 * skx, 3.70 * sky);
		c.arcTo(23.00 * skx, 23.00 * sky, 0, 0, 0, 62.40* skx, 4.70* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 0, 57.60* skx, 9.70* sky);
		c.arcTo(14.90 * skx, 14.90 * sky, 0, 0, 1, 55.00* skx, 13.80* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 54.20* skx, 16.10* sky);
		c.arcTo(25.30 * skx, 25.30 * sky, 0, 0, 1, 54.10* skx, 25.20* sky);
		c.arcTo(17.00 * skx, 17.00 * sky, 0, 0, 1, 51.70* skx, 30.50* sky);
		c.arcTo(60.10 * skx, 60.10 * sky, 0, 0, 1, 46.40* skx, 37.40* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 45.90* skx, 39.50* sky);
		c.curveTo(47.00 * skx, 43.30 * sky, 48.00 * skx, 47.10 * sky, 49.10 * skx, 51.00 * sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 1, 48.70* skx, 53.70* sky);
		c.curveTo(47.20 * skx, 56.00 * sky, 45.00 * skx, 58.10 * sky, 41.00 * skx, 57.30 * sky);
		c.arcTo(23.40 * skx, 23.40 * sky, 0, 0, 1, 36.20* skx, 55.50* sky);
		c.curveTo(35.60 * skx, 55.30 * sky, 35.50 * skx, 54.90 * sky, 35.60 * skx, 54.20 * sky);
		c.curveTo(36.50 * skx, 49.60 * sky, 37.40 * skx, 45.10 * sky, 38.00 * skx, 40.40 * sky);
		c.arcTo(36.50 * skx, 36.50 * sky, 0, 0, 0, 37.90* skx, 33.80* sky);
		c.arcTo(31.30 * skx, 31.30 * sky, 0, 0, 1, 38.50* skx, 24.20* sky);
		c.close();
		c.moveTo(55.30 * skx, 6.80* sky);
		c.curveTo(54.80 * skx, 6.40 * sky, 54.50 * skx, 6.00 * sky, 54.20 * skx, 6.00 * sky);
		c.curveTo(53.900000000000006 * skx, 6.0 * sky, 53.70 * skx, 6.50 * sky, 53.40 * skx, 6.70 * sky);
		c.curveTo(53.099999999999994 * skx, 6.9 * sky, 54.00 * skx, 7.40 * sky, 54.30 * skx, 7.50 * sky);
		c.curveTo(54.599999999999994 * skx, 7.6 * sky, 54.90 * skx, 7.10 * sky, 55.30 * skx, 6.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(42.50 * skx, 9.70* sky);
		c.lineTo(41.30* skx,11.40* sky);
		c.lineTo(31.00* skx,8.40* sky);
		c.curveTo(24.70 * skx, 6.70 * sky, 18.50 * skx, 5.30 * sky, 11.90 * skx, 5.30 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 11.10* skx, 5.00* sky);
		c.lineTo(7.30* skx,-0.00* sky);
		c.curveTo(10.00 * skx, -0.00 * sky, 12.40 * skx, -0.10 * sky, 14.90 * skx, 0.10 * sky);
		c.curveTo(21.90 * skx, 0.50 * sky, 28.30 * skx, 2.90 * sky, 34.50 * skx, 5.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m3ee9bb4753612a626770bf983a88828', m3ee9bb4753612a626770bf983a88828);
	m3ee9bb4753612a626770bf983a88828.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m1fd68d6497f31367f4bf86312fd0dda() {
		mxActor.call(this);
	};
	mxUtils.extend(m1fd68d6497f31367f4bf86312fd0dda, mxActor);
	m1fd68d6497f31367f4bf86312fd0dda.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 71;
		h1 = 58;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(36.70 * skx, 27.50* sky);
		c.arcTo(28.30 * skx, 28.30 * sky, 0, 0, 1, 33.10* skx, 28.20* sky);
		c.curveTo(29.20 * skx, 28.80 * sky, 25.70 * skx, 27.70 * sky, 22.20 * skx, 26.30 * sky);
		c.arcTo(65.50 * skx, 65.50 * sky, 0, 0, 1, 6.00* skx, 17.40* sky);
		c.curveTo(4.20 * skx, 15.90 * sky, 2.50 * skx, 14.20 * sky, 0.80 * skx, 12.60 * sky);
		c.curveTo(-0.8999999999999999 * skx, 11.0 * sky, -0.20 * skx, 9.90 * sky, 1.80 * skx, 9.60 * sky);
		c.lineTo(10.20* skx,8.60* sky);
		c.lineTo(11.00 * skx,8.60* sky);
		c.curveTo(9.80 * skx, 6.70 * sky, 8.70 * skx, 4.80 * sky, 7.60 * skx, 3.00 * sky);
		c.lineTo(7.30* skx,2.20* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 8.60* skx, 0.20* sky);
		c.arcTo(40.20 * skx, 40.20 * sky, 0, 0, 1, 24.40* skx, 1.80* sky);
		c.arcTo(69.40 * skx, 69.40 * sky, 0, 0, 1, 41.20* skx, 9.60* sky);
		c.lineTo(43.50* skx,11.10* sky);
		c.lineTo(43.80 * skx,11.10* sky);
		c.arcTo(14.20 * skx, 14.20 * sky, 0, 0, 0, 44.60* skx, 9.30* sky);
		c.arcTo(10.70 * skx, 10.70 * sky, 0, 0, 1, 48.00* skx, 4.30* sky);
		c.arcTo(8.20 * skx, 8.20 * sky, 0, 0, 1, 57.10* skx, 3.60* sky);
		c.curveTo(59.70 * skx, 4.90 * sky, 62.20 * skx, 4.80 * sky, 64.90 * skx, 4.40 * sky);
		c.curveTo(67.60000000000001 * skx, 4.000000000000001 * sky, 68.00 * skx, 4.20 * sky, 69.60 * skx, 4.10 * sky);
		c.curveTo(71.19999999999999 * skx, 3.999999999999999 * sky, 71.30 * skx, 4.60 * sky, 71.30 * skx, 5.50 * sky);
		c.curveTo(71.3 * skx, 6.4 * sky, 70.80 * skx, 7.00 * sky, 69.70 * skx, 7.10 * sky);
		c.lineTo(62.50* skx,7.70* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 60.50* skx, 9.10* sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 0, 60.00* skx, 10.30* sky);
		c.curveTo(59.80 * skx, 13.10 * sky, 58.10 * skx, 14.90 * sky, 56.00 * skx, 16.40 * sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 55.30* skx, 18.20* sky);
		c.curveTo(55.60 * skx, 21.60 * sky, 56.00 * skx, 25.00 * sky, 54.80 * skx, 28.40 * sky);
		c.curveTo(53.599999999999994 * skx, 31.799999999999997 * sky, 50.80 * skx, 35.90 * sky, 47.60 * skx, 38.90 * sky);
		c.lineTo(47.00* skx,39.40* sky);
		c.curveTo(48.80 * skx, 43.80 * sky, 50.60 * skx, 48.20 * sky, 52.30 * skx, 52.60 * sky);
		c.curveTo(53.00 * skx, 54.40 * sky, 52.90 * skx, 54.80 * sky, 51.40 * skx, 56.10 * sky);
		c.curveTo(47.40 * skx, 59.50 * sky, 41.10 * skx, 58.50 * sky, 38.00 * skx, 56.90 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 37.10* skx, 55.10* sky);
		c.curveTo(37.20 * skx, 50.30 * sky, 37.20 * skx, 45.50 * sky, 37.20 * skx, 40.80 * sky);
		c.arcTo(38.80 * skx, 38.80 * sky, 0, 0, 0, 36.80* skx, 36.00* sky);
		c.arcTo(22.10 * skx, 22.10 * sky, 0, 0, 1, 36.70* skx, 28.30* sky);
		c.close();
		c.moveTo(4.60 * skx, 11.80* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 4.80* skx, 12.30* sky);
		c.curveTo(5.00 * skx, 12.50 * sky, 5.20 * skx, 12.60 * sky, 5.30 * skx, 12.80 * sky);
		c.arcTo(58.10 * skx, 58.10 * sky, 0, 0, 0, 23.80* skx, 23.90* sky);
		c.curveTo(28.60 * skx, 25.80 * sky, 33.40 * skx, 26.20 * sky, 38.20 * skx, 23.90 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 39.70* skx, 24.10* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 40.10* skx, 25.80* sky);
		c.arcTo(18.70 * skx, 18.70 * sky, 0, 0, 0, 39.50* skx, 34.90* sky);
		c.arcTo(44.60 * skx, 44.60 * sky, 0, 0, 1, 40.00* skx, 41.20* sky);
		c.curveTo(40.10 * skx, 45.40 * sky, 40.00 * skx, 49.70 * sky, 40.00 * skx, 53.90 * sky);
		c.curveTo(40.00 * skx, 54.60 * sky, 40.20 * skx, 55.00 * sky, 40.90 * skx, 55.10 * sky);
		c.arcTo(34.20 * skx, 34.20 * sky, 0, 0, 0, 45.40* skx, 55.50* sky);
		c.arcTo(12.70 * skx, 12.70 * sky, 0, 0, 0, 49.00* skx, 54.30* sky);
		c.curveTo(49.60 * skx, 54.10 * sky, 49.60 * skx, 53.60 * sky, 49.40 * skx, 52.90 * sky);
		c.curveTo(47.70 * skx, 48.90 * sky, 46.10 * skx, 44.80 * sky, 44.50 * skx, 40.70 * sky);
		c.curveTo(43.70 * skx, 38.60 * sky, 43.80 * skx, 38.70 * sky, 45.30 * skx, 37.10 * sky);
		c.arcTo(56.80 * skx, 56.80 * sky, 0, 0, 0, 50.30* skx, 31.10* sky);
		c.curveTo(52.80 * skx, 27.60 * sky, 53.10 * skx, 23.50 * sky, 52.50 * skx, 19.30 * sky);
		c.curveTo(52.20 * skx, 16.90 * sky, 52.60 * skx, 15.10 * sky, 54.70 * skx, 13.80 * sky);
		c.lineTo(55.80* skx,12.90* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 0, 56.80* skx, 11.20* sky);
		c.curveTo(57.30 * skx, 9.90 * sky, 57.60 * skx, 8.60 * sky, 58.10 * skx, 7.20 * sky);
		c.arcTo(23.90 * skx, 23.90 * sky, 0, 0, 0, 55.30* skx, 5.90* sky);
		c.curveTo(51.70 * skx, 4.90 * sky, 49.20 * skx, 6.10 * sky, 47.70 * skx, 9.50 * sky);
		c.curveTo(47.50 * skx, 9.80 * sky, 47.40 * skx, 10.20 * sky, 47.20 * skx, 10.50 * sky);
		c.curveTo(47.00000000000001 * skx, 10.8 * sky, 45.60 * skx, 13.20 * sky, 44.80 * skx, 14.40 * sky);
		c.curveTo(43.99999999999999 * skx, 15.600000000000001 * sky, 43.90 * skx, 15.40 * sky, 43.50 * skx, 15.90 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 41.30* skx, 16.70* sky);
		c.lineTo(35.80* skx,15.20* sky);
		c.curveTo(28.60 * skx, 13.30 * sky, 21.40 * skx, 11.40 * sky, 13.90 * skx, 11.40 * sky);
		c.curveTo(10.90 * skx, 11.40 * sky, 7.80 * skx, 11.60 * sky, 4.60 * skx, 11.80 * sky);
		c.close();
		c.moveTo(11.40 * skx, 3.00* sky);
		c.lineTo(11.00* skx,3.40* sky);
		c.arcTo(52.00 * skx, 52.00 * sky, 0, 0, 0, 14.70* skx, 7.70* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 0, 16.80* skx, 8.60* sky);
		c.curveTo(19.40 * skx, 9.00 * sky, 22.10 * skx, 9.20 * sky, 24.80 * skx, 9.70 * sky);
		c.lineTo(40.50* skx,13.60* sky);
		c.lineTo(41.70* skx,13.80* sky);
		c.lineTo(41.70* skx,13.40 * sky);
		c.curveTo(32.50 * skx, 7.40 * sky, 22.70 * skx, 3.00 * sky, 11.40 * skx, 3.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m1fd68d6497f31367f4bf86312fd0dda', m1fd68d6497f31367f4bf86312fd0dda);
	m1fd68d6497f31367f4bf86312fd0dda.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function md01ae908e361b504ecb4b8258a37b78() {
		mxActor.call(this);
	};
	mxUtils.extend(md01ae908e361b504ecb4b8258a37b78, mxActor);
	md01ae908e361b504ecb4b8258a37b78.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 59;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(5.20 * skx, 43.50* sky);
		c.arcTo(19.30 * skx, 19.30 * sky, 0, 0, 1, 8.40* skx, 45.40* sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 1, 9.90* skx, 47.20* sky);
		c.quadTo(10.70 * skx, 48.50* sky, 11.70 * skx, 48.10 * sky);
		c.curveTo(12.30 * skx, 47.90 * sky, 12.50 * skx, 47.20 * sky, 12.20 * skx, 46.30 * sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 9.10* skx, 42.90* sky);
		c.arcTo(27.90 * skx, 27.90 * sky, 0, 0, 1, 6.30* skx, 41.30* sky);
		c.lineTo(13.80* skx,28.30* sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 0, 17.50* skx, 30.80* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 1, 20.40* skx, 33.50* sky);
		c.lineTo(20.90* skx,34.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 22.50* skx, 34.90* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 23.00* skx, 33.30* sky);
		c.arcTo(9.10 * skx, 9.10 * sky, 0, 0, 0, 17.80* skx, 28.30* sky);
		c.lineTo(16.90* skx,27.90* sky);
		c.curveTo(15.50 * skx, 27.10 * sky, 15.20 * skx, 26.30 * sky, 16.10 * skx, 25.00 * sky);
		c.curveTo(17.000000000000004 * skx, 23.7 * sky, 19.00 * skx, 21.20 * sky, 20.30 * skx, 19.20 * sky);
		c.curveTo(21.6 * skx, 17.2 * sky, 23.80 * skx, 16.70 * sky, 26.10 * skx, 17.10 * sky);
		c.arcTo(19.80 * skx, 19.80 * sky, 0, 0, 1, 34.00* skx, 20.80* sky);
		c.lineTo(34.60* skx,21.30* sky);
		c.curveTo(37.20 * skx, 18.80 * sky, 39.20 * skx, 16.00 * sky, 39.30 * skx, 12.20 * sky);
		c.lineTo(39.30* skx,11.60 * sky);
		c.curveTo(39.40 * skx, 9.20 * sky, 40.20 * skx, 8.30 * sky, 42.50 * skx, 7.90 * sky);
		c.curveTo(43.20 * skx, 5.20 * sky, 43.40 * skx, 5.00 * sky, 46.00 * skx, 4.80 * sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 48.40* skx, 2.20* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 50.40* skx, 2.50* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 51.50* skx, 2.50* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 55.20* skx, 3.10* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 1, 56.00* skx, 6.80* sky);
		c.curveTo(55.80 * skx, 7.20 * sky, 55.60 * skx, 7.40 * sky, 56.00 * skx, 7.90 * sky);
		c.curveTo(56.4 * skx, 8.4 * sky, 56.90 * skx, 11.70 * sky, 54.70 * skx, 12.70 * sky);
		c.curveTo(54.90 * skx, 15.10 * sky, 53.60 * skx, 16.50 * sky, 50.80 * skx, 16.20 * sky);
		c.curveTo(50.10 * skx, 19.10 * sky, 48.70 * skx, 20.10 * sky, 45.70 * skx, 19.80 * sky);
		c.curveTo(42.7 * skx, 19.5 * sky, 39.20 * skx, 20.90 * sky, 36.40 * skx, 23.00 * sky);
		c.lineTo(38.30* skx,25.30* sky);
		c.arcTo(16.70 * skx, 16.70 * sky, 0, 0, 1, 41.60* skx, 33.30* sky);
		c.curveTo(41.80 * skx, 35.30 * sky, 41.40 * skx, 37.00 * sky, 39.50 * skx, 38.10 * sky);
		c.arcTo(13.60 * skx, 13.60 * sky, 0, 0, 0, 37.80* skx, 39.30* sky);
		c.lineTo(36.00* skx,36.90* sky);
		c.curveTo(35.40 * skx, 36.10 * sky, 35.00 * skx, 35.20 * sky, 34.40 * skx, 34.40 * sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 30.80* skx, 33.00* sky);
		c.curveTo(30.00 * skx, 33.00 * sky, 29.60 * skx, 33.30 * sky, 29.50 * skx, 34.10 * sky);
		c.curveTo(29.4 * skx, 34.900000000000006 * sky, 29.90 * skx, 35.30 * sky, 30.70 * skx, 35.30 * sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 1, 33.40* skx, 37.10* sky);
		c.curveTo(34.10 * skx, 38.40 * sky, 34.90 * skx, 39.50 * sky, 35.70 * skx, 40.70 * sky);
		c.lineTo(35.30* skx,41.00* sky);
		c.lineTo(27.00* skx,46.60* sky);
		c.curveTo(26.50 * skx, 46.90 * sky, 26.10 * skx, 46.90 * sky, 25.80 * skx, 46.40 * sky);
		c.arcTo(18.60 * skx, 18.60 * sky, 0, 0, 1, 23.70* skx, 43.60* sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 0, 20.20* skx, 40.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 18.50* skx, 41.10* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 19.20* skx, 42.70* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 1, 21.70* skx, 45.10* sky);
		c.lineTo(24.00* skx,48.40* sky);
		c.lineTo(18.50* skx,51.50* sky);
		c.arcTo(78.90 * skx, 78.90 * sky, 0, 0, 1, 5.40* skx, 57.80* sky);
		c.lineTo(2.70* skx,58.60* sky);
		c.curveTo(0.70 * skx, 59.00 * sky, -0.30 * skx, 57.90 * sky, 0.10 * skx, 55.90 * sky);
		c.arcTo(25.90 * skx, 25.90 * sky, 0, 0, 1, 1.20* skx, 52.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(27.70 * skx, 6.00* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 27.30* skx, 2.60* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 30.20* skx, 0.90* sky);
		c.lineTo(31.10* skx,0.70* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 1, 35.20* skx, 0.90* sky);
		c.curveTo(35.40 * skx, 1.10 * sky, 35.80 * skx, 1.10 * sky, 36.00 * skx, 1.20 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 38.50* skx, 3.10* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 39.00* skx, 3.70* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 39.80* skx, 4.30* sky);
		c.curveTo(40.90 * skx, 5.20 * sky, 40.80 * skx, 5.60 * sky, 39.60 * skx, 6.40 * sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 36.90* skx, 11.40* sky);
		c.curveTo(36.80 * skx, 12.60 * sky, 36.60 * skx, 13.80 * sky, 36.50 * skx, 15.10 * sky);
		c.lineTo(36.20 * skx,15.10* sky);
		c.lineTo(36.00* skx,14.70* sky);
		c.curveTo(35.70 * skx, 14.00 * sky, 35.30 * skx, 13.60 * sky, 34.50 * skx, 13.90 * sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 32.30* skx, 13.00* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 31.60* skx, 12.50* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 29.90* skx, 11.20* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 29.40* skx, 10.70* sky);
		c.curveTo(26.90 * skx, 9.90 * sky, 26.30 * skx, 8.20 * sky, 27.70 * skx, 6.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(52.60 * skx, 31.00* sky);
		c.curveTo(50.50 * skx, 32.40 * sky, 48.70 * skx, 31.70 * sky, 48.00 * skx, 29.30 * sky);
		c.lineTo(47.40* skx,28.70* sky);
		c.lineTo(47.00* skx,28.50* sky);
		c.curveTo(46.20 * skx, 28.10 * sky, 46.40 * skx, 27.10 * sky, 46.00 * skx, 26.60 * sky);
		c.curveTo(45.6 * skx, 26.1 * sky, 44.70 * skx, 25.70 * sky, 44.70 * skx, 24.80 * sky);
		c.curveTo(44.7 * skx, 23.900000000000002 * sky, 44.70 * skx, 24.50 * sky, 44.70 * skx, 24.30 * sky);
		c.curveTo(44.7 * skx, 24.1 * sky, 44.80 * skx, 23.00 * sky, 43.80 * skx, 22.10 * sky);
		c.lineTo(46.20 * skx,22.10* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 52.50* skx, 19.00* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 54.30* skx, 18.80* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 56.40* skx, 20.50* sky);
		c.curveTo(57.20 * skx, 20.80 * sky, 57.40 * skx, 21.60 * sky, 57.50 * skx, 22.40 * sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 57.80* skx, 23.50* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 58.00* skx, 27.50* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 57.70* skx, 28.30* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 56.30* skx, 31.20* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 52.90* skx, 31.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('md01ae908e361b504ecb4b8258a37b78', md01ae908e361b504ecb4b8258a37b78);
	md01ae908e361b504ecb4b8258a37b78.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m289fb544390b952b6ed2b57de7557b3() {
		mxActor.call(this);
	};
	mxUtils.extend(m289fb544390b952b6ed2b57de7557b3, mxActor);
	m289fb544390b952b6ed2b57de7557b3.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 59;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(34.50 * skx, 21.20* sky);
		c.curveTo(36.60 * skx, 19.10 * sky, 37.10 * skx, 16.50 * sky, 35.80 * skx, 14.30 * sky);
		c.curveTo(35.50 * skx, 13.80 * sky, 35.30 * skx, 13.70 * sky, 34.70 * skx, 13.90 * sky);
		c.curveTo(34.10000000000001 * skx, 14.100000000000001 * sky, 32.70 * skx, 13.80 * sky, 32.10 * skx, 12.40 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 29.90* skx, 11.00* sky);
		c.curveTo(29.80 * skx, 10.80 * sky, 29.50 * skx, 10.70 * sky, 29.30 * skx, 10.60 * sky);
		c.curveTo(27.00 * skx, 10.00 * sky, 26.30 * skx, 8.00 * sky, 27.70 * skx, 6.00 * sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 27.20* skx, 2.80* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 30.40* skx, 0.90* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 0, 31.10* skx, 0.70* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 1, 35.20* skx, 0.90* sky);
		c.lineTo(36.00* skx,1.10* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 38.50* skx, 3.20* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 38.90* skx, 3.70* sky);
		c.curveTo(40.90 * skx, 5.10 * sky, 41.30 * skx, 6.00 * sky, 40.70 * skx, 8.40 * sky);
		c.lineTo(42.30* skx,7.90* sky);
		c.arcTo(12.40 * skx, 12.40 * sky, 0, 0, 1, 43.50* skx, 5.60* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 1, 46.00* skx, 5.00* sky);
		c.curveTo(46.10 * skx, 2.30 * sky, 48.90 * skx, 1.40 * sky, 50.90 * skx, 2.90 * sky);
		c.curveTo(52.60 * skx, 1.80 * sky, 53.80 * skx, 1.80 * sky, 55.10 * skx, 3.00 * sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 1, 55.70* skx, 7.40* sky);
		c.curveTo(57.50 * skx, 9.50 * sky, 56.90 * skx, 11.90 * sky, 54.60 * skx, 12.70 * sky);
		c.curveTo(54.80 * skx, 15.30 * sky, 53.90 * skx, 16.10 * sky, 50.70 * skx, 16.20 * sky);
		c.lineTo(50.40* skx,17.90* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 53.90* skx, 18.40* sky);
		c.curveTo(54.70 * skx, 19.20 * sky, 55.30 * skx, 20.20 * sky, 56.50 * skx, 20.60 * sky);
		c.curveTo(57.7 * skx, 21.000000000000004 * sky, 57.30 * skx, 21.50 * sky, 57.40 * skx, 22.10 * sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 58.10* skx, 24.00* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 58.00* skx, 27.40* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 57.70* skx, 28.50* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 56.40* skx, 31.10* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 53.20* skx, 31.30* sky);
		c.lineTo(52.60* skx,30.90* sky);
		c.curveTo(50.40 * skx, 32.30 * sky, 48.80 * skx, 31.70 * sky, 48.00 * skx, 29.20 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 47.50* skx, 28.70* sky);
		c.curveTo(46.40 * skx, 28.20 * sky, 46.10 * skx, 27.80 * sky, 46.20 * skx, 26.60 * sky);
		c.curveTo(44.60 * skx, 25.80 * sky, 44.30 * skx, 25.00 * sky, 45.00 * skx, 23.20 * sky);
		c.curveTo(43.00 * skx, 20.80 * sky, 39.30 * skx, 20.70 * sky, 36.50 * skx, 23.10 * sky);
		c.lineTo(37.80* skx,24.60* sky);
		c.arcTo(17.40 * skx, 17.40 * sky, 0, 0, 1, 41.60* skx, 33.40* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 1, 39.40* skx, 38.20* sky);
		c.arcTo(197.90 * skx, 197.90 * sky, 0, 0, 1, 11.50* skx, 55.20* sky);
		c.curveTo(8.80 * skx, 56.50 * sky, 5.90 * skx, 57.40 * sky, 3.00 * skx, 58.50 * sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 1.70* skx, 58.60* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, -0.00* skx, 56.90* sky);
		c.arcTo(19.80 * skx, 19.80 * sky, 0, 0, 1, 0.80* skx, 53.40* sky);
		c.arcTo(113.60 * skx, 113.60 * sky, 0, 0, 1, 8.40* skx, 37.70* sky);
		c.arcTo(178.60 * skx, 178.60 * sky, 0, 0, 1, 19.90* skx, 19.60* sky);
		c.curveTo(21.90 * skx, 16.90 * sky, 24.10 * skx, 16.50 * sky, 27.00 * skx, 17.30 * sky);
		c.arcTo(21.70 * skx, 21.70 * sky, 0, 0, 1, 33.80* skx, 20.70* sky);
		c.close();
		c.moveTo(7.40 * skx, 44.90* sky);
		c.curveTo(5.80 * skx, 47.10 * sky, 2.70 * skx, 54.60 * sky, 2.60 * skx, 56.20 * sky);
		c.curveTo(9.70 * skx, 54.00 * sky, 16.10 * skx, 50.20 * sky, 22.50 * skx, 46.50 * sky);
		c.curveTo(21.50 * skx, 44.80 * sky, 20.90 * skx, 43.10 * sky, 18.90 * skx, 42.50 * sky);
		c.curveTo(16.9 * skx, 41.9 * sky, 18.20 * skx, 41.60 * sky, 18.50 * skx, 41.00 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 20.00* skx, 40.40* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 23.50* skx, 43.30* sky);
		c.arcTo(19.80 * skx, 19.80 * sky, 0, 0, 0, 24.60* skx, 45.30* sky);
		c.lineTo(34.30* skx,38.90* sky);
		c.arcTo(15.00 * skx, 15.00 * sky, 0, 0, 1, 33.40* skx, 37.10* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 30.80* skx, 35.30* sky);
		c.curveTo(29.90 * skx, 35.30 * sky, 29.40 * skx, 34.80 * sky, 29.40 * skx, 34.10 * sky);
		c.curveTo(29.4 * skx, 33.400000000000006 * sky, 30.00 * skx, 33.00 * sky, 30.90 * skx, 33.00 * sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 1, 35.20* skx, 35.40* sky);
		c.lineTo(36.30* skx,37.40* sky);
		c.arcTo(10.70 * skx, 10.70 * sky, 0, 0, 1, 38.20* skx, 36.10* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 39.20* skx, 33.70* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 0, 39.00* skx, 32.40* sky);
		c.arcTo(18.00 * skx, 18.00 * sky, 0, 0, 0, 28.50* skx, 20.40* sky);
		c.arcTo(18.20 * skx, 18.20 * sky, 0, 0, 0, 24.50* skx, 19.30* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 22.60* skx, 20.20* sky);
		c.lineTo(17.10* skx,27.80* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 1, 17.00* skx, 28.10* sky);
		c.lineTo(18.70* skx,28.90* sky);
		c.arcTo(9.60 * skx, 9.60 * sky, 0, 0, 1, 23.00* skx, 33.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 22.50* skx, 35.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 20.90* skx, 34.40* sky);
		c.curveTo(19.90 * skx, 32.20 * sky, 17.90 * skx, 31.00 * sky, 15.50 * skx, 30.20 * sky);
		c.lineTo(8.40* skx,42.60* sky);
		c.lineTo(9.50* skx,43.20* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 12.20* skx, 46.40* sky);
		c.curveTo(12.50 * skx, 47.20 * sky, 12.30 * skx, 47.90 * sky, 11.70 * skx, 48.10 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 10.00* skx, 47.30* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 0, 7.40* skx, 44.90* sky);
		c.close();
		c.moveTo(40.20 * skx, 18.00* sky);
		c.arcTo(16.00 * skx, 16.00 * sky, 0, 0, 1, 46.70* skx, 17.40* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 47.90* skx, 17.00* sky);
		c.curveTo(48.70 * skx, 16.40 * sky, 48.30 * skx, 15.60 * sky, 48.00 * skx, 14.90 * sky);
		c.curveTo(47.7 * skx, 14.200000000000001 * sky, 47.70 * skx, 13.70 * sky, 48.20 * skx, 13.20 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 49.80* skx, 13.20* sky);
		c.lineTo(51.60* skx,13.80* sky);
		c.curveTo(52.20 * skx, 14.00 * sky, 52.40 * skx, 13.60 * sky, 52.10 * skx, 13.10 * sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 0, 51.10* skx, 12.00* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 51.00* skx, 10.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 52.40* skx, 10.00* sky);
		c.lineTo(53.60* skx,10.30* sky);
		c.lineTo(54.20* skx,10.10* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 54.10* skx, 9.40* sky);
		c.lineTo(53.20* skx,8.80* sky);
		c.curveTo(52.40 * skx, 8.10 * sky, 52.30 * skx, 7.40 * sky, 53.00 * skx, 6.70 * sky);
		c.lineTo(53.70* skx,6.00* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 53.40* skx, 4.80* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 52.30* skx, 4.90* sky);
		c.curveTo(52.10 * skx, 5.00 * sky, 52.00 * skx, 5.30 * sky, 51.80 * skx, 5.50 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 49.70* skx, 5.30* sky);
		c.curveTo(49.60 * skx, 5.20 * sky, 49.60 * skx, 4.90 * sky, 49.40 * skx, 4.80 * sky);
		c.curveTo(49.199999999999996 * skx, 4.699999999999999 * sky, 48.90 * skx, 4.50 * sky, 48.70 * skx, 4.60 * sky);
		c.curveTo(48.50000000000001 * skx, 4.699999999999999 * sky, 48.40 * skx, 5.00 * sky, 48.40 * skx, 5.20 * sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 48.70* skx, 6.50* sky);
		c.curveTo(48.90 * skx, 7.20 * sky, 49.00 * skx, 7.80 * sky, 48.40 * skx, 8.20 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 46.70* skx, 8.00* sky);
		c.lineTo(45.20* skx,7.20* sky);
		c.lineTo(44.90* skx,7.50* sky);
		c.curveTo(45.10 * skx, 8.20 * sky, 45.40 * skx, 8.90 * sky, 45.70 * skx, 9.70 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 45.40* skx, 11.20* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 43.80* skx, 11.10* sky);
		c.lineTo(43.00* skx,10.50* sky);
		c.curveTo(42.30 * skx, 10.20 * sky, 41.80 * skx, 10.40 * sky, 41.80 * skx, 11.20 * sky);
		c.arcTo(15.10 * skx, 15.10 * sky, 0, 0, 1, 40.20* skx, 18.00* sky);
		c.close();
		c.moveTo(38.90 * skx, 15.00* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 1, 39.10* skx, 14.00* sky);
		c.curveTo(39.30 * skx, 12.60 * sky, 39.60 * skx, 11.10 * sky, 38.40 * skx, 9.90 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 38.10* skx, 7.90* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 38.50* skx, 7.00* sky);
		c.curveTo(38.60 * skx, 6.40 * sky, 38.40 * skx, 6.00 * sky, 37.80 * skx, 5.90 * sky);
		c.curveTo(37.199999999999996 * skx, 5.800000000000001 * sky, 36.20 * skx, 5.50 * sky, 36.20 * skx, 3.90 * sky);
		c.curveTo(36.20 * skx, 3.80 * sky, 36.10 * skx, 3.70 * sky, 36.00 * skx, 3.50 * sky);
		c.curveTo(35.9 * skx, 3.3 * sky, 34.10 * skx, 3.70 * sky, 33.50 * skx, 2.60 * sky);
		c.curveTo(32.9 * skx, 1.5 * sky, 32.50 * skx, 2.60 * sky, 32.40 * skx, 2.80 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 30.10* skx, 3.40* sky);
		c.curveTo(30.00 * skx, 3.30 * sky, 29.50 * skx, 3.40 * sky, 29.50 * skx, 3.50 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 29.50* skx, 4.40* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 30.00* skx, 4.80* sky);
		c.curveTo(31.40 * skx, 5.60 * sky, 31.40 * skx, 6.50 * sky, 30.10 * skx, 7.30 * sky);
		c.curveTo(28.800000000000004 * skx, 8.1 * sky, 29.60 * skx, 7.80 * sky, 29.40 * skx, 8.10 * sky);
		c.lineTo(30.50 * skx,8.10* sky);
		c.curveTo(30.60 * skx, 8.20 * sky, 30.70 * skx, 8.10 * sky, 30.80 * skx, 8.10 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 32.20* skx, 9.30* sky);
		c.lineTo(32.20* skx,10.00 * sky);
		c.curveTo(34.10 * skx, 9.70 * sky, 34.30 * skx, 9.80 * sky, 34.80 * skx, 11.10 * sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 36.80* skx, 11.70* sky);
		c.close();
		c.moveTo(55.00 * skx, 22.60* sky);
		c.lineTo(54.60 * skx,22.60* sky);
		c.curveTo(53.10 * skx, 22.50 * sky, 53.10 * skx, 22.50 * sky, 52.70 * skx, 21.00 * sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 51.60* skx, 20.20* sky);
		c.lineTo(50.50* skx,20.70* sky);
		c.curveTo(50.10 * skx, 20.80 * sky, 49.40 * skx, 20.90 * sky, 49.20 * skx, 20.70 * sky);
		c.curveTo(49.00000000000001 * skx, 20.5 * sky, 46.10 * skx, 20.20 * sky, 44.50 * skx, 19.80 * sky);
		c.arcTo(25.40 * skx, 25.40 * sky, 0, 0, 1, 46.90* skx, 21.80* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 47.50* skx, 24.00* sky);
		c.curveTo(48.80 * skx, 24.40 * sky, 48.90 * skx, 24.60 * sky, 48.60 * skx, 26.50 * sky);
		c.lineTo(48.90 * skx,26.50* sky);
		c.curveTo(50.20 * skx, 26.50 * sky, 50.60 * skx, 27.00 * sky, 50.40 * skx, 28.20 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 50.30* skx, 28.70* sky);
		c.curveTo(50.30 * skx, 28.90 * sky, 50.50 * skx, 29.10 * sky, 50.60 * skx, 29.30 * sky);
		c.curveTo(50.7 * skx, 29.5 * sky, 51.00 * skx, 29.20 * sky, 51.10 * skx, 29.00 * sky);
		c.curveTo(52.60 * skx, 27.20 * sky, 52.60 * skx, 27.20 * sky, 54.00 * skx, 29.00 * sky);
		c.curveTo(54.20 * skx, 29.20 * sky, 54.70 * skx, 29.20 * sky, 55.00 * skx, 29.30 * sky);
		c.curveTo(55.3 * skx, 29.400000000000002 * sky, 55.20 * skx, 28.60 * sky, 55.10 * skx, 28.40 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 55.70* skx, 26.50* sky);
		c.curveTo(56.40 * skx, 26.00 * sky, 56.40 * skx, 25.40 * sky, 55.60 * skx, 24.90 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 54.90* skx, 23.30* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 55.00* skx, 22.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m289fb544390b952b6ed2b57de7557b3', m289fb544390b952b6ed2b57de7557b3);
	m289fb544390b952b6ed2b57de7557b3.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m13cee538382544965b8d17d5b10c6ca() {
		mxActor.call(this);
	};
	mxUtils.extend(m13cee538382544965b8d17d5b10c6ca, mxActor);
	m13cee538382544965b8d17d5b10c6ca.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 56;
		h1 = 57;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(56.30 * skx, 14.00* sky);
		c.curveTo(56.30 * skx, 15.30 * sky, 56.20 * skx, 16.50 * sky, 56.10 * skx, 17.80 * sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 56.20* skx, 20.40* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 55.80* skx, 22.40* sky);
		c.arcTo(23.60 * skx, 23.60 * sky, 0, 0, 1, 54.60* skx, 25.20* sky);
		c.arcTo(8.80 * skx, 8.80 * sky, 0, 0, 1, 54.10* skx, 26.70* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 53.80* skx, 29.10* sky);
		c.curveTo(54.10 * skx, 30.40 * sky, 53.40 * skx, 31.30 * sky, 52.20 * skx, 32.00 * sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 51.40* skx, 32.80* sky);
		c.arcTo(14.40 * skx, 14.40 * sky, 0, 0, 0, 49.50* skx, 35.90* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 1, 46.50* skx, 39.80* sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 0, 45.30* skx, 41.00* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 0, 44.20* skx, 43.10* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 41.40* skx, 45.50* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 40.30* skx, 45.90* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 0, 38.00* skx, 48.60* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 35.00* skx, 50.20* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 33.80* skx, 50.50* sky);
		c.arcTo(20.10 * skx, 20.10 * sky, 0, 0, 0, 31.30* skx, 51.90* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 30.70* skx, 52.40* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 27.90* skx, 53.80* sky);
		c.lineTo(26.70* skx,54.00* sky);
		c.lineTo(22.80* skx,55.40* sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 0, 20.40* skx, 56.70* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 17.30* skx, 57.20* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 16.20* skx, 57.00* sky);
		c.arcTo(34.00 * skx, 34.00 * sky, 0, 0, 1, 8.40* skx, 57.30* sky);
		c.lineTo(8.10 * skx,57.30* sky);
		c.curveTo(5.60 * skx, 58.10 * sky, 4.00 * skx, 56.40 * sky, 2.30 * skx, 55.20 * sky);
		c.curveTo(0.5999999999999996 * skx, 54.00000000000001 * sky, -0.70 * skx, 49.40 * sky, 2.00 * skx, 47.00 * sky);
		c.curveTo(3.10 * skx, 46.10 * sky, 4.40 * skx, 45.40 * sky, 5.50 * skx, 44.60 * sky);
		c.lineTo(6.30* skx,43.70* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 9.20* skx, 42.00* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 10.80* skx, 41.60* sky);
		c.curveTo(12.00 * skx, 41.00 * sky, 13.40 * skx, 40.50 * sky, 14.20 * skx, 39.20 * sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 15.30* skx, 38.60* sky);
		c.curveTo(16.80 * skx, 38.40 * sky, 17.80 * skx, 37.40 * sky, 18.90 * skx, 36.60 * sky);
		c.arcTo(20.00 * skx, 20.00 * sky, 0, 0, 0, 21.10* skx, 34.70* sky);
		c.curveTo(21.30 * skx, 34.50 * sky, 21.50 * skx, 34.20 * sky, 21.80 * skx, 34.10 * sky);
		c.curveTo(23.70 * skx, 33.40 * sky, 24.80 * skx, 31.90 * sky, 26.20 * skx, 30.70 * sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 0, 27.90* skx, 28.30* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 29.70* skx, 26.50* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 30.80* skx, 25.80* sky);
		c.lineTo(34.40* skx,21.30* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 34.80* skx, 20.00* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 36.90* skx, 17.00* sky);
		c.lineTo(37.40* skx,16.80* sky);
		c.curveTo(38.10 * skx, 15.50 * sky, 39.40 * skx, 14.30 * sky, 39.60 * skx, 12.70 * sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 41.00* skx, 10.00* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 41.60* skx, 9.20* sky);
		c.curveTo(42.60 * skx, 7.20 * sky, 43.40 * skx, 5.10 * sky, 44.40 * skx, 3.20 * sky);
		c.curveTo(45.4 * skx, 1.3000000000000007 * sky, 48.10 * skx, -0.50 * sky, 50.80 * skx, 0.20 * sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 1, 54.70* skx, 3.90* sky);
		c.arcTo(24.70 * skx, 24.70 * sky, 0, 0, 1, 56.20* skx, 12.50* sky);
		c.arcTo(7.50 * skx, 7.50 * sky, 0, 0, 1, 56.20* skx, 14.00* sky);
		c.close();
		c.moveTo(46.60 * skx, 19.80* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 45.50* skx, 20.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 46.70* skx, 22.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 47.90* skx, 21.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 46.60* skx, 19.80* sky);
		c.close();
		c.moveTo(13.00 * skx, 50.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 14.30* skx, 49.70* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 13.20* skx, 48.50* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 11.90* skx, 49.70* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 13.00* skx, 50.90* sky);
		c.close();
		c.moveTo(40.60 * skx, 25.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 39.50* skx, 24.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 38.30* skx, 25.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 39.40* skx, 26.90* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 40.60* skx, 25.80* sky);
		c.close();
		c.moveTo(22.70 * skx, 47.30* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 21.50* skx, 46.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 20.40* skx, 47.40* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 21.50* skx, 48.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 22.70* skx, 47.30* sky);
		c.close();
		c.moveTo(37.10 * skx, 40.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 38.30* skx, 39.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 37.10* skx, 37.70* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 35.90* skx, 38.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 37.10* skx, 40.10* sky);
		c.close();
		c.moveTo(44.30 * skx, 31.70* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 45.50* skx, 30.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 44.20* skx, 29.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 1, 0, 44.30* skx, 31.70* sky);
		c.close();
		c.moveTo(32.30 * skx, 41.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 31.10* skx, 40.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 29.90* skx, 41.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 31.10* skx, 42.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 32.30* skx, 41.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m13cee538382544965b8d17d5b10c6ca', m13cee538382544965b8d17d5b10c6ca);
	m13cee538382544965b8d17d5b10c6ca.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m0b0b197cdb9973325cead6e457dcb0a() {
		mxActor.call(this);
	};
	mxUtils.extend(m0b0b197cdb9973325cead6e457dcb0a, mxActor);
	m0b0b197cdb9973325cead6e457dcb0a.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 56;
		h1 = 58;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(56.40 * skx, 13.70* sky);
		c.curveTo(56.20 * skx, 15.60 * sky, 56.10 * skx, 17.30 * sky, 55.90 * skx, 19.00 * sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 0, 56.00* skx, 20.20* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 1, 55.70* skx, 22.60* sky);
		c.arcTo(9.10 * skx, 9.10 * sky, 0, 0, 0, 55.00* skx, 24.00* sky);
		c.curveTo(54.60 * skx, 25.00 * sky, 54.30 * skx, 26.00 * sky, 54.00 * skx, 26.90 * sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 53.80* skx, 29.20* sky);
		c.curveTo(54.10 * skx, 30.10 * sky, 53.40 * skx, 31.00 * sky, 52.40 * skx, 31.70 * sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 51.50* skx, 32.60* sky);
		c.curveTo(51.00 * skx, 33.40 * sky, 50.50 * skx, 34.20 * sky, 50.10 * skx, 35.00 * sky);
		c.curveTo(49.7 * skx, 35.8 * sky, 49.40 * skx, 36.50 * sky, 48.90 * skx, 37.30 * sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 47.60* skx, 38.90* sky);
		c.curveTo(46.50 * skx, 40.00 * sky, 45.40 * skx, 41.00 * sky, 44.40 * skx, 42.10 * sky);
		c.curveTo(43.4 * skx, 43.2 * sky, 44.30 * skx, 42.60 * sky, 44.30 * skx, 42.80 * sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 41.50* skx, 45.50* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 40.20* skx, 46.00* sky);
		c.arcTo(6.00 * skx, 6.00 * sky, 0, 0, 0, 38.90* skx, 46.90* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 38.20* skx, 48.00* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 34.80* skx, 50.20* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 34.00* skx, 50.30* sky);
		c.lineTo(31.10* skx,52.00* sky);
		c.lineTo(30.30* skx,52.70* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 27.80* skx, 53.80* sky);
		c.lineTo(26.80* skx,54.00* sky);
		c.lineTo(23.00* skx,55.40* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 20.10* skx, 56.90* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 17.70* skx, 57.20* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 16.60* skx, 57.00* sky);
		c.arcTo(28.20 * skx, 28.20 * sky, 0, 0, 1, 7.90* skx, 57.20* sky);
		c.curveTo(5.90 * skx, 58.10 * sky, 4.60 * skx, 56.40 * sky, 3.00 * skx, 55.60 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 2.20* skx, 55.00* sky);
		c.curveTo(-0.50 * skx, 52.90 * sky, -0.80 * skx, 49.60 * sky, 1.70 * skx, 47.20 * sky);
		c.curveTo(4.2 * skx, 44.800000000000004 * sky, 4.30 * skx, 45.40 * sky, 5.60 * skx, 44.40 * sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 6.60* skx, 43.50* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 9.60* skx, 42.10* sky);
		c.lineTo(10.30* skx,41.90* sky);
		c.lineTo(13.20* skx,40.20* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 14.00* skx, 39.50* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 16.00* skx, 38.30* sky);
		c.lineTo(16.50 * skx,38.30* sky);
		c.lineTo(21.30* skx,34.70* sky);
		c.lineTo(23.00* skx,33.50* sky);
		c.lineTo(27.20* skx,29.50* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 27.70* skx, 28.70* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 1, 29.50* skx, 26.70* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 30.50* skx, 26.00* sky);
		c.lineTo(34.50* skx,21.00* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 34.80* skx, 20.10* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 36.70* skx, 17.10* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 37.70* skx, 16.20* sky);
		c.arcTo(8.20 * skx, 8.20 * sky, 0, 0, 0, 38.90* skx, 14.20* sky);
		c.curveTo(39.20 * skx, 13.60 * sky, 39.30 * skx, 12.90 * sky, 39.60 * skx, 12.30 * sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 1, 40.70* skx, 10.40* sky);
		c.lineTo(41.50* skx,9.50* sky);
		c.curveTo(42.20 * skx, 7.80 * sky, 42.90 * skx, 6.20 * sky, 43.70 * skx, 4.60 * sky);
		c.arcTo(7.60 * skx, 7.60 * sky, 0, 0, 1, 45.30* skx, 2.00* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 53.00* skx, 1.60* sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 1, 55.70* skx, 7.40* sky);
		c.curveTo(56.00 * skx, 9.60 * sky, 56.20 * skx, 11.80 * sky, 56.40 * skx, 13.70 * sky);
		c.close();
		c.moveTo(53.90 * skx, 14.40* sky);
		c.curveTo(53.80 * skx, 12.60 * sky, 53.80 * skx, 11.10 * sky, 53.60 * skx, 9.50 * sky);
		c.arcTo(13.90 * skx, 13.90 * sky, 0, 0, 0, 52.00* skx, 3.90* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 46.90* skx, 3.70* sky);
		c.arcTo(19.80 * skx, 19.80 * sky, 0, 0, 0, 45.80* skx, 5.70* sky);
		c.lineTo(43.60* skx,10.60* sky);
		c.curveTo(43.30 * skx, 11.40 * sky, 42.70 * skx, 11.70 * sky, 42.20 * skx, 12.20 * sky);
		c.curveTo(41.7 * skx, 12.7 * sky, 42.00 * skx, 13.70 * sky, 41.60 * skx, 14.30 * sky);
		c.curveTo(41.2 * skx, 14.900000000000002 * sky, 40.10 * skx, 17.00 * sky, 39.30 * skx, 18.30 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 37.90* skx, 19.20* sky);
		c.curveTo(37.20 * skx, 19.20 * sky, 37.10 * skx, 19.50 * sky, 37.20 * skx, 20.20 * sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 37.00* skx, 21.70* sky);
		c.curveTo(35.30 * skx, 23.80 * sky, 33.70 * skx, 26.00 * sky, 31.90 * skx, 28.10 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 30.70* skx, 28.70* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 29.90* skx, 29.50* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 29.30* skx, 30.80* sky);
		c.arcTo(25.00 * skx, 25.00 * sky, 0, 0, 1, 26.00* skx, 34.00* sky);
		c.curveTo(25.10 * skx, 34.80 * sky, 24.40 * skx, 35.80 * sky, 23.10 * skx, 36.00 * sky);
		c.curveTo(21.800000000000004 * skx, 36.2 * sky, 22.90 * skx, 36.30 * sky, 22.70 * skx, 36.40 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 21.90* skx, 37.40* sky);
		c.lineTo(17.90* skx,40.20* sky);
		c.curveTo(17.40 * skx, 40.50 * sky, 16.80 * skx, 40.50 * sky, 16.30 * skx, 40.80 * sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 15.60* skx, 41.10* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 1, 14.30* skx, 42.40* sky);
		c.arcTo(22.10 * skx, 22.10 * sky, 0, 0, 1, 10.90* skx, 44.20* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 1, 9.30* skx, 44.40* sky);
		c.curveTo(8.80 * skx, 44.30 * sky, 8.60 * skx, 44.40 * sky, 8.40 * skx, 44.90 * sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 1, 7.40* skx, 46.10* sky);
		c.curveTo(6.20 * skx, 47.00 * sky, 4.80 * skx, 47.70 * sky, 3.60 * skx, 48.70 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 4.10* skx, 53.50* sky);
		c.curveTo(5.30 * skx, 54.20 * sky, 6.30 * skx, 55.40 * sky, 7.90 * skx, 54.80 * sky);
		c.lineTo(8.10 * skx,54.80* sky);
		c.arcTo(33.00 * skx, 33.00 * sky, 0, 0, 0, 16.40* skx, 54.50* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 1, 18.10* skx, 54.80* sky);
		c.curveTo(18.60 * skx, 55.00 * sky, 18.80 * skx, 55.00 * sky, 19.10 * skx, 54.60 * sky);
		c.arcTo(5.30 * skx, 5.30 * sky, 0, 0, 1, 20.30* skx, 53.60* sky);
		c.curveTo(22.40 * skx, 52.90 * sky, 24.40 * skx, 52.00 * sky, 26.60 * skx, 51.50 * sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 0, 29.60* skx, 50.00* sky);
		c.arcTo(20.80 * skx, 20.80 * sky, 0, 0, 1, 33.50* skx, 47.80* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 34.90* skx, 47.70* sky);
		c.curveTo(35.60 * skx, 47.80 * sky, 35.80 * skx, 47.70 * sky, 35.90 * skx, 47.00 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 36.60* skx, 45.60* sky);
		c.lineTo(39.30* skx,43.50* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 41.10* skx, 42.90* sky);
		c.curveTo(41.70 * skx, 43.10 * sky, 42.00 * skx, 42.80 * sky, 41.90 * skx, 42.20 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 42.50* skx, 40.50* sky);
		c.lineTo(44.90* skx,38.00* sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 1, 46.20* skx, 37.10* sky);
		c.lineTo(46.70* skx,36.60* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 47.50* skx, 34.60* sky);
		c.arcTo(34.80 * skx, 34.80 * sky, 0, 0, 1, 49.70* skx, 31.00* sky);
		c.arcTo(13.10 * skx, 13.10 * sky, 0, 0, 1, 50.90* skx, 29.90* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 51.40* skx, 29.10* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 51.50* skx, 27.00* sky);
		c.lineTo(52.40* skx,24.40* sky);
		c.curveTo(52.70 * skx, 23.50 * sky, 52.70 * skx, 22.30 * sky, 53.30 * skx, 21.90 * sky);
		c.curveTo(53.89999999999999 * skx, 21.499999999999996 * sky, 53.10 * skx, 20.10 * sky, 53.50 * skx, 19.30 * sky);
		c.lineTo(53.50 * skx,19.30* sky);
		c.curveTo(53.70 * skx, 17.60 * sky, 53.80 * skx, 15.90 * sky, 53.90 * skx, 14.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(39.40 * skx, 24.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 40.60* skx, 25.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 39.40* skx, 27.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 38.30* skx, 25.70* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 39.40* skx, 24.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(44.20 * skx, 31.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 43.00* skx, 30.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 44.20* skx, 29.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 45.40* skx, 30.60* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 44.20* skx, 31.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(22.70 * skx, 47.40* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 21.50* skx, 48.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 20.30* skx, 47.30* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 21.50* skx, 46.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 22.70* skx, 47.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(37.20 * skx, 37.80* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 38.20* skx, 39.00* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 36.90* skx, 40.10* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 35.90* skx, 38.90* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 37.20* skx, 37.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(13.10 * skx, 50.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 11.90* skx, 49.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 13.10* skx, 48.60* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 14.30* skx, 49.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 13.10* skx, 50.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(46.60 * skx, 22.20* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 45.40* skx, 21.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 1, 1, 46.60* skx, 22.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.20 * skx, 41.30* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 31.10* skx, 42.50* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 29.90* skx, 41.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 31.10* skx, 40.20* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 32.20* skx, 41.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m0b0b197cdb9973325cead6e457dcb0a', m0b0b197cdb9973325cead6e457dcb0a);
	m0b0b197cdb9973325cead6e457dcb0a.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m3d8fe45466733139414a560b69c9483() {
		mxActor.call(this);
	};
	mxUtils.extend(m3d8fe45466733139414a560b69c9483, mxActor);
	m3d8fe45466733139414a560b69c9483.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 50;
		h1 = 55;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(44.90 * skx, 21.40* sky);
		c.lineTo(46.30* skx,19.50* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 49.30* skx, 19.00* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 49.60* skx, 21.90* sky);
		c.arcTo(16.10 * skx, 16.10 * sky, 0, 0, 0, 46.60* skx, 27.70* sky);
		c.lineTo(46.30* skx,30.00* sky);
		c.lineTo(45.70* skx,38.70* sky);
		c.curveTo(45.60 * skx, 39.40 * sky, 45.40 * skx, 40.10 * sky, 45.30 * skx, 40.80 * sky);
		c.lineTo(46.90 * skx,40.80* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 48.70* skx, 42.30* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 47.70* skx, 44.50* sky);
		c.lineTo(45.60* skx,45.20* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 0, 42.10* skx, 47.60* sky);
		c.arcTo(22.00 * skx, 22.00 * sky, 0, 0, 1, 31.60* skx, 54.60* sky);
		c.arcTo(19.70 * skx, 19.70 * sky, 0, 0, 1, 13.90* skx, 51.30* sky);
		c.curveTo(10.60 * skx, 48.90 * sky, 8.50 * skx, 45.60 * sky, 6.80 * skx, 41.90 * sky);
		c.arcTo(8.20 * skx, 8.20 * sky, 0, 0, 0, 1.60* skx, 37.30* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 0.10* skx, 34.50* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 2.80* skx, 33.30* sky);
		c.lineTo(5.40* skx,34.20* sky);
		c.curveTo(5.40 * skx, 34.10 * sky, 5.50 * skx, 34.00 * sky, 5.50 * skx, 33.80 * sky);
		c.curveTo(5.30 * skx, 30.90 * sky, 5.20 * skx, 28.00 * sky, 5.00 * skx, 25.10 * sky);
		c.arcTo(7.40 * skx, 7.40 * sky, 0, 0, 0, 3.30* skx, 20.90* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 3.60* skx, 18.00* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 6.40* skx, 18.30* sky);
		c.arcTo(11.30 * skx, 11.30 * sky, 0, 0, 1, 7.90* skx, 20.40* sky);
		c.lineTo(8.30* skx,19.80* sky);
		c.arcTo(27.30 * skx, 27.30 * sky, 0, 0, 1, 17.10* skx, 10.40* sky);
		c.curveTo(19.70 * skx, 8.60 * sky, 22.30 * skx, 6.70 * sky, 24.80 * skx, 4.70 * sky);
		c.arcTo(21.70 * skx, 21.70 * sky, 0, 0, 0, 28.00* skx, 1.10* sky);
		c.curveTo(28.90 * skx, 0.00 * sky, 30.00 * skx, -0.30 * sky, 30.90 * skx, 0.30 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 31.50* skx, 3.30* sky);
		c.arcTo(11.10 * skx, 11.10 * sky, 0, 0, 0, 30.60* skx, 5.20* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 31.30* skx, 8.50* sky);
		c.arcTo(49.70 * skx, 49.70 * sky, 0, 0, 0, 35.70* skx, 11.70* sky);
		c.curveTo(39.40 * skx, 14.10 * sky, 42.70 * skx, 16.90 * sky, 44.60 * skx, 21.00 * sky);
		c.curveTo(44.60 * skx, 21.10 * sky, 44.80 * skx, 21.30 * sky, 44.90 * skx, 21.40 * sky);
		c.close();
		c.moveTo(42.20 * skx, 30.50* sky);
		c.arcTo(16.10 * skx, 16.10 * sky, 0, 0, 0, 42.20* skx, 28.30* sky);
		c.arcTo(16.80 * skx, 16.80 * sky, 0, 0, 0, 34.90* skx, 16.80* sky);
		c.arcTo(15.30 * skx, 15.30 * sky, 0, 0, 0, 24.90* skx, 14.30* sky);
		c.arcTo(15.50 * skx, 15.50 * sky, 0, 0, 0, 14.00* skx, 19.50* sky);
		c.arcTo(18.10 * skx, 18.10 * sky, 0, 0, 0, 9.70* skx, 34.40* sky);
		c.curveTo(10.00 * skx, 37.10 * sky, 10.20 * skx, 39.80 * sky, 11.50 * skx, 42.30 * sky);
		c.curveTo(14.70 * skx, 48.10 * sky, 19.40 * skx, 51.20 * sky, 26.10 * skx, 51.20 * sky);
		c.arcTo(15.40 * skx, 15.40 * sky, 0, 0, 0, 35.50* skx, 48.10* sky);
		c.arcTo(13.90 * skx, 13.90 * sky, 0, 0, 0, 41.10* skx, 40.30* sky);
		c.arcTo(46.00 * skx, 46.00 * sky, 0, 0, 0, 42.20* skx, 30.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(19.70 * skx, 18.50* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 21.80* skx, 20.40* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 19.80* skx, 22.50* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 17.70* skx, 20.50* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 19.70* skx, 18.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(15.70 * skx, 38.90* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 13.60* skx, 36.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 15.60* skx, 34.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 1, 1, 15.70* skx, 38.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(36.10 * skx, 22.60* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 38.10* skx, 24.70* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 36.10* skx, 26.60* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 36.10* skx, 22.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(23.80 * skx, 24.60* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 25.90* skx, 26.60* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 23.90* skx, 28.60* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 21.80* skx, 26.60* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 23.80* skx, 24.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(17.70 * skx, 28.70* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 15.50* skx, 30.70* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 13.60* skx, 28.70* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 15.70* skx, 26.70* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 17.70* skx, 28.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(30.00 * skx, 30.80* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 32.00* skx, 28.70* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 34.00* skx, 30.70* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 32.00* skx, 32.70* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 30.00* skx, 30.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(25.90 * skx, 34.80* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 23.80* skx, 36.80* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 21.80* skx, 34.80* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 23.90* skx, 32.80* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 25.90* skx, 34.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(28.00 * skx, 20.50* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 30.00* skx, 18.50* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 32.00* skx, 20.60* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 30.00* skx, 22.50* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 28.00* skx, 20.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(28.00 * skx, 45.00* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 30.00* skx, 43.00* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 1, 1, 29.90* skx, 47.10* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 28.00* skx, 45.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(30.00 * skx, 38.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 1, 1, 32.00* skx, 40.90* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 30.00* skx, 38.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(38.10 * skx, 32.80* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 40.20* skx, 34.80* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 38.20* skx, 36.80* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 36.20* skx, 34.80* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 38.10* skx, 32.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(19.80 * skx, 43.10* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 21.70* skx, 41.00* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 23.80* skx, 43.00* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 19.80* skx, 43.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m3d8fe45466733139414a560b69c9483', m3d8fe45466733139414a560b69c9483);
	m3d8fe45466733139414a560b69c9483.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m87de54765db37c26aeb817a34bae990() {
		mxActor.call(this);
	};
	mxUtils.extend(m87de54765db37c26aeb817a34bae990, mxActor);
	m87de54765db37c26aeb817a34bae990.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 50;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(5.60 * skx, 19.70* sky);
		c.curveTo(7.00 * skx, 17.70 * sky, 8.30 * skx, 15.80 * sky, 9.80 * skx, 13.90 * sky);
		c.arcTo(22.80 * skx, 22.80 * sky, 0, 0, 1, 16.80* skx, 8.20* sky);
		c.curveTo(19.70 * skx, 6.60 * sky, 22.00 * skx, 4.40 * sky, 24.50 * skx, 2.30 * sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 1, 28.40* skx, 0.10* sky);
		c.curveTo(30.10 * skx, -0.30 * sky, 30.80 * skx, 0.20 * sky, 30.60 * skx, 2.00 * sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 0, 33.00* skx, 7.00* sky);
		c.lineTo(34.80* skx,8.10* sky);
		c.arcTo(24.40 * skx, 24.40 * sky, 0, 0, 1, 45.40* skx, 18.80* sky);
		c.curveTo(45.90 * skx, 19.70 * sky, 46.10 * skx, 19.80 * sky, 47.00 * skx, 19.10 * sky);
		c.curveTo(47.9 * skx, 18.400000000000002 * sky, 47.60 * skx, 18.20 * sky, 48.00 * skx, 17.90 * sky);
		c.curveTo(48.4 * skx, 17.599999999999998 * sky, 49.00 * skx, 17.20 * sky, 49.40 * skx, 17.30 * sky);
		c.curveTo(49.8 * skx, 17.400000000000002 * sky, 50.30 * skx, 18.00 * sky, 50.30 * skx, 18.40 * sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 1, 49.90* skx, 23.30* sky);
		c.arcTo(26.10 * skx, 26.10 * sky, 0, 0, 0, 49.10* skx, 32.10* sky);
		c.arcTo(25.80 * skx, 25.80 * sky, 0, 0, 1, 46.80* skx, 44.30* sky);
		c.curveTo(46.30 * skx, 45.40 * sky, 46.30 * skx, 45.40 * sky, 47.30 * skx, 45.80 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 47.70* skx, 47.90* sky);
		c.arcTo(25.30 * skx, 25.30 * sky, 0, 0, 1, 45.00* skx, 49.70* sky);
		c.arcTo(17.30 * skx, 17.30 * sky, 0, 0, 0, 41.90* skx, 51.90* sky);
		c.curveTo(31.70 * skx, 62.20 * sky, 16.10 * skx, 61.00 * sky, 7.60 * skx, 49.30 * sky);
		c.arcTo(45.30 * skx, 45.30 * sky, 0, 0, 1, 4.90* skx, 44.50* sky);
		c.arcTo(10.00 * skx, 10.00 * sky, 0, 0, 0, 2.10* skx, 40.90* sky);
		c.arcTo(10.00 * skx, 10.00 * sky, 0, 0, 1, 0.20* skx, 38.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 1.20* skx, 36.80* sky);
		c.lineTo(1.90 * skx,36.80* sky);
		c.curveTo(2.40 * skx, 36.70 * sky, 2.70 * skx, 36.50 * sky, 2.60 * skx, 35.80 * sky);
		c.arcTo(26.10 * skx, 26.10 * sky, 0, 0, 1, 3.40* skx, 26.20* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 3.20* skx, 24.80* sky);
		c.arcTo(10.40 * skx, 10.40 * sky, 0, 0, 1, 2.40* skx, 20.20* sky);
		c.curveTo(2.50 * skx, 19.50 * sky, 2.60 * skx, 18.90 * sky, 3.30 * skx, 18.60 * sky);
		c.curveTo(3.9999999999999996 * skx, 18.300000000000004 * sky, 4.50 * skx, 18.80 * sky, 4.90 * skx, 19.30 * sky);
		c.close();
		c.moveTo(28.10 * skx, 2.80* sky);
		c.lineTo(25.00* skx,5.10* sky);
		c.arcTo(64.80 * skx, 64.80 * sky, 0, 0, 1, 18.30* skx, 10.10* sky);
		c.arcTo(26.50 * skx, 26.50 * sky, 0, 0, 0, 8.00* skx, 20.80* sky);
		c.curveTo(7.20 * skx, 22.40 * sky, 7.20 * skx, 22.40 * sky, 5.40 * skx, 22.30 * sky);
		c.lineTo(5.20 * skx,22.30* sky);
		c.lineTo(5.20* skx,22.80 * sky);
		c.arcTo(9.80 * skx, 9.80 * sky, 0, 0, 1, 5.70* skx, 24.40* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 1, 5.80* skx, 26.20* sky);
		c.arcTo(29.70 * skx, 29.70 * sky, 0, 0, 0, 5.10* skx, 36.50* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 4.20* skx, 38.30* sky);
		c.lineTo(3.50* skx,38.70* sky);
		c.arcTo(10.90 * skx, 10.90 * sky, 0, 0, 1, 4.60* skx, 39.70* sky);
		c.arcTo(34.60 * skx, 34.60 * sky, 0, 0, 1, 6.80* skx, 42.80* sky);
		c.curveTo(7.90 * skx, 44.50 * sky, 8.70 * skx, 46.40 * sky, 9.90 * skx, 48.10 * sky);
		c.arcTo(19.30 * skx, 19.30 * sky, 0, 0, 0, 39.20* skx, 51.00* sky);
		c.arcTo(16.00 * skx, 16.00 * sky, 0, 0, 1, 43.90* skx, 47.50* sky);
		c.lineTo(44.70* skx,46.90* sky);
		c.curveTo(44.10 * skx, 46.00 * sky, 43.60 * skx, 45.30 * sky, 44.20 * skx, 44.20 * sky);
		c.arcTo(25.30 * skx, 25.30 * sky, 0, 0, 0, 46.60* skx, 31.50* sky);
		c.arcTo(22.30 * skx, 22.30 * sky, 0, 0, 1, 47.50* skx, 23.00* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 0, 47.80* skx, 21.60* sky);
		c.curveTo(45.20 * skx, 22.40 * sky, 44.50 * skx, 22.10 * sky, 43.30 * skx, 19.90 * sky);
		c.arcTo(22.80 * skx, 22.80 * sky, 0, 0, 0, 33.70* skx, 10.30* sky);
		c.curveTo(30.80 * skx, 8.80 * sky, 28.30 * skx, 6.80 * sky, 28.10 * skx, 2.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(44.20 * skx, 33.80* sky);
		c.arcTo(21.40 * skx, 21.40 * sky, 0, 0, 1, 36.30* skx, 50.30* sky);
		c.curveTo(29.20 * skx, 56.00 * sky, 19.30 * skx, 55.10 * sky, 13.00 * skx, 48.10 * sky);
		c.curveTo(6.699999999999999 * skx, 41.1 * sky, 5.60 * skx, 25.30 * sky, 13.80 * skx, 17.30 * sky);
		c.curveTo(22.0 * skx, 9.3 * sky, 33.00 * skx, 10.80 * sky, 39.60 * skx, 19.30 * sky);
		c.arcTo(23.10 * skx, 23.10 * sky, 0, 0, 1, 44.20* skx, 33.80* sky);
		c.close();
		c.moveTo(41.70 * skx, 34.20* sky);
		c.curveTo(41.70 * skx, 28.80 * sky, 40.50 * skx, 24.80 * sky, 38.10 * skx, 21.40 * sky);
		c.curveTo(32.10 * skx, 13.00 * sky, 21.20 * skx, 12.40 * sky, 14.50 * skx, 20.20 * sky);
		c.curveTo(7.800000000000001 * skx, 28.0 * sky, 8.30 * skx, 39.70 * sky, 15.10 * skx, 46.80 * sky);
		c.arcTo(14.30 * skx, 14.30 * sky, 0, 0, 0, 35.60* skx, 47.60* sky);
		c.arcTo(18.10 * skx, 18.10 * sky, 0, 0, 0, 41.70* skx, 34.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(35.10 * skx, 22.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 33.90* skx, 23.20* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 32.60* skx, 21.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 33.80* skx, 20.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 35.10* skx, 22.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(17.90 * skx, 42.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 19.10* skx, 44.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 17.90* skx, 45.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 16.70* skx, 44.00* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 17.90* skx, 42.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.60 * skx, 42.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 32.60* skx, 40.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 33.80* skx, 41.70* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 32.60* skx, 42.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(35.10 * skx, 33.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 33.80* skx, 34.30* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 32.60* skx, 33.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 33.90* skx, 31.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 35.10* skx, 33.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(14.20 * skx, 33.00* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 13.00* skx, 34.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 11.80* skx, 33.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 13.00* skx, 31.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 14.20* skx, 33.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(26.50 * skx, 30.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 27.70* skx, 31.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 26.50* skx, 33.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 25.30* skx, 31.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 26.50* skx, 30.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(24.00 * skx, 47.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 22.80* skx, 46.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 24.10* skx, 45.30* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 25.30* skx, 46.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 24.00* skx, 47.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(16.70 * skx, 24.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 17.90* skx, 25.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 16.60* skx, 26.90* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 15.40* skx, 25.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 16.70* skx, 24.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(25.30 * skx, 17.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 26.50* skx, 18.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 25.20* skx, 19.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 24.00* skx, 18.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 25.30* skx, 17.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(33.80 * skx, 25.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 32.60* skx, 26.90* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 31.40* skx, 25.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 32.60* skx, 24.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 33.80* skx, 25.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(30.10 * skx, 22.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 28.90* skx, 23.20* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 27.70* skx, 22.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 29.00* skx, 20.80* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 30.10* skx, 22.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(38.80 * skx, 29.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 37.60* skx, 30.50* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 36.30* skx, 29.40* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 38.80* skx, 29.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(25.30 * skx, 36.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 24.10* skx, 37.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 22.80* skx, 36.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 23.90* skx, 35.50* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 25.30* skx, 36.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(37.50 * skx, 37.90* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 36.40* skx, 39.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 35.10* skx, 38.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 36.20* skx, 36.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 37.50* skx, 37.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(21.50 * skx, 29.30* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 20.30* skx, 30.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 19.10* skx, 29.40* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 20.30* skx, 28.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 21.50* skx, 29.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(19.10 * skx, 37.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 17.90* skx, 39.10* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 16.70* skx, 38.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 17.90* skx, 36.70* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 19.10* skx, 37.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m87de54765db37c26aeb817a34bae990', m87de54765db37c26aeb817a34bae990);
	m87de54765db37c26aeb817a34bae990.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mf2712b1bb1f0b6a316714994a2d2d45() {
		mxActor.call(this);
	};
	mxUtils.extend(mf2712b1bb1f0b6a316714994a2d2d45, mxActor);
	mf2712b1bb1f0b6a316714994a2d2d45.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 71;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(70.90 * skx, 15.40* sky);
		c.curveTo(69.20 * skx, 16.50 * sky, 67.70 * skx, 17.40 * sky, 66.20 * skx, 18.50 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 65.20* skx, 19.70* sky);
		c.arcTo(17.60 * skx, 17.60 * sky, 0, 0, 1, 61.20* skx, 27.20* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 60.40* skx, 29.10* sky);
		c.curveTo(59.40 * skx, 37.50 * sky, 55.30 * skx, 44.00 * sky, 48.00 * skx, 48.20 * sky);
		c.arcTo(50.50 * skx, 50.50 * sky, 0, 0, 1, 42.70* skx, 50.60* sky);
		c.curveTo(42.70 * skx, 52.20 * sky, 42.60 * skx, 53.80 * sky, 42.70 * skx, 55.40 * sky);
		c.curveTo(42.800000000000004 * skx, 57.0 * sky, 42.50 * skx, 56.50 * sky, 41.70 * skx, 56.50 * sky);
		c.arcTo(16.00 * skx, 16.00 * sky, 0, 0, 0, 38.60* skx, 56.50* sky);
		c.curveTo(37.70 * skx, 56.50 * sky, 37.50 * skx, 56.10 * sky, 37.50 * skx, 55.30 * sky);
		c.lineTo(37.50* skx,51.40 * sky);
		c.lineTo(33.00* skx,51.20* sky);
		c.curveTo(32.80 * skx, 51.20 * sky, 32.60 * skx, 51.70 * sky, 32.50 * skx, 52.00 * sky);
		c.lineTo(32.50* skx,57.90 * sky);
		c.quadTo(32.70 * skx, 59.30* sky, 31.30 * skx, 59.10 * sky);
		c.arcTo(28.10 * skx, 28.10 * sky, 0, 0, 0, 28.40* skx, 59.10* sky);
		c.curveTo(27.60 * skx, 59.20 * sky, 27.30 * skx, 58.90 * sky, 27.30 * skx, 58.00 * sky);
		c.curveTo(27.3 * skx, 57.1 * sky, 27.30 * skx, 53.10 * sky, 27.40 * skx, 50.60 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 26.40* skx, 49.10* sky);
		c.arcTo(22.40 * skx, 22.40 * sky, 0, 0, 1, 14.10* skx, 36.30* sky);
		c.curveTo(12.90 * skx, 33.30 * sky, 10.90 * skx, 31.20 * sky, 8.90 * skx, 29.10 * sky);
		c.lineTo(0.50* skx,20.50* sky);
		c.lineTo(0.00* skx,19.80* sky);
		c.lineTo(3.30* skx,16.10* sky);
		c.lineTo(4.90* skx,17.50* sky);
		c.lineTo(16.90* skx,30.00* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 17.60* skx, 31.30* sky);
		c.arcTo(19.20 * skx, 19.20 * sky, 0, 0, 0, 55.50* skx, 27.30* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 1, 56.50* skx, 24.80* sky);
		c.curveTo(59.30 * skx, 21.80 * sky, 61.10 * skx, 18.40 * sky, 60.60 * skx, 14.10 * sky);
		c.arcTo(10.20 * skx, 10.20 * sky, 0, 0, 0, 49.40* skx, 5.20* sky);
		c.arcTo(10.30 * skx, 10.30 * sky, 0, 0, 0, 40.10* skx, 15.90* sky);
		c.arcTo(9.70 * skx, 9.70 * sky, 0, 0, 0, 46.00* skx, 24.60* sky);
		c.curveTo(46.70 * skx, 25.00 * sky, 46.90 * skx, 25.30 * sky, 46.60 * skx, 26.10 * sky);
		c.curveTo(46.300000000000004 * skx, 26.900000000000002 * sky, 45.80 * skx, 28.50 * sky, 45.20 * skx, 30.10 * sky);
		c.lineTo(40.40* skx,27.20* sky);
		c.curveTo(38.30 * skx, 26.00 * sky, 36.30 * skx, 24.40 * sky, 34.00 * skx, 23.70 * sky);
		c.arcTo(15.00 * skx, 15.00 * sky, 0, 0, 0, 19.70* skx, 26.90* sky);
		c.curveTo(18.20 * skx, 28.20 * sky, 18.10 * skx, 28.30 * sky, 16.80 * skx, 26.70 * sky);
		c.lineTo(10.20* skx,18.40* sky);
		c.curveTo(9.70 * skx, 17.80 * sky, 9.70 * skx, 17.40 * sky, 10.40 * skx, 16.90 * sky);
		c.lineTo(13.60* skx,14.40* sky);
		c.lineTo(16.80* skx,18.40* sky);
		c.curveTo(17.50 * skx, 19.20 * sky, 18.10 * skx, 20.60 * sky, 19.00 * skx, 20.80 * sky);
		c.curveTo(19.9 * skx, 21.0 * sky, 20.90 * skx, 20.10 * sky, 21.90 * skx, 19.70 * sky);
		c.arcTo(19.70 * skx, 19.70 * sky, 0, 0, 1, 34.10* skx, 18.40* sky);
		c.lineTo(35.30 * skx,18.40* sky);
		c.arcTo(9.10 * skx, 9.10 * sky, 0, 0, 1, 35.20* skx, 16.70* sky);
		c.curveTo(34.20 * skx, 8.40 * sky, 40.60 * skx, 1.40 * sky, 47.90 * skx, 0.20 * sky);
		c.arcTo(15.50 * skx, 15.50 * sky, 0, 0, 1, 65.10* skx, 11.00* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 66.50* skx, 12.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(23.30 * skx, 29.20* sky);
		c.lineTo(27.40* skx,27.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 28.50* skx, 27.90* sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 0, 36.70* skx, 33.30* sky);
		c.curveTo(37.00 * skx, 33.30 * sky, 37.40 * skx, 33.80 * sky, 37.50 * skx, 34.10 * sky);
		c.lineTo(37.50* skx,37.70 * sky);
		c.curveTo(37.50 * skx, 38.40 * sky, 37.10 * skx, 38.50 * sky, 36.50 * skx, 38.50 * sky);
		c.arcTo(15.50 * skx, 15.50 * sky, 0, 0, 1, 25.30* skx, 32.40* sky);
		c.curveTo(24.60 * skx, 31.40 * sky, 24.00 * skx, 30.30 * sky, 23.30 * skx, 29.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(51.70 * skx, 17.90* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 1, 47.90* skx, 14.10* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 1, 1, 51.70* skx, 17.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mf2712b1bb1f0b6a316714994a2d2d45', mf2712b1bb1f0b6a316714994a2d2d45);
	mf2712b1bb1f0b6a316714994a2d2d45.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m4ece7f31600f0f11b2bd3c8fb901c3f() {
		mxActor.call(this);
	};
	mxUtils.extend(m4ece7f31600f0f11b2bd3c8fb901c3f, mxActor);
	m4ece7f31600f0f11b2bd3c8fb901c3f.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 64;
		h1 = 72;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(58.70 * skx, 8.40* sky);
		c.arcTo(8.60 * skx, 8.60 * sky, 0, 0, 1, 60.40* skx, 13.00* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 61.30* skx, 14.40* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 63.60* skx, 19.60* sky);
		c.lineTo(60.70* skx,19.10* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 57.90* skx, 20.10* sky);
		c.arcTo(9.40 * skx, 9.40 * sky, 0, 0, 0, 56.10* skx, 27.50* sky);
		c.curveTo(56.50 * skx, 30.30 * sky, 57.10 * skx, 33.10 * sky, 57.60 * skx, 35.90 * sky);
		c.arcTo(26.90 * skx, 26.90 * sky, 0, 0, 1, 57.60* skx, 44.40* sky);
		c.curveTo(56.30 * skx, 50.70 * sky, 52.30 * skx, 54.80 * sky, 46.70 * skx, 57.50 * sky);
		c.arcTo(31.00 * skx, 31.00 * sky, 0, 0, 1, 35.80* skx, 60.50* sky);
		c.arcTo(28.10 * skx, 28.10 * sky, 0, 0, 0, 35.90* skx, 63.40* sky);
		c.curveTo(35.90 * skx, 63.60 * sky, 36.30 * skx, 64.00 * sky, 36.60 * skx, 64.10 * sky);
		c.arcTo(11.30 * skx, 11.30 * sky, 0, 0, 1, 41.10* skx, 67.70* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 41.50* skx, 70.20* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 39.50* skx, 71.70* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 38.10* skx, 71.70* sky);
		c.curveTo(37.30 * skx, 71.80 * sky, 36.90 * skx, 71.30 * sky, 36.50 * skx, 70.70 * sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 29.70* skx, 70.80* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 28.00* skx, 71.70* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 27.10* skx, 71.70* sky);
		c.curveTo(26.20 * skx, 71.70 * sky, 25.40 * skx, 71.70 * sky, 24.90 * skx, 70.70 * sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 25.10* skx, 67.80* sky);
		c.arcTo(9.90 * skx, 9.90 * sky, 0, 0, 1, 29.50* skx, 64.10* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 30.40* skx, 62.90* sky);
		c.arcTo(16.10 * skx, 16.10 * sky, 0, 0, 1, 30.40* skx, 60.70* sky);
		c.lineTo(21.20* skx,58.50* sky);
		c.lineTo(21.20* skx,58.10 * sky);
		c.curveTo(26.60 * skx, 58.00 * sky, 31.50 * skx, 56.50 * sky, 35.20 * skx, 52.40 * sky);
		c.curveTo(38.900000000000006 * skx, 48.3 * sky, 40.30 * skx, 43.50 * sky, 40.70 * skx, 38.30 * sky);
		c.arcTo(24.90 * skx, 24.90 * sky, 0, 0, 1, 36.50* skx, 47.70* sky);
		c.curveTo(32.40 * skx, 52.90 * sky, 27.00 * skx, 54.90 * sky, 20.70 * skx, 54.80 * sky);
		c.curveTo(14.399999999999999 * skx, 54.699999999999996 * sky, 11.50 * skx, 52.30 * sky, 8.40 * skx, 48.20 * sky);
		c.arcTo(31.60 * skx, 31.60 * sky, 0, 0, 1, 6.60* skx, 45.50* sky);
		c.curveTo(5.50 * skx, 43.50 * sky, 4.30 * skx, 41.50 * sky, 1.70 * skx, 40.80 * sky);
		c.curveTo(2.50 * skx, 38.90 * sky, 4.10 * skx, 38.60 * sky, 5.70 * skx, 38.00 * sky);
		c.arcTo(8.30 * skx, 8.30 * sky, 0, 0, 0, 2.30* skx, 35.80* sky);
		c.curveTo(1.40 * skx, 35.60 * sky, 1.30 * skx, 35.30 * sky, 2.00 * skx, 34.70 * sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 6.50* skx, 33.10* sky);
		c.lineTo(5.00* skx,32.20* sky);
		c.curveTo(1.70 * skx, 30.00 * sky, -0.70 * skx, 24.20 * sky, 0.20 * skx, 20.30 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 0.70* skx, 19.50* sky);
		c.curveTo(0.80 * skx, 19.40 * sky, 1.20 * skx, 19.70 * sky, 1.40 * skx, 19.90 * sky);
		c.curveTo(6.60 * skx, 25.70 * sky, 13.30 * skx, 28.30 * sky, 20.70 * skx, 29.60 * sky);
		c.arcTo(57.60 * skx, 57.60 * sky, 0, 0, 0, 29.90* skx, 30.20* sky);
		c.arcTo(8.80 * skx, 8.80 * sky, 0, 0, 0, 38.00* skx, 25.60* sky);
		c.curveTo(39.30 * skx, 23.20 * sky, 40.30 * skx, 20.60 * sky, 41.40 * skx, 18.10 * sky);
		c.curveTo(42.5 * skx, 15.600000000000001 * sky, 42.60 * skx, 14.70 * sky, 43.30 * skx, 13.10 * sky);
		c.curveTo(43.99999999999999 * skx, 11.5 * sky, 44.90 * skx, 10.10 * sky, 45.70 * skx, 8.40 * sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 44.90* skx, 4.10* sky);
		c.curveTo(45.90 * skx, 2.50 * sky, 47.40 * skx, 2.30 * sky, 49.20 * skx, 2.80 * sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 52.50* skx, -0.00* sky);
		c.curveTo(54.10 * skx, -0.00 * sky, 55.10 * skx, 1.00 * sky, 55.70 * skx, 2.90 * sky);
		c.curveTo(58.00 * skx, 2.40 * sky, 59.00 * skx, 2.70 * sky, 59.70 * skx, 4.00 * sky);
		c.curveTo(60.400000000000006 * skx, 5.3 * sky, 60.20 * skx, 6.70 * sky, 58.70 * skx, 8.40 * sky);
		c.close();
		c.moveTo(56.60 * skx, 13.90* sky);
		c.lineTo(57.10 * skx,13.90* sky);
		c.curveTo(57.30 * skx, 13.50 * sky, 57.80 * skx, 13.00 * sky, 57.80 * skx, 12.60 * sky);
		c.curveTo(57.8 * skx, 12.2 * sky, 57.10 * skx, 11.60 * sky, 56.70 * skx, 11.60 * sky);
		c.curveTo(56.300000000000004 * skx, 11.6 * sky, 55.80 * skx, 12.30 * sky, 55.70 * skx, 12.60 * sky);
		c.curveTo(55.60000000000001 * skx, 12.899999999999999 * sky, 56.30 * skx, 13.50 * sky, 56.60 * skx, 13.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m4ece7f31600f0f11b2bd3c8fb901c3f', m4ece7f31600f0f11b2bd3c8fb901c3f);
	m4ece7f31600f0f11b2bd3c8fb901c3f.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m4d41df9b1f5a6ae7d4e3b2608273352() {
		mxActor.call(this);
	};
	mxUtils.extend(m4d41df9b1f5a6ae7d4e3b2608273352, mxActor);
	m4d41df9b1f5a6ae7d4e3b2608273352.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 63;
		h1 = 69;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(4.30 * skx, 37.90* sky);
		c.lineTo(2.90* skx,37.20* sky);
		c.curveTo(1.40 * skx, 36.70 * sky, 0.90 * skx, 35.10 * sky, 2.10 * skx, 34.10 * sky);
		c.arcTo(16.60 * skx, 16.60 * sky, 0, 0, 1, 5.50* skx, 31.90* sky);
		c.lineTo(5.10* skx,31.50* sky);
		c.curveTo(2.80 * skx, 29.00 * sky, 0.80 * skx, 26.30 * sky, 0.10 * skx, 22.90 * sky);
		c.arcTo(18.50 * skx, 18.50 * sky, 0, 0, 1, -0.00* skx, 20.60* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 1.50* skx, 18.60* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 3.80* skx, 19.50* sky);
		c.arcTo(32.40 * skx, 32.40 * sky, 0, 0, 0, 8.10* skx, 23.50* sky);
		c.arcTo(33.10 * skx, 33.10 * sky, 0, 0, 0, 23.90* skx, 29.10* sky);
		c.arcTo(48.50 * skx, 48.50 * sky, 0, 0, 0, 30.50* skx, 29.30* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 35.60* skx, 26.60* sky);
		c.curveTo(37.40 * skx, 24.40 * sky, 38.20 * skx, 21.70 * sky, 39.20 * skx, 19.20 * sky);
		c.curveTo(40.2 * skx, 16.7 * sky, 40.90 * skx, 14.80 * sky, 41.90 * skx, 12.60 * sky);
		c.arcTo(13.20 * skx, 13.20 * sky, 0, 0, 1, 43.50* skx, 10.10* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 1, 44.00* skx, 2.90* sky);
		c.lineTo(44.20* skx,2.70* sky);
		c.curveTo(46.10 * skx, 2.40 * sky, 47.60 * skx, 1.10 * sky, 49.30 * skx, 0.30 * sky);
		c.curveTo(50.99999999999999 * skx, -0.5000000000000001 * sky, 52.80 * skx, 0.30 * sky, 54.10 * skx, 1.80 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 55.00* skx, 2.30* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 1, 58.30* skx, 9.40* sky);
		c.curveTo(58.20 * skx, 9.50 * sky, 58.10 * skx, 9.70 * sky, 58.30 * skx, 9.70 * sky);
		c.curveTo(58.49999999999999 * skx, 9.7 * sky, 59.30 * skx, 12.50 * sky, 59.90 * skx, 13.90 * sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 60.50* skx, 14.70* sky);
		c.curveTo(62.60 * skx, 16.50 * sky, 63.00 * skx, 18.90 * sky, 62.90 * skx, 21.50 * sky);
		c.curveTo(62.8 * skx, 24.1 * sky, 61.80 * skx, 23.10 * sky, 60.70 * skx, 22.50 * sky);
		c.lineTo(58.10* skx,21.40* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 56.10* skx, 22.40* sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 0, 55.30* skx, 28.50* sky);
		c.curveTo(55.80 * skx, 31.00 * sky, 56.50 * skx, 33.40 * sky, 56.90 * skx, 35.80 * sky);
		c.curveTo(58.60 * skx, 45.40 * sky, 54.50 * skx, 53.10 * sky, 45.70 * skx, 57.20 * sky);
		c.arcTo(30.90 * skx, 30.90 * sky, 0, 0, 1, 35.30* skx, 60.00* sky);
		c.lineTo(34.40 * skx,60.00* sky);
		c.lineTo(34.40* skx,62.80 * sky);
		c.lineTo(35.90* skx,63.00* sky);
		c.arcTo(10.20 * skx, 10.20 * sky, 0, 0, 1, 41.00* skx, 66.00* sky);
		c.curveTo(41.60 * skx, 66.80 * sky, 41.70 * skx, 67.60 * sky, 41.10 * skx, 68.20 * sky);
		c.curveTo(40.5 * skx, 68.80000000000001 * sky, 39.60 * skx, 68.70 * sky, 38.80 * skx, 67.90 * sky);
		c.curveTo(36.00 * skx, 65.00 * sky, 32.60 * skx, 65.00 * sky, 29.90 * skx, 67.90 * sky);
		c.curveTo(29.10 * skx, 68.70 * sky, 28.30 * skx, 68.80 * sky, 27.60 * skx, 68.20 * sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 27.70* skx, 66.00* sky);
		c.curveTo(28.70 * skx, 65.10 * sky, 29.80 * skx, 64.40 * sky, 30.80 * skx, 63.60 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 31.40* skx, 62.70* sky);
		c.arcTo(22.50 * skx, 22.50 * sky, 0, 0, 0, 31.40* skx, 60.10* sky);
		c.curveTo(29.70 * skx, 59.70 * sky, 28.00 * skx, 59.50 * sky, 26.40 * skx, 59.00 * sky);
		c.curveTo(17.90 * skx, 56.60 * sky, 11.50 * skx, 51.40 * sky, 6.70 * skx, 44.10 * sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 0, 4.00* skx, 41.60* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 3.50* skx, 38.60* sky);
		c.close();
		c.moveTo(59.70 * skx, 19.00* sky);
		c.lineTo(60.00* skx,18.70* sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 0, 58.30* skx, 16.70* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 1, 57.20* skx, 14.70* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 0, 55.30* skx, 11.30* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 0, 44.50* skx, 13.70* sky);
		c.arcTo(61.10 * skx, 61.10 * sky, 0, 0, 0, 41.90* skx, 20.10* sky);
		c.curveTo(40.90 * skx, 22.80 * sky, 40.00 * skx, 25.60 * sky, 38.20 * skx, 28.00 * sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 1, 30.50* skx, 32.20* sky);
		c.arcTo(41.50 * skx, 41.50 * sky, 0, 0, 1, 11.10* skx, 28.50* sky);
		c.arcTo(31.20 * skx, 31.20 * sky, 0, 0, 1, 3.50* skx, 23.80* sky);
		c.arcTo(13.40 * skx, 13.40 * sky, 0, 0, 0, 10.10* skx, 31.40* sky);
		c.curveTo(10.90 * skx, 31.80 * sky, 11.40 * skx, 32.20 * sky, 11.30 * skx, 33.10 * sky);
		c.curveTo(11.200000000000001 * skx, 34.0 * sky, 10.40 * skx, 34.20 * sky, 9.60 * skx, 34.30 * sky);
		c.lineTo(5.60* skx,35.10* sky);
		c.curveTo(6.70 * skx, 35.90 * sky, 7.70 * skx, 36.40 * sky, 8.60 * skx, 37.10 * sky);
		c.curveTo(9.5 * skx, 37.800000000000004 * sky, 9.40 * skx, 39.10 * sky, 8.10 * skx, 39.60 * sky);
		c.lineTo(7.00* skx,40.00* sky);
		c.curveTo(7.60 * skx, 40.80 * sky, 8.40 * skx, 41.50 * sky, 8.90 * skx, 42.30 * sky);
		c.arcTo(32.80 * skx, 32.80 * sky, 0, 0, 0, 17.40* skx, 51.60* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 0, 19.00* skx, 52.40* sky);
		c.arcTo(33.20 * skx, 33.20 * sky, 0, 0, 0, 24.50* skx, 53.30* sky);
		c.curveTo(30.20 * skx, 53.90 * sky, 34.50 * skx, 51.50 * sky, 37.00 * skx, 46.80 * sky);
		c.arcTo(16.60 * skx, 16.60 * sky, 0, 0, 0, 38.60* skx, 39.90* sky);
		c.curveTo(38.70 * skx, 38.70 * sky, 39.30 * skx, 38.10 * sky, 40.10 * skx, 38.10 * sky);
		c.curveTo(40.900000000000006 * skx, 38.1 * sky, 41.50 * skx, 38.90 * sky, 41.50 * skx, 40.00 * sky);
		c.arcTo(26.60 * skx, 26.60 * sky, 0, 0, 1, 41.20* skx, 42.80* sky);
		c.curveTo(40.20 * skx, 48.30 * sky, 37.70 * skx, 52.70 * sky, 32.30 * skx, 54.90 * sky);
		c.arcTo(52.60 * skx, 52.60 * sky, 0, 0, 1, 27.00* skx, 56.40* sky);
		c.lineTo(27.90* skx,56.60* sky);
		c.arcTo(24.30 * skx, 24.30 * sky, 0, 0, 0, 43.40* skx, 55.10* sky);
		c.curveTo(51.10 * skx, 51.80 * sky, 55.60 * skx, 46.20 * sky, 54.10 * skx, 36.70 * sky);
		c.curveTo(53.80 * skx, 34.20 * sky, 53.10 * skx, 31.90 * sky, 52.60 * skx, 29.50 * sky);
		c.curveTo(52.1 * skx, 27.1 * sky, 52.00 * skx, 23.40 * sky, 53.80 * skx, 20.60 * sky);
		c.curveTo(55.599999999999994 * skx, 17.800000000000004 * sky, 56.40 * skx, 18.10 * sky, 58.70 * skx, 18.70 * sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 59.70* skx, 19.00* sky);
		c.close();
		c.moveTo(48.70 * skx, 5.70* sky);
		c.curveTo(48.00 * skx, 5.50 * sky, 47.30 * skx, 5.00 * sky, 46.60 * skx, 5.10 * sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 45.00* skx, 6.10* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 45.20* skx, 7.60* sky);
		c.curveTo(45.50 * skx, 8.20 * sky, 46.20 * skx, 8.10 * sky, 46.80 * skx, 7.80 * sky);
		c.arcTo(10.80 * skx, 10.80 * sky, 0, 0, 1, 54.70* skx, 7.80* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 56.00* skx, 7.60* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 56.30* skx, 6.10* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 55.10* skx, 5.40* sky);
		c.arcTo(24.00 * skx, 24.00 * sky, 0, 0, 0, 52.70* skx, 5.80* sky);
		c.curveTo(52.20 * skx, 4.80 * sky, 52.40 * skx, 3.00 * sky, 50.60 * skx, 2.90 * sky);
		c.curveTo(48.800000000000004 * skx, 2.8 * sky, 49.20 * skx, 4.70 * sky, 48.70 * skx, 5.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(52.30 * skx, 12.80* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 54.40* skx, 14.90* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 1, 1, 50.10* skx, 14.90* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 52.30* skx, 12.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m4d41df9b1f5a6ae7d4e3b2608273352', m4d41df9b1f5a6ae7d4e3b2608273352);
	m4d41df9b1f5a6ae7d4e3b2608273352.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m29cae955b5d3f2baa983728f4bc5996() {
		mxActor.call(this);
	};
	mxUtils.extend(m29cae955b5d3f2baa983728f4bc5996, mxActor);
	m29cae955b5d3f2baa983728f4bc5996.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 72;
		h1 = 47;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(55.30 * skx, 39.80* sky);
		c.arcTo(16.50 * skx, 16.50 * sky, 0, 0, 1, 52.10* skx, 40.50* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 49.30* skx, 42.20* sky);
		c.arcTo(12.80 * skx, 12.80 * sky, 0, 0, 1, 39.30* skx, 46.90* sky);
		c.curveTo(36.80 * skx, 46.90 * sky, 36.00 * skx, 46.10 * sky, 35.60 * skx, 43.70 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 35.60* skx, 42.80* sky);
		c.arcTo(10.40 * skx, 10.40 * sky, 0, 0, 0, 34.50* skx, 37.60* sky);
		c.arcTo(35.10 * skx, 35.10 * sky, 0, 0, 1, 35.00* skx, 10.60* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 35.30* skx, 9.30* sky);
		c.curveTo(35.40 * skx, 7.60 * sky, 35.30 * skx, 5.80 * sky, 35.50 * skx, 4.10 * sky);
		c.curveTo(35.7 * skx, 2.3999999999999995 * sky, 36.90 * skx, 0.60 * sky, 39.30 * skx, 0.20 * sky);
		c.curveTo(45.60 * skx, -0.90 * sky, 53.10 * skx, 3.40 * sky, 55.10 * skx, 9.20 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 54.70* skx, 11.10* sky);
		c.curveTo(49.10 * skx, 17.20 * sky, 48.00 * skx, 26.70 * sky, 52.10 * skx, 34.70 * sky);
		c.curveTo(53.00 * skx, 36.40 * sky, 54.20 * skx, 38.10 * sky, 55.30 * skx, 39.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(31.50 * skx, 38.70* sky);
		c.curveTo(28.00 * skx, 40.10 * sky, 24.60 * skx, 41.60 * sky, 20.80 * skx, 41.30 * sky);
		c.curveTo(17.0 * skx, 40.99999999999999 * sky, 16.30 * skx, 39.40 * sky, 16.70 * skx, 36.40 * sky);
		c.arcTo(32.50 * skx, 32.50 * sky, 0, 0, 1, 17.90* skx, 31.70* sky);
		c.lineTo(15.30* skx,30.40* sky);
		c.curveTo(15.00 * skx, 30.20 * sky, 14.50 * skx, 29.90 * sky, 14.40 * skx, 29.50 * sky);
		c.arcTo(13.80 * skx, 13.80 * sky, 0, 0, 1, 14.40* skx, 20.10* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 15.40* skx, 19.10* sky);
		c.lineTo(18.70* skx,17.40* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 16.70* skx, 11.50* sky);
		c.curveTo(17.10 * skx, 9.60 * sky, 18.20 * skx, 8.30 * sky, 20.10 * skx, 8.40 * sky);
		c.arcTo(18.20 * skx, 18.20 * sky, 0, 0, 1, 25.30* skx, 9.20* sky);
		c.arcTo(55.10 * skx, 55.10 * sky, 0, 0, 1, 31.30* skx, 11.40* sky);
		c.arcTo(25.10 * skx, 25.10 * sky, 0, 0, 0, 27.60* skx, 25.20* sky);
		c.arcTo(27.10 * skx, 27.10 * sky, 0, 0, 0, 31.50* skx, 38.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(58.20 * skx, 11.60* sky);
		c.curveTo(62.50 * skx, 13.80 * sky, 66.60 * skx, 16.20 * sky, 69.80 * skx, 20.00 * sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 1, 70.60* skx, 29.10* sky);
		c.arcTo(13.60 * skx, 13.60 * sky, 0, 0, 1, 66.40* skx, 34.10* sky);
		c.curveTo(64.10 * skx, 35.70 * sky, 61.70 * skx, 36.90 * sky, 59.30 * skx, 38.40 * sky);
		c.curveTo(58.90 * skx, 38.60 * sky, 58.60 * skx, 38.60 * sky, 58.20 * skx, 38.10 * sky);
		c.curveTo(52.70 * skx, 31.00 * sky, 52.50 * skx, 18.90 * sky, 58.00 * skx, 11.80 * sky);
		c.curveTo(58.00 * skx, 11.70 * sky, 58.00 * skx, 11.70 * sky, 58.20 * skx, 11.60 * sky);
		c.close();
		c.moveTo(63.50 * skx, 27.50* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 66.20* skx, 24.90* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 63.50* skx, 22.10* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 60.70* skx, 24.80* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 63.50* skx, 27.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(10.80 * skx, 30.50* sky);
		c.curveTo(9.50 * skx, 31.40 * sky, 8.00 * skx, 32.70 * sky, 6.00 * skx, 33.00 * sky);
		c.curveTo(4.0 * skx, 33.3 * sky, 1.90 * skx, 32.50 * sky, 1.10 * skx, 30.40 * sky);
		c.arcTo(15.20 * skx, 15.20 * sky, 0, 0, 1, 1.00* skx, 19.30* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 1, 6.80* skx, 17.00* sky);
		c.lineTo(10.90* skx,19.00* sky);
		c.arcTo(42.40 * skx, 42.40 * sky, 0, 0, 0, 10.10* skx, 24.80* sky);
		c.arcTo(40.20 * skx, 40.20 * sky, 0, 0, 0, 10.80* skx, 30.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m29cae955b5d3f2baa983728f4bc5996', m29cae955b5d3f2baa983728f4bc5996);
	m29cae955b5d3f2baa983728f4bc5996.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m464ab5d9403d1927abfd3e7cd203fcf() {
		mxActor.call(this);
	};
	mxUtils.extend(m464ab5d9403d1927abfd3e7cd203fcf, mxActor);
	m464ab5d9403d1927abfd3e7cd203fcf.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 72;
		h1 = 49;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(16.80 * skx, 33.00* sky);
		c.lineTo(16.30* skx,32.60* sky);
		c.curveTo(14.60 * skx, 31.30 * sky, 14.30 * skx, 31.30 * sky, 12.50 * skx, 32.60 * sky);
		c.lineTo(9.60* skx,34.80* sky);
		c.curveTo(6.30 * skx, 36.80 * sky, 2.90 * skx, 35.90 * sky, 1.30 * skx, 32.30 * sky);
		c.arcTo(17.00 * skx, 17.00 * sky, 0, 0, 1, 1.30* skx, 19.20* sky);
		c.curveTo(2.70 * skx, 15.80 * sky, 6.20 * skx, 14.90 * sky, 9.30 * skx, 16.80 * sky);
		c.arcTo(35.50 * skx, 35.50 * sky, 0, 0, 1, 12.40* skx, 19.10* sky);
		c.curveTo(14.20 * skx, 20.50 * sky, 14.20 * skx, 20.50 * sky, 16.00 * skx, 19.00 * sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 1, 15.60* skx, 18.20* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 14.80* skx, 12.10* sky);
		c.curveTo(15.40 * skx, 9.70 * sky, 17.70 * skx, 8.40 * sky, 20.40 * skx, 8.60 * sky);
		c.arcTo(27.20 * skx, 27.20 * sky, 0, 0, 1, 28.90* skx, 10.70* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 31.30* skx, 10.40* sky);
		c.curveTo(31.50 * skx, 10.30 * sky, 31.60 * skx, 9.80 * sky, 31.70 * skx, 9.40 * sky);
		c.curveTo(31.799999999999997 * skx, 9.0 * sky, 31.80 * skx, 6.60 * sky, 32.00 * skx, 5.20 * sky);
		c.curveTo(32.50 * skx, 2.10 * sky, 34.00 * skx, 0.50 * sky, 37.20 * skx, 0.10 * sky);
		c.curveTo(43.80 * skx, -0.60 * sky, 51.10 * skx, 2.30 * sky, 54.60 * skx, 8.30 * sky);
		c.lineTo(54.90* skx,8.90* sky);
		c.curveTo(55.30 * skx, 10.60 * sky, 56.50 * skx, 11.30 * sky, 58.00 * skx, 12.00 * sky);
		c.arcTo(32.80 * skx, 32.80 * sky, 0, 0, 1, 69.20* skx, 20.30* sky);
		c.lineTo(70.00* skx,21.40* sky);
		c.curveTo(72.30 * skx, 24.50 * sky, 72.40 * skx, 26.90 * sky, 70.30 * skx, 30.10 * sky);
		c.arcTo(25.70 * skx, 25.70 * sky, 0, 0, 1, 58.60* skx, 39.80* sky);
		c.lineTo(51.90* skx,42.30* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 50.50* skx, 43.40* sky);
		c.arcTo(14.20 * skx, 14.20 * sky, 0, 0, 1, 40.10* skx, 48.70* sky);
		c.curveTo(36.80 * skx, 48.90 * sky, 35.00 * skx, 47.50 * sky, 34.80 * skx, 44.20 * sky);
		c.curveTo(34.599999999999994 * skx, 40.900000000000006 * sky, 34.00 * skx, 41.50 * sky, 32.20 * skx, 41.20 * sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 0, 29.20* skx, 41.40* sky);
		c.arcTo(14.70 * skx, 14.70 * sky, 0, 0, 1, 21.50* skx, 43.00* sky);
		c.curveTo(17.30 * skx, 42.60 * sky, 15.20 * skx, 39.90 * sky, 16.00 * skx, 35.80 * sky);
		c.curveTo(16.20 * skx, 34.90 * sky, 16.50 * skx, 34.00 * sky, 16.80 * skx, 33.00 * sky);
		c.close();
		c.moveTo(48.80 * skx, 11.90* sky);
		c.arcTo(31.70 * skx, 31.70 * sky, 0, 0, 0, 37.30* skx, 12.10* sky);
		c.curveTo(37.00 * skx, 12.10 * sky, 36.70 * skx, 12.50 * sky, 36.50 * skx, 12.80 * sky);
		c.curveTo(31.80 * skx, 21.60 * sky, 32.00 * skx, 30.30 * sky, 37.00 * skx, 38.90 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 37.90* skx, 39.60* sky);
		c.curveTo(39.90 * skx, 39.80 * sky, 42.00 * skx, 40.10 * sky, 44.10 * skx, 40.10 * sky);
		c.arcTo(46.30 * skx, 46.30 * sky, 0, 0, 0, 49.20* skx, 39.80* sky);
		c.arcTo(33.90 * skx, 33.90 * sky, 0, 0, 1, 48.80* skx, 11.90* sky);
		c.close();
		c.moveTo(57.50 * skx, 37.30* sky);
		c.lineTo(61.10* skx,35.20* sky);
		c.arcTo(20.50 * skx, 20.50 * sky, 0, 0, 0, 68.40* skx, 27.60* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 68.30* skx, 24.20* sky);
		c.arcTo(17.40 * skx, 17.40 * sky, 0, 0, 0, 63.10* skx, 18.60* sky);
		c.curveTo(61.20 * skx, 17.20 * sky, 59.10 * skx, 15.90 * sky, 57.00 * skx, 14.50 * sky);
		c.curveTo(53.60 * skx, 22.30 * sky, 54.00 * skx, 29.70 * sky, 57.50 * skx, 37.30 * sky);
		c.close();
		c.moveTo(25.90 * skx, 35.80* sky);
		c.lineTo(26.20* skx,35.50* sky);
		c.arcTo(31.50 * skx, 31.50 * sky, 0, 0, 1, 26.00* skx, 15.60* sky);
		c.lineTo(25.20* skx,16.00* sky);
		c.lineTo(16.60* skx,22.20* sky);
		c.lineTo(16.30* skx,22.70* sky);
		c.curveTo(15.60 * skx, 25.80 * sky, 15.30 * skx, 29.20 * sky, 18.60 * skx, 30.80 * sky);
		c.curveTo(18.80 * skx, 30.90 * sky, 19.00 * skx, 31.20 * sky, 19.30 * skx, 31.30 * sky);
		c.close();
		c.moveTo(13.10 * skx, 23.10* sky);
		c.lineTo(10.50* skx,21.10* sky);
		c.lineTo(7.20* skx,19.00* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 4.10* skx, 20.00* sky);
		c.arcTo(12.40 * skx, 12.40 * sky, 0, 0, 0, 3.20* skx, 23.30* sky);
		c.arcTo(13.90 * skx, 13.90 * sky, 0, 0, 0, 4.10* skx, 31.60* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 7.20* skx, 32.80* sky);
		c.arcTo(16.70 * skx, 16.70 * sky, 0, 0, 0, 9.60* skx, 31.20* sky);
		c.curveTo(10.80 * skx, 30.40 * sky, 12.00 * skx, 29.40 * sky, 13.10 * skx, 28.50 * sky);
		c.close();
		c.moveTo(34.40 * skx, 9.60* sky);
		c.curveTo(40.40 * skx, 8.50 * sky, 46.10 * skx, 8.10 * sky, 52.00 * skx, 9.70 * sky);
		c.curveTo(49.20 * skx, 4.60 * sky, 41.80 * skx, 1.90 * sky, 36.50 * skx, 3.20 * sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 35.10* skx, 4.70* sky);
		c.curveTo(34.90 * skx, 6.30 * sky, 34.70 * skx, 7.80 * sky, 34.40 * skx, 9.60 * sky);
		c.close();
		c.moveTo(51.80 * skx, 12.60* sky);
		c.curveTo(47.80 * skx, 20.00 * sky, 47.90 * skx, 31.70 * sky, 52.20 * skx, 39.10 * sky);
		c.lineTo(54.40* skx,38.50* sky);
		c.lineTo(54.70* skx,38.20* sky);
		c.curveTo(51.00 * skx, 30.10 * sky, 50.60 * skx, 21.90 * sky, 54.30 * skx, 13.50 * sky);
		c.lineTo(53.00* skx,13.00* sky);
		c.close();
		c.moveTo(33.10 * skx, 13.00* sky);
		c.lineTo(32.70 * skx,13.00* sky);
		c.arcTo(11.70 * skx, 11.70 * sky, 0, 0, 0, 30.70* skx, 13.60* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 29.50* skx, 14.80* sky);
		c.arcTo(27.50 * skx, 27.50 * sky, 0, 0, 0, 29.20* skx, 35.50* sky);
		c.curveTo(30.00 * skx, 37.50 * sky, 31.50 * skx, 38.00 * sky, 33.40 * skx, 38.50 * sky);
		c.curveTo(29.20 * skx, 30.00 * sky, 29.30 * skx, 21.50 * sky, 33.10 * skx, 13.00 * sky);
		c.close();
		c.moveTo(18.40 * skx, 17.00* sky);
		c.lineTo(25.70* skx,12.40* sky);
		c.lineTo(19.60* skx,11.50* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 17.40* skx, 13.20* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 18.40* skx, 17.00* sky);
		c.close();
		c.moveTo(19.00 * skx, 34.90* sky);
		c.arcTo(18.70 * skx, 18.70 * sky, 0, 0, 0, 18.90* skx, 38.20* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 20.10* skx, 39.70* sky);
		c.arcTo(10.00 * skx, 10.00 * sky, 0, 0, 0, 26.70* skx, 39.40* sky);
		c.close();
		c.moveTo(37.50 * skx, 42.70* sky);
		c.curveTo(37.50 * skx, 45.40 * sky, 38.10 * skx, 46.10 * sky, 40.80 * skx, 45.80 * sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 0, 46.70* skx, 43.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(62.40 * skx, 27.20* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 60.30* skx, 25.00* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 1, 1, 64.60* skx, 25.20* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 62.40* skx, 27.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m464ab5d9403d1927abfd3e7cd203fcf', m464ab5d9403d1927abfd3e7cd203fcf);
	m464ab5d9403d1927abfd3e7cd203fcf.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mf110fd8a4511c04173189ede6fa0874() {
		mxActor.call(this);
	};
	mxUtils.extend(mf110fd8a4511c04173189ede6fa0874, mxActor);
	mf110fd8a4511c04173189ede6fa0874.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 60;
		h1 = 66;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(15.00 * skx, 35.70* sky);
		c.arcTo(15.00 * skx, 15.00 * sky, 0, 1, 1, 0.00* skx, 50.60* sky);
		c.arcTo(15.00 * skx, 15.00 * sky, 0, 0, 1, 15.00* skx, 35.70* sky);
		c.close();
		c.moveTo(12.10 * skx, 55.60* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 1, 0, 12.20* skx, 42.80* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 1, 0, 12.10* skx, 55.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(38.20 * skx, 57.20* sky);
		c.lineTo(33.10* skx,55.90* sky);
		c.curveTo(32.40 * skx, 55.80 * sky, 32.20 * skx, 55.40 * sky, 32.30 * skx, 54.60 * sky);
		c.curveTo(33.70 * skx, 47.80 * sky, 31.90 * skx, 42.00 * sky, 26.80 * skx, 37.30 * sky);
		c.curveTo(26.00 * skx, 36.70 * sky, 25.80 * skx, 36.20 * sky, 26.40 * skx, 35.30 * sky);
		c.arcTo(14.30 * skx, 14.30 * sky, 0, 0, 1, 52.70* skx, 41.30* sky);
		c.curveTo(53.60 * skx, 47.90 * sky, 48.80 * skx, 54.90 * sky, 42.40 * skx, 56.40 * sky);
		c.close();
		c.moveTo(42.10 * skx, 34.20* sky);
		c.arcTo(14.50 * skx, 14.50 * sky, 0, 0, 0, 39.50* skx, 35.30* sky);
		c.curveTo(36.50 * skx, 37.20 * sky, 36.30 * skx, 41.90 * sky, 39.00 * skx, 44.70 * sky);
		c.curveTo(41.7 * skx, 47.50000000000001 * sky, 44.20 * skx, 47.60 * sky, 46.50 * skx, 45.90 * sky);
		c.curveTo(48.8 * skx, 44.199999999999996 * sky, 48.90 * skx, 42.20 * sky, 48.40 * skx, 39.70 * sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 0, 42.10* skx, 34.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(52.20 * skx, 32.60* sky);
		c.arcTo(17.40 * skx, 17.40 * sky, 0, 0, 0, 36.80* skx, 25.70* sky);
		c.arcTo(15.00 * skx, 15.00 * sky, 0, 0, 1, 38.70* skx, 20.30* sky);
		c.arcTo(23.60 * skx, 23.60 * sky, 0, 0, 1, 49.90* skx, 9.90* sky);
		c.arcTo(11.90 * skx, 11.90 * sky, 0, 0, 1, 54.10* skx, 8.80* sky);
		c.curveTo(57.00 * skx, 8.60 * sky, 58.50 * skx, 9.80 * sky, 59.30 * skx, 12.60 * sky);
		c.arcTo(15.40 * skx, 15.40 * sky, 0, 0, 1, 59.30* skx, 21.10* sky);
		c.arcTo(22.70 * skx, 22.70 * sky, 0, 0, 1, 52.60* skx, 32.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.40 * skx, 26.60* sky);
		c.curveTo(31.20 * skx, 27.30 * sky, 29.90 * skx, 28.00 * sky, 28.80 * skx, 28.80 * sky);
		c.arcTo(14.40 * skx, 14.40 * sky, 0, 0, 0, 24.00* skx, 33.80* sky);
		c.curveTo(23.50 * skx, 34.80 * sky, 23.00 * skx, 34.70 * sky, 22.10 * skx, 34.30 * sky);
		c.arcTo(17.60 * skx, 17.60 * sky, 0, 0, 0, 7.20* skx, 34.60* sky);
		c.lineTo(5.40* skx,35.50* sky);
		c.curveTo(3.60 * skx, 30.40 * sky, 4.00 * skx, 25.70 * sky, 7.10 * skx, 21.50 * sky);
		c.arcTo(13.50 * skx, 13.50 * sky, 0, 0, 1, 21.20* skx, 16.00* sky);
		c.curveTo(27.10 * skx, 17.10 * sky, 30.80 * skx, 20.90 * sky, 32.40 * skx, 26.60 * sky);
		c.close();
		c.moveTo(17.60 * skx, 28.50* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 0, 22.50* skx, 26.80* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 22.30* skx, 19.80* sky);
		c.curveTo(19.60 * skx, 17.70 * sky, 14.70 * skx, 18.30 * sky, 12.50 * skx, 20.90 * sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 13.00* skx, 26.90* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 0, 17.60* skx, 28.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(34.40 * skx, 23.00* sky);
		c.curveTo(33.40 * skx, 21.60 * sky, 32.50 * skx, 20.10 * sky, 31.50 * skx, 18.80 * sky);
		c.arcTo(16.70 * skx, 16.70 * sky, 0, 0, 0, 21.40* skx, 13.10* sky);
		c.curveTo(20.80 * skx, 13.00 * sky, 20.60 * skx, 12.90 * sky, 20.70 * skx, 12.20 * sky);
		c.arcTo(20.60 * skx, 20.60 * sky, 0, 0, 1, 23.80* skx, 2.90* sky);
		c.curveTo(25.90 * skx, -0.20 * sky, 28.70 * skx, -0.80 * sky, 31.90 * skx, 1.20 * sky);
		c.curveTo(35.099999999999994 * skx, 3.2 * sky, 37.70 * skx, 7.30 * sky, 39.00 * skx, 11.50 * sky);
		c.curveTo(39.10 * skx, 11.70 * sky, 39.10 * skx, 11.90 * sky, 39.20 * skx, 12.10 * sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 38.60* skx, 15.40* sky);
		c.arcTo(18.70 * skx, 18.70 * sky, 0, 0, 0, 34.90* skx, 22.00* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 1, 34.40* skx, 23.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(12.10 * skx, 52.70* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 8.60* skx, 49.10* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 1, 12.10* skx, 45.70* sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 1, 15.70* skx, 49.30* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 12.10* skx, 52.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(42.30 * skx, 37.30* sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 1, 45.30* skx, 39.50* sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 1, 45.20* skx, 43.20* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 42.50* skx, 43.80* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 1, 40.20* skx, 38.80* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 42.30* skx, 37.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(17.10 * skx, 25.70* sky);
		c.lineTo(15.40* skx,25.10* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 15.10* skx, 22.40* sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 1, 20.50* skx, 22.00* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 20.80* skx, 24.50* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 17.10* skx, 25.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mf110fd8a4511c04173189ede6fa0874', mf110fd8a4511c04173189ede6fa0874);
	mf110fd8a4511c04173189ede6fa0874.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m4fc90b4eb8c763d3727bcf0378f7244() {
		mxActor.call(this);
	};
	mxUtils.extend(m4fc90b4eb8c763d3727bcf0378f7244, mxActor);
	m4fc90b4eb8c763d3727bcf0378f7244.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 60;
		h1 = 66;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(18.60 * skx, 14.30* sky);
		c.arcTo(21.10 * skx, 21.10 * sky, 0, 0, 1, 21.10* skx, 5.10* sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 1, 22.80* skx, 2.60* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 30.80* skx, 0.60* sky);
		c.arcTo(15.70 * skx, 15.70 * sky, 0, 0, 1, 38.30* skx, 7.70* sky);
		c.arcTo(49.00 * skx, 49.00 * sky, 0, 0, 1, 40.40* skx, 12.30* sky);
		c.lineTo(41.20* skx,11.50* sky);
		c.arcTo(21.10 * skx, 21.10 * sky, 0, 0, 1, 51.60* skx, 6.00* sky);
		c.curveTo(55.30 * skx, 5.40 * sky, 58.00 * skx, 6.90 * sky, 59.20 * skx, 10.50 * sky);
		c.curveTo(60.400000000000006 * skx, 14.1 * sky, 60.00 * skx, 17.40 * sky, 59.00 * skx, 20.90 * sky);
		c.arcTo(23.50 * skx, 23.50 * sky, 0, 0, 1, 52.20* skx, 31.80* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 51.50* skx, 32.50* sky);
		c.arcTo(15.70 * skx, 15.70 * sky, 0, 0, 1, 50.30* skx, 51.60* sky);
		c.curveTo(46.80 * skx, 55.70 * sky, 39.90 * skx, 59.10 * sky, 31.60 * skx, 55.50 * sky);
		c.lineTo(31.10* skx,56.40* sky);
		c.arcTo(16.60 * skx, 16.60 * sky, 0, 0, 1, 14.20* skx, 65.50* sky);
		c.curveTo(6.70 * skx, 64.20 * sky, 1.10 * skx, 58.70 * sky, 0.20 * skx, 51.40 * sky);
		c.arcTo(15.90 * skx, 15.90 * sky, 0, 0, 1, 5.10* skx, 37.30* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 5.50* skx, 36.00* sky);
		c.arcTo(15.70 * skx, 15.70 * sky, 0, 0, 1, 18.20* skx, 14.40* sky);
		c.close();
		c.moveTo(16.30 * skx, 62.70* sky);
		c.arcTo(13.50 * skx, 13.50 * sky, 0, 1, 0, 16.50* skx, 35.70* sky);
		c.arcTo(13.50 * skx, 13.50 * sky, 0, 1, 0, 16.30* skx, 62.70* sky);
		c.close();
		c.moveTo(32.50 * skx, 52.60* sky);
		c.arcTo(12.60 * skx, 12.60 * sky, 0, 0, 0, 50.00* skx, 47.00* sky);
		c.arcTo(13.00 * skx, 13.00 * sky, 0, 0, 0, 43.50* skx, 29.50* sky);
		c.curveTo(36.90 * skx, 26.80 * sky, 28.90 * skx, 30.10 * sky, 26.70 * skx, 36.40 * sky);
		c.arcTo(16.60 * skx, 16.60 * sky, 0, 0, 1, 32.50* skx, 52.60* sky);
		c.close();
		c.moveTo(49.60 * skx, 30.40* sky);
		c.arcTo(22.20 * skx, 22.20 * sky, 0, 0, 0, 56.70* skx, 18.50* sky);
		c.arcTo(13.10 * skx, 13.10 * sky, 0, 0, 0, 56.20* skx, 10.90* sky);
		c.curveTo(55.50 * skx, 9.20 * sky, 54.80 * skx, 8.70 * sky, 53.00 * skx, 8.80 * sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 0, 50.10* skx, 9.40* sky);
		c.arcTo(21.30 * skx, 21.30 * sky, 0, 0, 0, 37.40* skx, 22.10* sky);
		c.arcTo(32.50 * skx, 32.50 * sky, 0, 0, 0, 36.30* skx, 25.80* sky);
		c.arcTo(15.80 * skx, 15.80 * sky, 0, 0, 1, 49.60* skx, 30.40* sky);
		c.close();
		c.moveTo(8.20 * skx, 35.00* sky);
		c.arcTo(16.50 * skx, 16.50 * sky, 0, 0, 1, 24.20* skx, 34.80* sky);
		c.arcTo(16.20 * skx, 16.20 * sky, 0, 0, 1, 32.40* skx, 26.90* sky);
		c.arcTo(12.70 * skx, 12.70 * sky, 0, 0, 0, 9.60* skx, 22.50* sky);
		c.curveTo(6.80 * skx, 26.30 * sky, 6.40 * skx, 30.50 * sky, 8.20 * skx, 35.00 * sky);
		c.close();
		c.moveTo(21.50 * skx, 14.30* sky);
		c.arcTo(16.40 * skx, 16.40 * sky, 0, 0, 1, 28.90* skx, 17.20* sky);
		c.arcTo(16.90 * skx, 16.90 * sky, 0, 0, 1, 33.90* skx, 23.20* sky);
		c.arcTo(52.50 * skx, 52.50 * sky, 0, 0, 1, 36.90* skx, 16.90* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 0, 37.40* skx, 12.50* sky);
		c.curveTo(36.10 * skx, 9.00 * sky, 34.30 * skx, 5.90 * sky, 31.00 * skx, 3.90 * sky);
		c.curveTo(27.700000000000003 * skx, 1.8999999999999995 * sky, 26.10 * skx, 2.60 * sky, 24.30 * skx, 5.40 * sky);
		c.curveTo(22.5 * skx, 8.200000000000001 * sky, 21.80 * skx, 11.10 * sky, 21.50 * skx, 14.30 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(13.60 * skx, 54.20* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 1, 7.10* skx, 47.80* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 1, 13.50* skx, 41.40* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 1, 1, 13.60* skx, 54.20* sky);
		c.close();
		c.moveTo(13.50 * skx, 51.30* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 17.10* skx, 47.80* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 13.50* skx, 44.20* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 13.50* skx, 51.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(48.60 * skx, 39.90* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 1, 45.80* skx, 44.90* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 40.30* skx, 44.50* sky);
		c.arcTo(7.50 * skx, 7.50 * sky, 0, 0, 1, 37.10* skx, 37.30* sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 1, 45.40* skx, 34.00* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 48.60* skx, 39.90* sky);
		c.close();
		c.moveTo(39.90 * skx, 38.70* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 41.80* skx, 42.10* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 44.40* skx, 42.40* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 45.80* skx, 40.10* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 43.70* skx, 36.30* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 41.10* skx, 36.10* sky);
		c.curveTo(40.20 * skx, 36.60 * sky, 39.90 * skx, 37.40 * sky, 39.90 * skx, 38.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(18.80 * skx, 28.50* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 1, 14.50* skx, 27.10* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 1, 13.90* skx, 20.90* sky);
		c.curveTo(16.20 * skx, 18.20 * sky, 21.20 * skx, 17.70 * sky, 23.90 * skx, 19.90 * sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 1, 24.00* skx, 26.80* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 18.80* skx, 28.50* sky);
		c.close();
		c.moveTo(19.00 * skx, 25.80* sky);
		c.arcTo(18.60 * skx, 18.60 * sky, 0, 0, 0, 21.60* skx, 25.00* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 22.80* skx, 23.20* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 21.40* skx, 21.60* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 0, 17.10* skx, 21.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 15.70* skx, 23.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 17.50* skx, 25.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m4fc90b4eb8c763d3727bcf0378f7244', m4fc90b4eb8c763d3727bcf0378f7244);
	m4fc90b4eb8c763d3727bcf0378f7244.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m12098aa6faf93414fb58c5293a66030() {
		mxActor.call(this);
	};
	mxUtils.extend(m12098aa6faf93414fb58c5293a66030, mxActor);
	m12098aa6faf93414fb58c5293a66030.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 58;
		h1 = 58;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(34.50 * skx, 23.80* sky);
		c.lineTo(34.50* skx,30.70 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 34.90* skx, 31.40* sky);
		c.lineTo(36.30* skx,32.30* sky);
		c.curveTo(37.60 * skx, 32.90 * sky, 38.50 * skx, 33.90 * sky, 38.30 * skx, 35.30 * sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 35.90* skx, 38.10* sky);
		c.lineTo(34.50* skx,38.50* sky);
		c.curveTo(34.40 * skx, 41.00 * sky, 34.30 * skx, 43.50 * sky, 34.10 * skx, 46.00 * sky);
		c.arcTo(40.70 * skx, 40.70 * sky, 0, 0, 1, 33.50* skx, 52.00* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 1, 1, 18.30* skx, 47.90* sky);
		c.curveTo(19.20 * skx, 45.40 * sky, 20.50 * skx, 42.90 * sky, 21.50 * skx, 40.40 * sky);
		c.curveTo(21.80 * skx, 39.70 * sky, 22.00 * skx, 38.90 * sky, 22.30 * skx, 38.20 * sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 1, 21.20* skx, 37.50* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 21.20* skx, 32.70* sky);
		c.curveTo(23.30 * skx, 31.60 * sky, 23.90 * skx, 30.00 * sky, 23.80 * skx, 27.80 * sky);
		c.curveTo(23.700000000000003 * skx, 25.6 * sky, 23.70 * skx, 25.20 * sky, 23.70 * skx, 23.80 * sky);
		c.lineTo(2.00 * skx,23.80* sky);
		c.curveTo(0.20 * skx, 23.80 * sky, -0.30 * skx, 23.20 * sky, 0.10 * skx, 21.50 * sky);
		c.arcTo(11.40 * skx, 11.40 * sky, 0, 0, 1, 3.90* skx, 15.70* sky);
		c.curveTo(6.80 * skx, 13.20 * sky, 10.20 * skx, 11.50 * sky, 13.40 * skx, 9.50 * sky);
		c.lineTo(23.30* skx,3.40* sky);
		c.arcTo(18.60 * skx, 18.60 * sky, 0, 0, 0, 25.50* skx, 1.50* sky);
		c.curveTo(27.90 * skx, -0.50 * sky, 30.20 * skx, -0.50 * sky, 32.50 * skx, 1.50 * sky);
		c.curveTo(34.8 * skx, 3.5 * sky, 40.40 * skx, 6.90 * sky, 44.40 * skx, 9.30 * sky);
		c.curveTo(48.4 * skx, 11.700000000000001 * sky, 50.20 * skx, 12.70 * sky, 53.00 * skx, 14.60 * sky);
		c.arcTo(12.10 * skx, 12.10 * sky, 0, 0, 1, 58.10* skx, 21.40* sky);
		c.curveTo(58.50 * skx, 23.20 * sky, 58.10 * skx, 23.80 * sky, 56.30 * skx, 23.80 * sky);
		c.lineTo(34.50 * skx,23.80* sky);
		c.close();
		c.moveTo(19.80 * skx, 8.90* sky);
		c.lineTo(9.30* skx,15.10* sky);
		c.arcTo(27.10 * skx, 27.10 * sky, 0, 0, 0, 4.70* skx, 18.70* sky);
		c.arcTo(11.10 * skx, 11.10 * sky, 0, 0, 0, 3.10* skx, 21.10* sky);
		c.lineTo(11.10 * skx,21.10* sky);
		c.curveTo(10.20 * skx, 18.60 * sky, 10.30 * skx, 16.30 * sky, 12.40 * skx, 14.50 * sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 1, 18.40* skx, 13.80* sky);
		c.curveTo(21.40 * skx, 15.50 * sky, 21.60 * skx, 18.10 * sky, 20.60 * skx, 21.10 * sky);
		c.lineTo(54.90 * skx,21.10* sky);
		c.curveTo(54.50 * skx, 19.10 * sky, 53.00 * skx, 18.00 * sky, 51.60 * skx, 16.90 * sky);
		c.lineTo(50.50* skx,17.70* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 1, 44.70* skx, 17.60* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 1, 42.50* skx, 12.30* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 41.70* skx, 10.80* sky);
		c.arcTo(67.70 * skx, 67.70 * sky, 0, 0, 1, 30.70* skx, 3.50* sky);
		c.curveTo(29.30 * skx, 2.20 * sky, 27.80 * skx, 2.50 * sky, 26.80 * skx, 4.20 * sky);
		c.curveTo(29.70 * skx, 5.50 * sky, 31.00 * skx, 7.90 * sky, 30.20 * skx, 10.80 * sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 24.50* skx, 14.50* sky);
		c.curveTo(21.80 * skx, 14.30 * sky, 20.00 * skx, 12.30 * sky, 19.80 * skx, 8.90 * sky);
		c.close();
		c.moveTo(31.60 * skx, 37.80* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 1, 27.60* skx, 38.10* sky);
		c.curveTo(26.00 * skx, 37.60 * sky, 25.20 * skx, 38.00 * sky, 24.60 * skx, 39.50 * sky);
		c.arcTo(30.10 * skx, 30.10 * sky, 0, 0, 1, 23.30* skx, 43.10* sky);
		c.curveTo(22.50 * skx, 45.00 * sky, 21.60 * skx, 46.80 * sky, 20.80 * skx, 48.70 * sky);
		c.arcTo(5.30 * skx, 5.30 * sky, 0, 0, 0, 27.60* skx, 55.30* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 31.00* skx, 50.90* sky);
		c.quadTo(31.50 * skx, 47.80* sky, 31.60 * skx, 44.60 * sky);
		c.curveTo(31.70 * skx, 42.30 * sky, 31.60 * skx, 40.10 * sky, 31.60 * skx, 37.80 * sky);
		c.close();
		c.moveTo(31.70 * skx, 23.90* sky);
		c.lineTo(26.40 * skx,23.90* sky);
		c.lineTo(26.40* skx,30.40 * sky);
		c.lineTo(31.70 * skx,30.40* sky);
		c.close();
		c.moveTo(22.50 * skx, 35.10* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 25.50* skx, 35.30* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 27.80* skx, 35.40* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 30.50* skx, 35.30* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 32.70* skx, 35.30* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 35.70* skx, 35.10* sky);
		c.curveTo(35.60 * skx, 35.00 * sky, 35.60 * skx, 34.90 * sky, 35.50 * skx, 34.90 * sky);
		c.curveTo(35.4 * skx, 34.9 * sky, 32.30 * skx, 32.70 * sky, 30.10 * skx, 33.10 * sky);
		c.arcTo(7.60 * skx, 7.60 * sky, 0, 0, 1, 27.10* skx, 33.10* sky);
		c.curveTo(25.10 * skx, 32.70 * sky, 23.90 * skx, 34.00 * sky, 22.50 * skx, 35.10 * sky);
		c.close();
		c.moveTo(15.90 * skx, 15.90* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 13.20* skx, 18.50* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 15.90* skx, 21.20* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 18.50* skx, 18.50* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 15.90* skx, 15.90* sky);
		c.close();
		c.moveTo(25.20 * skx, 6.60* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 22.50* skx, 9.30* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 25.10* skx, 11.90* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 27.80* skx, 9.30* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 25.20* skx, 6.60* sky);
		c.close();
		c.moveTo(49.20 * skx, 15.20* sky);
		c.lineTo(45.20* skx,12.80* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 49.20* skx, 15.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(31.80 * skx, 14.50* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 1, 39.70* skx, 14.50* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 1, 1, 31.80* skx, 14.50* sky);
		c.close();
		c.moveTo(37.00 * skx, 14.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 35.70* skx, 13.20* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 34.40* skx, 14.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 35.80* skx, 15.90* sky);
		c.curveTo(36.60 * skx, 15.90 * sky, 37.00 * skx, 15.40 * sky, 37.00 * skx, 14.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m12098aa6faf93414fb58c5293a66030', m12098aa6faf93414fb58c5293a66030);
	m12098aa6faf93414fb58c5293a66030.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m45e9249821b108f0d9b71f1eadd558e() {
		mxActor.call(this);
	};
	mxUtils.extend(m45e9249821b108f0d9b71f1eadd558e, mxActor);
	m45e9249821b108f0d9b71f1eadd558e.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 58;
		h1 = 58;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(54.40 * skx, 8.00* sky);
		c.curveTo(54.60 * skx, 10.90 * sky, 53.30 * skx, 13.50 * sky, 50.90 * skx, 15.70 * sky);
		c.curveTo(48.5 * skx, 17.9 * sky, 47.40 * skx, 19.60 * sky, 45.70 * skx, 21.60 * sky);
		c.arcTo(53.40 * skx, 53.40 * sky, 0, 0, 0, 37.80* skx, 34.20* sky);
		c.arcTo(29.80 * skx, 29.80 * sky, 0, 0, 1, 27.10* skx, 46.60* sky);
		c.arcTo(22.30 * skx, 22.30 * sky, 0, 0, 1, 11.80* skx, 50.20* sky);
		c.arcTo(63.10 * skx, 63.10 * sky, 0, 0, 1, 3.20* skx, 48.20* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 2.10* skx, 47.30* sky);
		c.curveTo(0.80 * skx, 43.70 * sky, -0.30 * skx, 40.10 * sky, 0.10 * skx, 36.20 * sky);
		c.arcTo(22.20 * skx, 22.20 * sky, 0, 0, 1, 4.50* skx, 24.30* sky);
		c.arcTo(32.00 * skx, 32.00 * sky, 0, 0, 1, 15.70* skx, 15.50* sky);
		c.curveTo(21.90 * skx, 12.30 * sky, 28.00 * skx, 9.00 * sky, 34.10 * skx, 5.60 * sky);
		c.curveTo(36.80 * skx, 4.20 * sky, 39.30 * skx, 2.40 * sky, 42.00 * skx, 1.00 * sky);
		c.arcTo(9.60 * skx, 9.60 * sky, 0, 0, 1, 50.60* skx, 1.00* sky);
		c.curveTo(53.50 * skx, 2.40 * sky, 54.50 * skx, 4.10 * sky, 54.40 * skx, 8.00 * sky);
		c.close();
		c.moveTo(30.40 * skx, 21.20* sky);
		c.lineTo(26.80* skx,22.00* sky);
		c.curveTo(21.20 * skx, 23.50 * sky, 16.40 * skx, 26.20 * sky, 13.00 * skx, 31.00 * sky);
		c.arcTo(9.90 * skx, 9.90 * sky, 0, 0, 0, 10.70* skx, 38.20* sky);
		c.curveTo(10.80 * skx, 39.60 * sky, 11.10 * skx, 39.90 * sky, 12.50 * skx, 39.80 * sky);
		c.arcTo(12.70 * skx, 12.70 * sky, 0, 0, 0, 20.60* skx, 36.60* sky);
		c.arcTo(28.70 * skx, 28.70 * sky, 0, 0, 0, 28.70* skx, 25.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(57.00 * skx, 8.10* sky);
		c.curveTo(58.90 * skx, 12.60 * sky, 58.90 * skx, 16.80 * sky, 55.60 * skx, 20.30 * sky);
		c.curveTo(50.70 * skx, 25.50 * sky, 47.60 * skx, 31.80 * sky, 44.90 * skx, 38.40 * sky);
		c.arcTo(38.60 * skx, 38.60 * sky, 0, 0, 1, 37.00* skx, 51.20* sky);
		c.curveTo(33.80 * skx, 54.40 * sky, 30.30 * skx, 57.00 * sky, 25.70 * skx, 57.80 * sky);
		c.curveTo(18.10 * skx, 59.20 * sky, 11.00 * skx, 58.20 * sky, 5.20 * skx, 52.50 * sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 1, 4.70* skx, 51.50* sky);
		c.lineTo(8.40* skx,52.40* sky);
		c.curveTo(17.50 * skx, 54.20 * sky, 25.60 * skx, 52.20 * sky, 32.50 * skx, 45.70 * sky);
		c.arcTo(39.30 * skx, 39.30 * sky, 0, 0, 0, 41.40* skx, 32.90* sky);
		c.arcTo(41.00 * skx, 41.00 * sky, 0, 0, 1, 48.40* skx, 22.40* sky);
		c.curveTo(50.20 * skx, 20.30 * sky, 52.10 * skx, 18.30 * sky, 54.00 * skx, 16.30 * sky);
		c.arcTo(9.40 * skx, 9.40 * sky, 0, 0, 0, 56.90* skx, 8.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 57.00* skx, 8.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(19.80 * skx, 29.20* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 18.50* skx, 30.50* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 17.20* skx, 29.10* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 18.60* skx, 27.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 19.80* skx, 29.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(22.50 * skx, 26.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 21.10* skx, 27.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 19.90* skx, 26.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 21.30* skx, 25.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 22.50* skx, 26.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(13.30 * skx, 35.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 14.60* skx, 34.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 15.90* skx, 35.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 14.60* skx, 37.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 13.30* skx, 35.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(26.50 * skx, 25.20* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 25.20* skx, 26.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 1, 1, 25.10* skx, 24.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 26.50* skx, 25.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(25.10 * skx, 29.20* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 23.90* skx, 30.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 1, 1, 23.90* skx, 27.90* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 25.10* skx, 29.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(21.20 * skx, 33.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 21.10* skx, 30.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 22.50* skx, 31.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 21.20* skx, 33.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(18.60 * skx, 33.20* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 19.80* skx, 34.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 18.50* skx, 35.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 17.30* skx, 34.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 18.60* skx, 33.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(17.20 * skx, 31.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 15.90* skx, 33.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 14.60* skx, 31.90* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 15.90* skx, 30.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 17.20* skx, 31.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m45e9249821b108f0d9b71f1eadd558e', m45e9249821b108f0d9b71f1eadd558e);
	m45e9249821b108f0d9b71f1eadd558e.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m807513de8b5509963f8e4f9411ea260() {
		mxActor.call(this);
	};
	mxUtils.extend(m807513de8b5509963f8e4f9411ea260, mxActor);
	m807513de8b5509963f8e4f9411ea260.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 58;
		h1 = 58;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(17.60 * skx, 58.30* sky);
		c.curveTo(13.40 * skx, 58.40 * sky, 7.90 * skx, 55.80 * sky, 3.70 * skx, 50.70 * sky);
		c.arcTo(17.30 * skx, 17.30 * sky, 0, 0, 1, 1.50* skx, 45.70* sky);
		c.curveTo(-1.10 * skx, 38.20 * sky, -0.30 * skx, 31.10 * sky, 4.30 * skx, 24.60 * sky);
		c.arcTo(24.80 * skx, 24.80 * sky, 0, 0, 1, 13.80* skx, 16.50* sky);
		c.lineTo(30.40* skx,7.70* sky);
		c.curveTo(33.50 * skx, 6.00 * sky, 36.50 * skx, 4.00 * sky, 39.50 * skx, 2.10 * sky);
		c.arcTo(12.40 * skx, 12.40 * sky, 0, 0, 1, 47.00* skx, -0.00* sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 1, 51.70* skx, 1.60* sky);
		c.arcTo(14.40 * skx, 14.40 * sky, 0, 0, 1, 58.20* skx, 14.30* sky);
		c.arcTo(7.50 * skx, 7.50 * sky, 0, 0, 1, 56.20* skx, 19.50* sky);
		c.curveTo(50.80 * skx, 25.20 * sky, 47.40 * skx, 32.10 * sky, 44.50 * skx, 39.30 * sky);
		c.arcTo(34.60 * skx, 34.60 * sky, 0, 0, 1, 36.90* skx, 51.20* sky);
		c.curveTo(31.70 * skx, 56.30 * sky, 27.40 * skx, 58.10 * sky, 17.60 * skx, 58.30 * sky);
		c.close();
		c.moveTo(14.50 * skx, 50.60* sky);
		c.lineTo(14.50* skx,50.30 * sky);
		c.arcTo(22.40 * skx, 22.40 * sky, 0, 0, 0, 25.80* skx, 47.40* sky);
		c.arcTo(29.60 * skx, 29.60 * sky, 0, 0, 0, 37.00* skx, 35.60* sky);
		c.curveTo(38.40 * skx, 33.20 * sky, 39.40 * skx, 30.60 * sky, 40.80 * skx, 28.20 * sky);
		c.arcTo(78.60 * skx, 78.60 * sky, 0, 0, 1, 51.70* skx, 14.70* sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 0, 53.30* skx, 12.80* sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 0, 52.60* skx, 6.00* sky);
		c.lineTo(51.10* skx,4.50* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 0, 45.40* skx, 2.70* sky);
		c.curveTo(43.20 * skx, 2.90 * sky, 41.40 * skx, 4.10 * sky, 39.60 * skx, 5.20 * sky);
		c.curveTo(37.800000000000004 * skx, 6.300000000000001 * sky, 34.20 * skx, 8.70 * sky, 31.30 * skx, 10.20 * sky);
		c.curveTo(25.90 * skx, 13.20 * sky, 20.40 * skx, 16.00 * sky, 14.90 * skx, 18.90 * sky);
		c.curveTo(4.70 * skx, 24.30 * sky, -0.90 * skx, 34.90 * sky, 5.20 * skx, 48.00 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 6.40* skx, 49.10* sky);
		c.close();
		c.moveTo(9.80 * skx, 52.70* sky);
		c.lineTo(10.80* skx,53.40* sky);
		c.curveTo(14.50 * skx, 55.50 * sky, 18.40 * skx, 55.90 * sky, 22.50 * skx, 55.60 * sky);
		c.arcTo(17.80 * skx, 17.80 * sky, 0, 0, 0, 33.10* skx, 51.10* sky);
		c.curveTo(37.70 * skx, 47.10 * sky, 40.60 * skx, 42.10 * sky, 42.80 * skx, 36.50 * sky);
		c.arcTo(58.20 * skx, 58.20 * sky, 0, 0, 1, 52.20* skx, 20.10* sky);
		c.arcTo(37.60 * skx, 37.60 * sky, 0, 0, 0, 54.70* skx, 17.00* sky);
		c.arcTo(9.40 * skx, 9.40 * sky, 0, 0, 0, 55.70* skx, 14.70* sky);
		c.lineTo(55.40 * skx,14.70* sky);
		c.curveTo(52.80 * skx, 17.50 * sky, 50.20 * skx, 20.30 * sky, 47.70 * skx, 23.30 * sky);
		c.arcTo(42.80 * skx, 42.80 * sky, 0, 0, 0, 40.80* skx, 34.20* sky);
		c.arcTo(38.90 * skx, 38.90 * sky, 0, 0, 1, 34.90* skx, 43.40* sky);
		c.curveTo(30.30 * skx, 48.60 * sky, 24.80 * skx, 52.00 * sky, 17.80 * skx, 52.80 * sky);
		c.arcTo(71.10 * skx, 71.10 * sky, 0, 0, 1, 9.80* skx, 52.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(30.30 * skx, 22.60* sky);
		c.curveTo(27.90 * skx, 28.80 * sky, 25.10 * skx, 34.80 * sky, 19.50 * skx, 38.80 * sky);
		c.arcTo(13.40 * skx, 13.40 * sky, 0, 0, 1, 12.30* skx, 41.10* sky);
		c.curveTo(11.00 * skx, 41.10 * sky, 10.80 * skx, 40.90 * sky, 10.60 * skx, 39.60 * sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 1, 11.30* skx, 35.10* sky);
		c.arcTo(20.40 * skx, 20.40 * sky, 0, 0, 1, 19.60* skx, 26.20* sky);
		c.arcTo(28.60 * skx, 28.60 * sky, 0, 0, 1, 29.50* skx, 22.70* sky);
		c.close();
		c.moveTo(22.50 * skx, 27.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 21.10* skx, 26.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 19.90* skx, 27.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 21.10* skx, 29.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 22.50* skx, 27.80* sky);
		c.close();
		c.moveTo(18.50 * skx, 31.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 19.80* skx, 30.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 18.50* skx, 29.20* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 17.20* skx, 30.40* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 18.50* skx, 31.80* sky);
		c.close();
		c.moveTo(19.80 * skx, 35.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 18.40* skx, 34.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 17.20* skx, 35.80* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 18.60* skx, 37.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 19.80* skx, 35.70* sky);
		c.close();
		c.moveTo(15.90 * skx, 37.10* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 14.60* skx, 35.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 13.20* skx, 37.10* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 14.50* skx, 38.40* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 15.90* skx, 37.10* sky);
		c.close();
		c.moveTo(26.40 * skx, 26.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 25.10* skx, 25.20* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 23.90* skx, 26.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 25.10* skx, 27.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 26.40* skx, 26.50* sky);
		c.close();
		c.moveTo(23.90 * skx, 31.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 25.10* skx, 30.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 23.80* skx, 29.20* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 22.50* skx, 30.50* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 23.90* skx, 31.80* sky);
		c.close();
		c.moveTo(15.90 * skx, 34.40* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 17.20* skx, 33.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 15.80* skx, 31.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 14.60* skx, 33.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 15.90* skx, 34.40* sky);
		c.close();
		c.moveTo(22.50 * skx, 33.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 1, 0, 19.90* skx, 33.20* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 21.30* skx, 34.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 22.50* skx, 33.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m807513de8b5509963f8e4f9411ea260', m807513de8b5509963f8e4f9411ea260);
	m807513de8b5509963f8e4f9411ea260.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m0f8bdc3299c9aad8d7ba5a7d5abf8b7() {
		mxActor.call(this);
	};
	mxUtils.extend(m0f8bdc3299c9aad8d7ba5a7d5abf8b7, mxActor);
	m0f8bdc3299c9aad8d7ba5a7d5abf8b7.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 47;
		h1 = 61;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(26.80 * skx, 3.20* sky);
		c.curveTo(29.10 * skx, 0.00 * sky, 30.10 * skx, -0.60 * sky, 31.50 * skx, 0.50 * sky);
		c.curveTo(32.9 * skx, 1.6 * sky, 34.70 * skx, 3.50 * sky, 33.30 * skx, 5.20 * sky);
		c.arcTo(37.30 * skx, 37.30 * sky, 0, 0, 1, 36.30* skx, 7.80* sky);
		c.arcTo(12.60 * skx, 12.60 * sky, 0, 0, 1, 39.20* skx, 15.50* sky);
		c.arcTo(21.70 * skx, 21.70 * sky, 0, 0, 0, 40.80* skx, 24.20* sky);
		c.lineTo(43.90* skx,30.20* sky);
		c.arcTo(21.30 * skx, 21.30 * sky, 0, 0, 1, 46.60* skx, 39.40* sky);
		c.arcTo(18.70 * skx, 18.70 * sky, 0, 0, 1, 41.00* skx, 54.10* sky);
		c.curveTo(35.10 * skx, 60.10 * sky, 27.80 * skx, 62.30 * sky, 19.50 * skx, 61.10 * sky);
		c.arcTo(22.80 * skx, 22.80 * sky, 0, 0, 1, 4.20* skx, 52.60* sky);
		c.arcTo(19.20 * skx, 19.20 * sky, 0, 0, 1, -0.00* skx, 39.40* sky);
		c.curveTo(0.40 * skx, 31.00 * sky, 3.40 * skx, 23.60 * sky, 7.70 * skx, 16.60 * sky);
		c.arcTo(45.10 * skx, 45.10 * sky, 0, 0, 1, 16.60* skx, 6.10* sky);
		c.arcTo(27.00 * skx, 27.00 * sky, 0, 0, 1, 20.50* skx, 3.40* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 26.80* skx, 3.20* sky);
		c.close();
		c.moveTo(33.10 * skx, 39.80* sky);
		c.curveTo(32.70 * skx, 34.60 * sky, 29.90 * skx, 30.60 * sky, 25.20 * skx, 27.60 * sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 0, 21.10* skx, 27.90* sky);
		c.arcTo(25.20 * skx, 25.20 * sky, 0, 0, 0, 17.20* skx, 31.20* sky);
		c.curveTo(13.50 * skx, 35.50 * sky, 12.40 * skx, 40.30 * sky, 14.50 * skx, 45.60 * sky);
		c.arcTo(9.40 * skx, 9.40 * sky, 0, 0, 0, 29.50* skx, 49.30* sky);
		c.curveTo(32.10 * skx, 46.90 * sky, 33.00 * skx, 43.70 * sky, 33.10 * skx, 39.80 * sky);
		c.close();
		c.moveTo(29.10 * skx, 4.40* sky);
		c.lineTo(29.10* skx,4.60 * sky);
		c.lineTo(31.10* skx,3.60* sky);
		c.lineTo(30.10* skx,2.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m0f8bdc3299c9aad8d7ba5a7d5abf8b7', m0f8bdc3299c9aad8d7ba5a7d5abf8b7);
	m0f8bdc3299c9aad8d7ba5a7d5abf8b7.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mc4477b732d0cdbd166c18fbd98ba687() {
		mxActor.call(this);
	};
	mxUtils.extend(mc4477b732d0cdbd166c18fbd98ba687, mxActor);
	mc4477b732d0cdbd166c18fbd98ba687.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 47;
		h1 = 61;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(26.80 * skx, 3.10* sky);
		c.curveTo(29.20 * skx, -0.10 * sky, 30.20 * skx, -0.60 * sky, 31.70 * skx, 0.60 * sky);
		c.curveTo(33.2 * skx, 1.7999999999999998 * sky, 34.40 * skx, 3.70 * sky, 33.20 * skx, 5.30 * sky);
		c.arcTo(0.10 * skx, 0.10 * sky, 0, 0, 0, 33.30* skx, 5.40* sky);
		c.curveTo(37.30 * skx, 7.40 * sky, 38.70 * skx, 11.00 * sky, 39.20 * skx, 15.20 * sky);
		c.curveTo(39.30 * skx, 16.60 * sky, 39.30 * skx, 18.00 * sky, 39.50 * skx, 19.40 * sky);
		c.arcTo(21.00 * skx, 21.00 * sky, 0, 0, 0, 42.30* skx, 27.10* sky);
		c.arcTo(31.20 * skx, 31.20 * sky, 0, 0, 1, 46.00* skx, 35.20* sky);
		c.curveTo(48.20 * skx, 44.10 * sky, 44.80 * skx, 52.50 * sky, 36.90 * skx, 57.50 * sky);
		c.curveTo(27.10 * skx, 63.80 * sky, 13.50 * skx, 62.40 * sky, 5.60 * skx, 54.10 * sky);
		c.arcTo(19.30 * skx, 19.30 * sky, 0, 0, 1, -0.00* skx, 39.50* sky);
		c.curveTo(0.40 * skx, 31.10 * sky, 3.30 * skx, 23.60 * sky, 7.70 * skx, 16.70 * sky);
		c.arcTo(44.90 * skx, 44.90 * sky, 0, 0, 1, 17.80* skx, 5.10* sky);
		c.curveTo(20.90 * skx, 2.70 * sky, 22.70 * skx, 1.80 * sky, 26.80 * skx, 3.10 * sky);
		c.close();
		c.moveTo(22.20 * skx, 59.00* sky);
		c.curveTo(27.50 * skx, 59.00 * sky, 31.30 * skx, 58.00 * sky, 34.90 * skx, 55.90 * sky);
		c.curveTo(42.20 * skx, 51.60 * sky, 45.60 * skx, 44.00 * sky, 43.60 * skx, 35.90 * sky);
		c.arcTo(27.30 * skx, 27.30 * sky, 0, 0, 0, 40.40* skx, 28.70* sky);
		c.arcTo(24.50 * skx, 24.50 * sky, 0, 0, 1, 36.80* skx, 16.30* sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 0, 34.60* skx, 9.60* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 0, 30.90* skx, 7.30* sky);
		c.arcTo(11.50 * skx, 11.50 * sky, 0, 0, 1, 26.00* skx, 5.60* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 22.00* skx, 5.40* sky);
		c.arcTo(22.40 * skx, 22.40 * sky, 0, 0, 0, 17.70* skx, 8.50* sky);
		c.curveTo(9.10 * skx, 16.70 * sky, 3.60 * skx, 26.60 * sky, 2.50 * skx, 38.60 * sky);
		c.arcTo(16.70 * skx, 16.70 * sky, 0, 0, 0, 5.80* skx, 50.60* sky);
		c.arcTo(21.10 * skx, 21.10 * sky, 0, 0, 0, 22.20* skx, 59.00* sky);
		c.close();
		c.moveTo(30.20 * skx, 2.60* sky);
		c.lineTo(29.10* skx,4.40* sky);
		c.lineTo(29.30* skx,4.60* sky);
		c.lineTo(31.20* skx,3.60* sky);
		c.lineTo(30.60* skx,2.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(34.40 * skx, 39.60* sky);
		c.curveTo(34.20 * skx, 44.20 * sky, 33.00 * skx, 47.80 * sky, 29.90 * skx, 50.50 * sky);
		c.curveTo(24.50 * skx, 55.00 * sky, 16.30 * skx, 52.80 * sky, 13.50 * skx, 46.10 * sky);
		c.curveTo(10.7 * skx, 39.400000000000006 * sky, 12.30 * skx, 35.00 * sky, 16.40 * skx, 30.30 * sky);
		c.arcTo(22.70 * skx, 22.70 * sky, 0, 0, 1, 20.80* skx, 26.60* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 1, 25.30* skx, 26.30* sky);
		c.curveTo(30.80 * skx, 29.40 * sky, 33.90 * skx, 33.90 * sky, 34.40 * skx, 39.60 * sky);
		c.close();
		c.moveTo(31.90 * skx, 40.30* sky);
		c.lineTo(32.10 * skx,40.30* sky);
		c.arcTo(28.80 * skx, 28.80 * sky, 0, 0, 0, 31.00* skx, 36.00* sky);
		c.arcTo(15.30 * skx, 15.30 * sky, 0, 0, 0, 25.30* skx, 29.10* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 21.30* skx, 29.10* sky);
		c.arcTo(37.30 * skx, 37.30 * sky, 0, 0, 0, 18.30* skx, 31.70* sky);
		c.curveTo(14.90 * skx, 35.60 * sky, 13.70 * skx, 40.00 * sky, 15.70 * skx, 45.00 * sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 0, 29.40* skx, 47.60* sky);
		c.arcTo(11.30 * skx, 11.30 * sky, 0, 0, 0, 31.90* skx, 40.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mc4477b732d0cdbd166c18fbd98ba687', mc4477b732d0cdbd166c18fbd98ba687);
	mc4477b732d0cdbd166c18fbd98ba687.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m43f3badf92fac0698ee7f1635a7d084() {
		mxActor.call(this);
	};
	mxUtils.extend(m43f3badf92fac0698ee7f1635a7d084, mxActor);
	m43f3badf92fac0698ee7f1635a7d084.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 57;
		h1 = 57;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(36.30 * skx, 49.50* sky);
		c.lineTo(37.50 * skx,49.50* sky);
		c.curveTo(40.10 * skx, 49.50 * sky, 42.80 * skx, 49.40 * sky, 45.50 * skx, 49.50 * sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 46.70* skx, 50.20* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 46.50* skx, 51.60* sky);
		c.curveTo(45.50 * skx, 53.10 * sky, 44.30 * skx, 54.60 * sky, 43.20 * skx, 56.10 * sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 41.60* skx, 56.80* sky);
		c.lineTo(20.10 * skx,56.80* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 18.50* skx, 56.00* sky);
		c.curveTo(17.40 * skx, 54.60 * sky, 16.30 * skx, 53.20 * sky, 15.30 * skx, 51.70 * sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 15.00* skx, 50.20* sky);
		c.curveTo(15.10 * skx, 49.50 * sky, 15.80 * skx, 49.40 * sky, 16.50 * skx, 49.50 * sky);
		c.lineTo(25.80 * skx,49.50* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 27.70* skx, 48.90* sky);
		c.arcTo(30.80 * skx, 30.80 * sky, 0, 0, 0, 30.40* skx, 46.40* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 30.90* skx, 45.60* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 30.80* skx, 43.30* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 28.70* skx, 42.80* sky);
		c.curveTo(27.40 * skx, 43.00 * sky, 26.20 * skx, 43.50 * sky, 24.90 * skx, 43.80 * sky);
		c.arcTo(30.00 * skx, 30.00 * sky, 0, 0, 1, 19.80* skx, 44.60* sky);
		c.curveTo(15.50 * skx, 44.80 * sky, 12.60 * skx, 42.30 * sky, 11.70 * skx, 38.10 * sky);
		c.curveTo(11.50 * skx, 37.40 * sky, 11.30 * skx, 37.20 * sky, 10.60 * skx, 37.20 * sky);
		c.arcTo(53.30 * skx, 53.30 * sky, 0, 0, 1, 4.90* skx, 37.00* sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 1, -0.00* skx, 30.60* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 1, 5.40* skx, 24.90* sky);
		c.arcTo(6.00 * skx, 6.00 * sky, 0, 0, 1, 7.70* skx, 25.00* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 8.80* skx, 24.50* sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 1, 15.80* skx, 21.10* sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 1, 21.40* skx, 23.80* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 22.80* skx, 24.20* sky);
		c.arcTo(18.20 * skx, 18.20 * sky, 0, 0, 1, 30.50* skx, 23.70* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 32.00* skx, 23.20* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 0, 35.30* skx, 19.30* sky);
		c.lineTo(34.60 * skx,19.30* sky);
		c.curveTo(31.00 * skx, 20.50 * sky, 27.60 * skx, 20.30 * sky, 24.60 * skx, 17.80 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 23.70* skx, 17.70* sky);
		c.arcTo(46.10 * skx, 46.10 * sky, 0, 0, 1, 18.70* skx, 18.40* sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 1, 12.00* skx, 14.30* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 1, 12.60* skx, 6.30* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 20.30* skx, 4.30* sky);
		c.lineTo(21.60* skx,5.00* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 22.00* skx, 4.30* sky);
		c.arcTo(7.50 * skx, 7.50 * sky, 0, 0, 1, 33.00* skx, 1.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 34.60* skx, 1.30* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 1, 46.00* skx, 6.30* sky);
		c.curveTo(46.20 * skx, 7.20 * sky, 46.60 * skx, 7.20 * sky, 47.30 * skx, 7.30 * sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 1, 51.70* skx, 11.10* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 49.80* skx, 16.40* sky);
		c.arcTo(39.20 * skx, 39.20 * sky, 0, 0, 1, 44.00* skx, 19.30* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 1, 38.80* skx, 19.10* sky);
		c.curveTo(38.30 * skx, 18.80 * sky, 38.00 * skx, 18.80 * sky, 37.80 * skx, 19.50 * sky);
		c.arcTo(9.80 * skx, 9.80 * sky, 0, 0, 1, 34.70* skx, 24.50* sky);
		c.lineTo(35.20* skx,24.80* sky);
		c.lineTo(35.70* skx,25.00* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 0, 40.40* skx, 25.20* sky);
		c.curveTo(42.90 * skx, 24.10 * sky, 45.30 * skx, 24.90 * sky, 47.20 * skx, 26.80 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 48.40* skx, 27.00* sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 1, 54.70* skx, 27.80* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 1, 56.40* skx, 34.50* sky);
		c.arcTo(6.00 * skx, 6.00 * sky, 0, 0, 1, 51.10* skx, 38.30* sky);
		c.curveTo(48.10 * skx, 38.30 * sky, 45.10 * skx, 38.40 * sky, 42.20 * skx, 38.30 * sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 36.30* skx, 29.00* sky);
		c.curveTo(36.70 * skx, 28.30 * sky, 36.50 * skx, 28.00 * sky, 35.80 * skx, 27.70 * sky);
		c.arcTo(20.20 * skx, 20.20 * sky, 0, 0, 0, 26.70* skx, 26.00* sky);
		c.lineTo(25.20* skx,26.30* sky);
		c.arcTo(10.40 * skx, 10.40 * sky, 0, 0, 1, 27.30* skx, 28.40* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 27.80* skx, 34.00* sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 1, 22.90* skx, 37.00* sky);
		c.curveTo(20.60 * skx, 37.10 * sky, 18.20 * skx, 37.10 * sky, 15.80 * skx, 37.00 * sky);
		c.curveTo(15.00 * skx, 37.00 * sky, 14.90 * skx, 37.30 * sky, 15.10 * skx, 38.00 * sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 20.00* skx, 41.20* sky);
		c.arcTo(24.40 * skx, 24.40 * sky, 0, 0, 0, 25.30* skx, 39.80* sky);
		c.curveTo(27.40 * skx, 39.00 * sky, 29.50 * skx, 38.10 * sky, 31.80 * skx, 38.30 * sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 38.00* skx, 42.80* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 1, 37.00* skx, 48.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m43f3badf92fac0698ee7f1635a7d084', m43f3badf92fac0698ee7f1635a7d084);
	m43f3badf92fac0698ee7f1635a7d084.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m378103d2521bcc7f0e63df4e7e303d6() {
		mxActor.call(this);
	};
	mxUtils.extend(m378103d2521bcc7f0e63df4e7e303d6, mxActor);
	m378103d2521bcc7f0e63df4e7e303d6.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 57;
		h1 = 57;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(11.50 * skx, 37.10* sky);
		c.lineTo(6.10 * skx,37.10* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 1, 0.10* skx, 31.80* sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 1, 4.50* skx, 25.00* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 8.30* skx, 25.40* sky);
		c.lineTo(8.80* skx,24.70* sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 1, 21.50* skx, 24.00* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 22.60* skx, 24.30* sky);
		c.arcTo(15.70 * skx, 15.70 * sky, 0, 0, 1, 28.70* skx, 23.60* sky);
		c.arcTo(4.30 * skx, 4.30 * sky, 0, 0, 0, 32.30* skx, 22.10* sky);
		c.curveTo(33.00 * skx, 21.40 * sky, 33.40 * skx, 20.60 * sky, 34.10 * skx, 19.80 * sky);
		c.arcTo(25.50 * skx, 25.50 * sky, 0, 0, 1, 30.30* skx, 20.00* sky);
		c.arcTo(8.30 * skx, 8.30 * sky, 0, 0, 1, 24.60* skx, 17.80* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 23.60* skx, 17.70* sky);
		c.arcTo(12.40 * skx, 12.40 * sky, 0, 0, 1, 16.70* skx, 18.20* sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 1, 12.50* skx, 6.40* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 1, 21.00* skx, 4.80* sky);
		c.lineTo(21.70* skx,5.20* sky);
		c.arcTo(7.40 * skx, 7.40 * sky, 0, 0, 1, 33.80* skx, 2.00* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 1, 41.70* skx, 0.60* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 1, 46.20* skx, 7.30* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 50.80* skx, 9.20* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 51.60* skx, 14.20* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 1, 48.10* skx, 17.10* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 47.10* skx, 17.50* sky);
		c.curveTo(45.00 * skx, 20.00 * sky, 40.40 * skx, 20.40 * sky, 37.50 * skx, 18.20 * sky);
		c.lineTo(37.00* skx,17.90* sky);
		c.arcTo(10.20 * skx, 10.20 * sky, 0, 0, 1, 33.70* skx, 24.20* sky);
		c.lineTo(38.10* skx,26.00* sky);
		c.arcTo(0.60 * skx, 0.60 * sky, 0, 0, 0, 38.70* skx, 26.00* sky);
		c.curveTo(41.70 * skx, 23.90 * sky, 45.10 * skx, 24.40 * sky, 47.60 * skx, 27.50 * sky);
		c.lineTo(47.90* skx,27.30* sky);
		c.arcTo(5.30 * skx, 5.30 * sky, 0, 0, 1, 54.10* skx, 27.30* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 1, 56.70* skx, 33.30* sky);
		c.curveTo(56.30 * skx, 35.70 * sky, 54.90 * skx, 37.80 * sky, 52.40 * skx, 38.00 * sky);
		c.arcTo(50.00 * skx, 50.00 * sky, 0, 0, 1, 40.80* skx, 38.00* sky);
		c.curveTo(36.90 * skx, 37.40 * sky, 34.80 * skx, 32.80 * sky, 36.30 * skx, 29.10 * sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 36.70* skx, 28.20* sky);
		c.arcTo(18.90 * skx, 18.90 * sky, 0, 0, 0, 25.00* skx, 26.30* sky);
		c.lineTo(25.70* skx,26.80* sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 1, 28.20* skx, 33.00* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 1, 22.90* skx, 37.00* sky);
		c.lineTo(15.00 * skx,37.00* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 0, 18.90* skx, 41.10* sky);
		c.arcTo(10.80 * skx, 10.80 * sky, 0, 0, 0, 24.50* skx, 40.00* sky);
		c.arcTo(22.30 * skx, 22.30 * sky, 0, 0, 1, 30.70* skx, 38.10* sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 1, 37.10* skx, 41.00* sky);
		c.curveTo(38.70 * skx, 42.90 * sky, 38.60 * skx, 46.10 * sky, 37.00 * skx, 48.50 * sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 0, 36.40* skx, 49.40* sky);
		c.lineTo(45.50 * skx,49.40* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 46.70* skx, 50.10* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 46.60* skx, 51.40* sky);
		c.curveTo(45.50 * skx, 53.00 * sky, 44.30 * skx, 54.60 * sky, 43.10 * skx, 56.10 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 41.80* skx, 56.70* sky);
		c.curveTo(34.50 * skx, 56.80 * sky, 27.30 * skx, 56.80 * sky, 20.00 * skx, 56.70 * sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 18.60* skx, 56.00* sky);
		c.arcTo(52.20 * skx, 52.20 * sky, 0, 0, 1, 15.30* skx, 51.50* sky);
		c.curveTo(15.00 * skx, 51.10 * sky, 14.80 * skx, 50.40 * sky, 15.00 * skx, 50.10 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 16.30* skx, 49.40* sky);
		c.lineTo(26.10 * skx,49.40* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 27.40* skx, 49.10* sky);
		c.lineTo(30.40* skx,46.30* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 31.00* skx, 45.10* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 29.10* skx, 42.60* sky);
		c.curveTo(27.80 * skx, 42.80 * sky, 26.40 * skx, 43.30 * sky, 25.10 * skx, 43.60 * sky);
		c.curveTo(23.800000000000004 * skx, 43.900000000000006 * sky, 20.50 * skx, 44.90 * sky, 18.10 * skx, 44.50 * sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 11.70* skx, 38.20* sky);
		c.curveTo(11.60 * skx, 37.80 * sky, 11.60 * skx, 37.50 * sky, 11.50 * skx, 37.10 * sky);
		c.close();
		c.moveTo(23.90 * skx, 7.50* sky);
		c.lineTo(23.90* skx,8.00 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 23.00* skx, 9.40* sky);
		c.curveTo(22.30 * skx, 9.70 * sky, 21.80 * skx, 9.30 * sky, 21.50 * skx, 8.70 * sky);
		c.lineTo(20.60* skx,7.50* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 0, 14.00* skx, 8.70* sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 0, 18.40* skx, 16.10* sky);
		c.arcTo(12.40 * skx, 12.40 * sky, 0, 0, 0, 23.80* skx, 15.10* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 25.90* skx, 15.60* sky);
		c.curveTo(28.20 * skx, 18.30 * sky, 33.40 * skx, 18.30 * sky, 35.70 * skx, 15.70 * sky);
		c.curveTo(36.70 * skx, 14.60 * sky, 37.20 * skx, 14.60 * sky, 38.30 * skx, 15.70 * sky);
		c.curveTo(39.39999999999999 * skx, 16.799999999999997 * sky, 44.00 * skx, 17.70 * sky, 45.60 * skx, 15.80 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 47.40* skx, 14.80* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 49.40* skx, 12.30* sky);
		c.curveTo(49.40 * skx, 10.80 * sky, 48.60 * skx, 9.80 * sky, 47.30 * skx, 9.80 * sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 0, 45.40* skx, 10.10* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 1, 43.80* skx, 10.00* sky);
		c.curveTo(43.30 * skx, 9.70 * sky, 43.30 * skx, 9.10 * sky, 43.50 * skx, 8.50 * sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 0, 43.70* skx, 7.30* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 40.90* skx, 2.90* sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 0, 35.20* skx, 3.90* sky);
		c.curveTo(33.90 * skx, 5.20 * sky, 33.70 * skx, 5.20 * sky, 32.40 * skx, 3.90 * sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 0, 26.70* skx, 2.90* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 0, 23.90* skx, 7.50* sky);
		c.close();
		c.moveTo(14.60 * skx, 34.60* sky);
		c.lineTo(14.60 * skx,34.60* sky);
		c.curveTo(17.30 * skx, 34.60 * sky, 20.00 * skx, 34.70 * sky, 22.70 * skx, 34.60 * sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 25.90* skx, 31.50* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 22.60* skx, 28.50* sky);
		c.curveTo(21.20 * skx, 28.60 * sky, 21.20 * skx, 28.60 * sky, 20.70 * skx, 27.20 * sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 15.60* skx, 23.60* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 0, 10.40* skx, 26.80* sky);
		c.curveTo(9.70 * skx, 28.40 * sky, 9.40 * skx, 28.50 * sky, 7.80 * skx, 27.70 * sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 2.50* skx, 31.20* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 0, 6.20* skx, 34.70* sky);
		c.close();
		c.moveTo(46.60 * skx, 35.80* sky);
		c.lineTo(51.10 * skx,35.80* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 54.30* skx, 33.20* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 0, 52.60* skx, 29.20* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 48.60* skx, 29.80* sky);
		c.curveTo(47.50 * skx, 30.90 * sky, 46.80 * skx, 30.80 * sky, 46.10 * skx, 29.50 * sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 0, 41.10* skx, 27.40* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 38.30* skx, 32.10* sky);
		c.arcTo(4.20 * skx, 4.20 * sky, 0, 0, 0, 42.50* skx, 35.80* sky);
		c.close();
		c.moveTo(18.60 * skx, 52.00* sky);
		c.arcTo(15.70 * skx, 15.70 * sky, 0, 0, 0, 20.10* skx, 53.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 21.00* skx, 54.40* sky);
		c.lineTo(40.80 * skx,54.40* sky);
		c.lineTo(41.50* skx,54.20* sky);
		c.lineTo(43.20* skx,52.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m378103d2521bcc7f0e63df4e7e303d6', m378103d2521bcc7f0e63df4e7e303d6);
	m378103d2521bcc7f0e63df4e7e303d6.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m9d54009ff14279550e01d15c683e12f() {
		mxActor.call(this);
	};
	mxUtils.extend(m9d54009ff14279550e01d15c683e12f, mxActor);
	m9d54009ff14279550e01d15c683e12f.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 55;
		h1 = 71;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(23.60 * skx, 28.50* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 1, 1, 15.70* skx, 36.20* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 23.60* skx, 28.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.70 * skx, 42.20* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 1, 1, 40.60* skx, 50.10* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 1, 32.70* skx, 42.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(19.80 * skx, 63.40* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 12.00* skx, 71.20* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 4.10* skx, 63.50* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 1, 11.90* skx, 55.60* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 19.80* skx, 63.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(30.00 * skx, 25.00* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 45.70* skx, 25.00* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 1, 1, 30.00* skx, 25.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(15.70 * skx, 29.30* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 7.70* skx, 37.00* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, -0.00* skx, 29.10* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 15.70* skx, 29.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(14.30 * skx, 17.80* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 1, 1, 29.90* skx, 17.80* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 22.20* skx, 25.60* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 14.30* skx, 17.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(26.40 * skx, 45.60* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 1, 1, 18.40* skx, 53.20* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 1, 26.40* skx, 45.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(9.20 * skx, 54.10* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 9.40* skx, 38.50* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 1, 1, 9.20* skx, 54.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(37.80 * skx, 7.30* sky);
		c.lineTo(42.60* skx,4.10* sky);
		c.arcTo(35.00 * skx, 35.00 * sky, 0, 0, 1, 52.90* skx, 0.10* sky);
		c.curveTo(54.10 * skx, -0.20 * sky, 54.80 * skx, 0.20 * sky, 55.00 * skx, 1.10 * sky);
		c.curveTo(55.2 * skx, 2.0 * sky, 54.60 * skx, 2.60 * sky, 53.50 * skx, 2.90 * sky);
		c.arcTo(33.20 * skx, 33.20 * sky, 0, 0, 0, 34.40* skx, 14.80* sky);
		c.lineTo(33.80* skx,15.60* sky);
		c.curveTo(33.10 * skx, 16.10 * sky, 32.50 * skx, 16.30 * sky, 31.80 * skx, 15.70 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 31.70* skx, 13.70* sky);
		c.curveTo(32.50 * skx, 12.60 * sky, 33.50 * skx, 11.60 * sky, 34.40 * skx, 10.50 * sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 34.90* skx, 9.10* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 0, 34.00* skx, 4.60* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 0, 32.20* skx, 2.70* sky);
		c.curveTo(31.50 * skx, 2.10 * sky, 31.10 * skx, 1.40 * sky, 31.50 * skx, 0.70 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 33.60* skx, 0.30* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 1, 37.40* skx, 5.60* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 1, 37.80* skx, 7.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m9d54009ff14279550e01d15c683e12f', m9d54009ff14279550e01d15c683e12f);
	m9d54009ff14279550e01d15c683e12f.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function md15943de1295589a4eaf68ddf84b38d() {
		mxActor.call(this);
	};
	mxUtils.extend(md15943de1295589a4eaf68ddf84b38d, mxActor);
	md15943de1295589a4eaf68ddf84b38d.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 55;
		h1 = 71;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(8.50 * skx, 37.10* sky);
		c.curveTo(4.10 * skx, 36.60 * sky, 1.20 * skx, 34.50 * sky, 0.30 * skx, 30.30 * sky);
		c.arcTo(7.70 * skx, 7.70 * sky, 0, 0, 1, 3.60* skx, 21.60* sky);
		c.curveTo(7.10 * skx, 19.10 * sky, 10.70 * skx, 19.50 * sky, 14.40 * skx, 22.20 * sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 1, 13.20* skx, 14.90* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 1, 1, 27.60* skx, 22.90* sky);
		c.curveTo(24.60 * skx, 26.20 * sky, 20.20 * skx, 26.50 * sky, 15.60 * skx, 23.50 * sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 1, 16.80* skx, 31.20* sky);
		c.arcTo(8.90 * skx, 8.90 * sky, 0, 0, 1, 22.80* skx, 27.20* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 1, 31.70* skx, 39.80* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 1, 21.40* skx, 43.70* sky);
		c.curveTo(17.10 * skx, 42.10 * sky, 15.10 * skx, 38.20 * sky, 16.10 * skx, 32.60 * sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 1, 10.10* skx, 37.00* sky);
		c.arcTo(8.90 * skx, 8.90 * sky, 0, 0, 1, 16.30* skx, 39.90* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 18.50* skx, 46.40* sky);
		c.arcTo(8.40 * skx, 8.40 * sky, 0, 0, 1, 10.10* skx, 54.10* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 1, 1.50* skx, 46.70* sky);
		c.curveTo(0.90 * skx, 42.50 * sky, 3.60 * skx, 38.60 * sky, 8.50 * skx, 37.10 * sky);
		c.close();
		c.moveTo(10.00 * skx, 39.90* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 4.30* skx, 45.70* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 10.00* skx, 51.30* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 10.00* skx, 39.90* sky);
		c.close();
		c.moveTo(21.40 * skx, 22.80* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 27.10* skx, 17.10* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 1, 0, 21.40* skx, 22.80* sky);
		c.close();
		c.moveTo(18.60 * skx, 35.70* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 0, 24.30* skx, 41.30* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 30.00* skx, 35.60* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 0, 24.20* skx, 29.90* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 18.60* skx, 35.70* sky);
		c.close();
		c.moveTo(14.30 * skx, 28.50* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 0, 8.60* skx, 22.80* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 2.90* skx, 28.50* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 8.50* skx, 34.20* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 14.30* skx, 28.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(47.00 * skx, 24.30* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 1, 1, 30.00* skx, 24.10* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 1, 47.00* skx, 24.30* sky);
		c.close();
		c.moveTo(38.60 * skx, 29.90* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 44.20* skx, 24.20* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 1, 0, 32.80* skx, 24.30* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 38.60* skx, 29.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(21.40 * skx, 62.90* sky);
		c.arcTo(8.60 * skx, 8.60 * sky, 0, 0, 1, 12.60* skx, 71.30* sky);
		c.arcTo(8.60 * skx, 8.60 * sky, 0, 0, 1, 13.00* skx, 54.20* sky);
		c.arcTo(8.60 * skx, 8.60 * sky, 0, 0, 1, 21.40* skx, 62.90* sky);
		c.close();
		c.moveTo(12.80 * skx, 68.40* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 18.60* skx, 62.70* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 0, 12.80* skx, 57.00* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 7.20* skx, 62.70* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 0, 12.80* skx, 68.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(32.80 * skx, 41.40* sky);
		c.arcTo(8.70 * skx, 8.70 * sky, 0, 0, 1, 41.40* skx, 32.80* sky);
		c.arcTo(8.60 * skx, 8.60 * sky, 0, 1, 1, 32.80* skx, 41.40* sky);
		c.close();
		c.moveTo(47.00 * skx, 41.30* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 41.30* skx, 35.60* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 0, 35.60* skx, 41.30* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 41.40* skx, 47.00* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 47.00* skx, 41.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(18.60 * skx, 52.80* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 1, 1, 27.10* skx, 61.30* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 1, 18.60* skx, 52.80* sky);
		c.close();
		c.moveTo(27.10 * skx, 58.40* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 27.10* skx, 47.00* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 0, 21.40* skx, 52.70* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 0, 27.10* skx, 58.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(37.70 * skx, 7.10* sky);
		c.curveTo(40.40 * skx, 5.60 * sky, 43.00 * skx, 3.90 * sky, 45.70 * skx, 2.60 * sky);
		c.arcTo(61.30 * skx, 61.30 * sky, 0, 0, 1, 52.90* skx, 0.10* sky);
		c.curveTo(54.00 * skx, -0.20 * sky, 54.80 * skx, 0.20 * sky, 55.00 * skx, 1.10 * sky);
		c.curveTo(55.2 * skx, 2.0 * sky, 54.70 * skx, 2.60 * sky, 53.50 * skx, 2.90 * sky);
		c.arcTo(33.40 * skx, 33.40 * sky, 0, 0, 0, 34.30* skx, 15.00* sky);
		c.curveTo(33.30 * skx, 16.20 * sky, 32.50 * skx, 16.50 * sky, 31.80 * skx, 15.90 * sky);
		c.curveTo(31.1 * skx, 15.3 * sky, 31.10 * skx, 14.50 * sky, 32.00 * skx, 13.30 * sky);
		c.arcTo(23.60 * skx, 23.60 * sky, 0, 0, 1, 34.00* skx, 11.00* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 35.00* skx, 8.40* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 0, 33.50* skx, 3.70* sky);
		c.lineTo(32.20* skx,2.70* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 31.50* skx, 0.70* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 33.60* skx, 0.20* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 37.40* skx, 5.60* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 1, 37.70* skx, 7.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('md15943de1295589a4eaf68ddf84b38d', md15943de1295589a4eaf68ddf84b38d);
	md15943de1295589a4eaf68ddf84b38d.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mbb11c6939128497cbcb096444e020e6() {
		mxActor.call(this);
	};
	mxUtils.extend(mbb11c6939128497cbcb096444e020e6, mxActor);
	mbb11c6939128497cbcb096444e020e6.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 57;
		h1 = 57;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(34.20 * skx, 13.30* sky);
		c.curveTo(36.20 * skx, 14.70 * sky, 38.40 * skx, 14.80 * sky, 40.60 * skx, 14.80 * sky);
		c.lineTo(39.70* skx,21.30* sky);
		c.arcTo(16.40 * skx, 16.40 * sky, 0, 0, 0, 46.80* skx, 20.00* sky);
		c.lineTo(50.60* skx,25.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 50.80* skx, 26.50* sky);
		c.arcTo(45.40 * skx, 45.40 * sky, 0, 0, 1, 43.00* skx, 40.60* sky);
		c.arcTo(46.70 * skx, 46.70 * sky, 0, 0, 1, 26.40* skx, 54.20* sky);
		c.arcTo(29.70 * skx, 29.70 * sky, 0, 0, 1, 12.70* skx, 57.40* sky);
		c.arcTo(13.20 * skx, 13.20 * sky, 0, 0, 1, 0.20* skx, 46.50* sky);
		c.arcTo(15.40 * skx, 15.40 * sky, 0, 0, 1, 2.00* skx, 36.20* sky);
		c.arcTo(12.50 * skx, 12.50 * sky, 0, 0, 1, 8.40* skx, 31.00* sky);
		c.curveTo(11.80 * skx, 29.50 * sky, 15.30 * skx, 28.30 * sky, 18.70 * skx, 26.90 * sky);
		c.arcTo(27.00 * skx, 27.00 * sky, 0, 0, 0, 27.30* skx, 20.60* sky);
		c.close();
		c.moveTo(37.70 * skx, 22.30* sky);
		c.curveTo(37.30 * skx, 21.90 * sky, 37.10 * skx, 21.50 * sky, 36.70 * skx, 21.30 * sky);
		c.curveTo(36.300000000000004 * skx, 21.1 * sky, 35.70 * skx, 21.40 * sky, 35.30 * skx, 21.80 * sky);
		c.arcTo(41.70 * skx, 41.70 * sky, 0, 0, 1, 27.40* skx, 29.60* sky);
		c.arcTo(39.90 * skx, 39.90 * sky, 0, 0, 1, 12.40* skx, 36.70* sky);
		c.curveTo(11.50 * skx, 37.00 * sky, 11.10 * skx, 37.50 * sky, 11.30 * skx, 38.30 * sky);
		c.curveTo(11.500000000000002 * skx, 39.099999999999994 * sky, 12.10 * skx, 39.30 * sky, 13.10 * skx, 39.00 * sky);
		c.arcTo(63.40 * skx, 63.40 * sky, 0, 0, 0, 20.40* skx, 36.40* sky);
		c.arcTo(41.80 * skx, 41.80 * sky, 0, 0, 0, 37.00* skx, 23.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(42.40 * skx, 18.80* sky);
		c.arcTo(13.80 * skx, 13.80 * sky, 0, 0, 1, 44.70* skx, 12.00* sky);
		c.curveTo(41.70 * skx, 12.20 * sky, 38.80 * skx, 13.10 * sky, 36.00 * skx, 11.60 * sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 1, 44.10* skx, 7.20* sky);
		c.lineTo(44.50 * skx,7.20* sky);
		c.curveTo(47.70 * skx, 7.30 * sky, 47.70 * skx, 7.40 * sky, 49.80 * skx, 4.90 * sky);
		c.lineTo(53.10* skx,0.90* sky);
		c.curveTo(53.80 * skx, -0.10 * sky, 54.20 * skx, -0.20 * sky, 55.30 * skx, 0.40 * sky);
		c.curveTo(57.90 * skx, 1.80 * sky, 57.80 * skx, 1.80 * sky, 56.70 * skx, 4.50 * sky);
		c.arcTo(25.70 * skx, 25.70 * sky, 0, 0, 1, 53.10* skx, 10.70* sky);
		c.curveTo(53.00 * skx, 11.00 * sky, 52.80 * skx, 11.40 * sky, 52.90 * skx, 11.70 * sky);
		c.arcTo(12.30 * skx, 12.30 * sky, 0, 0, 1, 52.90* skx, 21.30* sky);
		c.curveTo(52.60 * skx, 21.90 * sky, 52.40 * skx, 22.50 * sky, 52.10 * skx, 23.20 * sky);
		c.curveTo(50.60 * skx, 21.00 * sky, 48.60 * skx, 19.10 * sky, 48.50 * skx, 16.20 * sky);
		c.arcTo(10.90 * skx, 10.90 * sky, 0, 0, 1, 42.40* skx, 18.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mbb11c6939128497cbcb096444e020e6', mbb11c6939128497cbcb096444e020e6);
	mbb11c6939128497cbcb096444e020e6.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mb13ff2d8c1530b29e12893ddb0687bd() {
		mxActor.call(this);
	};
	mxUtils.extend(mb13ff2d8c1530b29e12893ddb0687bd, mxActor);
	mb13ff2d8c1530b29e12893ddb0687bd.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 57;
		h1 = 57;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(45.40 * skx, 7.20* sky);
		c.curveTo(46.80 * skx, 7.80 * sky, 48.00 * skx, 6.90 * sky, 49.10 * skx, 5.60 * sky);
		c.lineTo(53.10* skx,0.80* sky);
		c.curveTo(53.80 * skx, -0.10 * sky, 54.20 * skx, -0.20 * sky, 55.20 * skx, 0.40 * sky);
		c.lineTo(56.00* skx,0.80* sky);
		c.curveTo(57.60 * skx, 1.70 * sky, 57.70 * skx, 2.00 * sky, 57.10 * skx, 3.70 * sky);
		c.arcTo(26.50 * skx, 26.50 * sky, 0, 0, 1, 53.10* skx, 10.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 53.00* skx, 12.00* sky);
		c.curveTo(54.60 * skx, 15.80 * sky, 53.90 * skx, 19.50 * sky, 52.10 * skx, 22.90 * sky);
		c.arcTo(21.90 * skx, 21.90 * sky, 0, 0, 0, 50.90* skx, 26.20* sky);
		c.arcTo(44.00 * skx, 44.00 * sky, 0, 0, 1, 42.30* skx, 41.40* sky);
		c.arcTo(47.10 * skx, 47.10 * sky, 0, 0, 1, 24.20* skx, 55.20* sky);
		c.arcTo(28.20 * skx, 28.20 * sky, 0, 0, 1, 12.80* skx, 57.40* sky);
		c.arcTo(13.20 * skx, 13.20 * sky, 0, 0, 1, -0.00* skx, 44.60* sky);
		c.arcTo(18.00 * skx, 18.00 * sky, 0, 0, 1, 1.00* skx, 38.10* sky);
		c.curveTo(2.30 * skx, 34.50 * sky, 5.10 * skx, 32.40 * sky, 8.40 * skx, 31.00 * sky);
		c.lineTo(16.10* skx,28.00* sky);
		c.arcTo(30.40 * skx, 30.40 * sky, 0, 0, 0, 27.80* skx, 20.10* sky);
		c.curveTo(29.90 * skx, 17.80 * sky, 32.10 * skx, 15.50 * sky, 34.30 * skx, 13.30 * sky);
		c.lineTo(36.40* skx,11.00* sky);
		c.arcTo(10.60 * skx, 10.60 * sky, 0, 0, 1, 45.40* skx, 7.20* sky);
		c.close();
		c.moveTo(42.40 * skx, 13.30* sky);
		c.arcTo(20.00 * skx, 20.00 * sky, 0, 0, 1, 39.00* skx, 13.50* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 36.50* skx, 14.60* sky);
		c.curveTo(34.80 * skx, 16.30 * sky, 32.90 * skx, 18.00 * sky, 31.30 * skx, 19.90 * sky);
		c.arcTo(36.20 * skx, 36.20 * sky, 0, 0, 1, 14.10* skx, 31.40* sky);
		c.arcTo(48.00 * skx, 48.00 * sky, 0, 0, 0, 7.50* skx, 34.10* sky);
		c.arcTo(8.80 * skx, 8.80 * sky, 0, 0, 0, 2.80* skx, 40.60* sky);
		c.curveTo(2.60 * skx, 41.60 * sky, 2.50 * skx, 42.70 * sky, 2.40 * skx, 43.70 * sky);
		c.arcTo(10.70 * skx, 10.70 * sky, 0, 0, 0, 13.60* skx, 55.00* sky);
		c.arcTo(26.80 * skx, 26.80 * sky, 0, 0, 0, 25.10* skx, 52.10* sky);
		c.arcTo(46.10 * skx, 46.10 * sky, 0, 0, 0, 43.30* skx, 36.10* sky);
		c.arcTo(35.40 * skx, 35.40 * sky, 0, 0, 0, 49.10* skx, 23.30* sky);
		c.arcTo(3.00 * skx, 3.00 * sky, 0, 0, 0, 49.30* skx, 22.00* sky);
		c.curveTo(48.70 * skx, 20.80 * sky, 48.00 * skx, 19.60 * sky, 47.40 * skx, 18.60 * sky);
		c.lineTo(43.20* skx,19.90* sky);
		c.curveTo(41.60 * skx, 20.30 * sky, 41.00 * skx, 19.70 * sky, 41.30 * skx, 18.00 * sky);
		c.curveTo(41.599999999999994 * skx, 16.3 * sky, 42.00 * skx, 14.90 * sky, 42.40 * skx, 13.30 * sky);
		c.close();
		c.moveTo(40.40 * skx, 10.90* sky);
		c.lineTo(44.40 * skx,10.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 45.80* skx, 11.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 45.50* skx, 13.00* sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 0, 43.90* skx, 17.30* sky);
		c.arcTo(7.20 * skx, 7.20 * sky, 0, 0, 0, 47.40* skx, 15.60* sky);
		c.curveTo(47.90 * skx, 15.20 * sky, 48.40 * skx, 14.80 * sky, 49.00 * skx, 15.10 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 49.70* skx, 16.60* sky);
		c.arcTo(5.30 * skx, 5.30 * sky, 0, 0, 0, 50.80* skx, 19.70* sky);
		c.curveTo(51.40 * skx, 17.50 * sky, 51.80 * skx, 15.40 * sky, 50.90 * skx, 13.30 * sky);
		c.lineTo(50.30* skx,12.00* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 50.60* skx, 10.10* sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 0, 52.10* skx, 8.10* sky);
		c.arcTo(17.00 * skx, 17.00 * sky, 0, 0, 0, 54.70* skx, 3.10* sky);
		c.curveTo(53.30 * skx, 4.50 * sky, 52.00 * skx, 5.90 * sky, 50.80 * skx, 7.40 * sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 45.10* skx, 9.70* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 0, 40.40* skx, 10.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(12.40 * skx, 39.20* sky);
		c.curveTo(11.70 * skx, 39.10 * sky, 11.20 * skx, 38.80 * sky, 11.10 * skx, 38.20 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 12.00* skx, 36.80* sky);
		c.arcTo(37.90 * skx, 37.90 * sky, 0, 0, 0, 16.80* skx, 35.40* sky);
		c.arcTo(42.50 * skx, 42.50 * sky, 0, 0, 0, 35.20* skx, 22.00* sky);
		c.arcTo(0.30 * skx, 0.30 * sky, 0, 0, 1, 35.30* skx, 21.80* sky);
		c.curveTo(35.90 * skx, 21.10 * sky, 36.50 * skx, 21.00 * sky, 37.10 * skx, 21.40 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 37.20* skx, 23.20* sky);
		c.arcTo(15.80 * skx, 15.80 * sky, 0, 0, 1, 36.00* skx, 24.70* sky);
		c.arcTo(43.60 * skx, 43.60 * sky, 0, 0, 1, 13.10* skx, 39.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mb13ff2d8c1530b29e12893ddb0687bd', mb13ff2d8c1530b29e12893ddb0687bd);
	mb13ff2d8c1530b29e12893ddb0687bd.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m1e0aed904a00dba964bb794325a14dd() {
		mxActor.call(this);
	};
	mxUtils.extend(m1e0aed904a00dba964bb794325a14dd, mxActor);
	m1e0aed904a00dba964bb794325a14dd.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 70;
		h1 = 60;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(33.10 * skx, 52.50* sky);
		c.lineTo(29.60* skx,51.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 28.60* skx, 51.90* sky);
		c.curveTo(26.80 * skx, 52.60 * sky, 25.10 * skx, 53.50 * sky, 23.30 * skx, 54.00 * sky);
		c.curveTo(19.00 * skx, 55.10 * sky, 15.50 * skx, 52.30 * sky, 15.30 * skx, 47.90 * sky);
		c.curveTo(15.20 * skx, 46.30 * sky, 15.30 * skx, 44.70 * sky, 15.20 * skx, 43.10 * sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 0, 15.00* skx, 41.80* sky);
		c.curveTo(12.60 * skx, 43.60 * sky, 9.90 * skx, 44.20 * sky, 7.20 * skx, 44.70 * sky);
		c.curveTo(4.5 * skx, 45.2 * sky, 3.90 * skx, 45.10 * sky, 2.70 * skx, 43.80 * sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 1.00* skx, 40.70* sky);
		c.arcTo(43.90 * skx, 43.90 * sky, 0, 0, 1, 1.00* skx, 22.30* sky);
		c.arcTo(8.30 * skx, 8.30 * sky, 0, 0, 1, 2.70* skx, 19.30* sky);
		c.curveTo(3.80 * skx, 18.00 * sky, 5.40 * skx, 17.90 * sky, 7.00 * skx, 18.20 * sky);
		c.lineTo(12.30* skx,19.50* sky);
		c.curveTo(12.30 * skx, 18.10 * sky, 12.20 * skx, 16.60 * sky, 12.30 * skx, 15.10 * sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 1, 20.20* skx, 9.30* sky);
		c.curveTo(22.00 * skx, 9.80 * sky, 23.80 * skx, 10.50 * sky, 25.70 * skx, 11.20 * sky);
		c.lineTo(25.70* skx,8.70 * sky);
		c.curveTo(25.70 * skx, 2.30 * sky, 30.90 * skx, -1.40 * sky, 37.00 * skx, 0.50 * sky);
		c.curveTo(40.60 * skx, 1.70 * sky, 44.10 * skx, 3.20 * sky, 46.90 * skx, 6.00 * sky);
		c.arcTo(53.00 * skx, 53.00 * sky, 0, 0, 1, 50.30* skx, 10.50* sky);
		c.curveTo(50.70 * skx, 11.00 * sky, 51.10 * skx, 11.60 * sky, 51.60 * skx, 11.80 * sky);
		c.arcTo(38.50 * skx, 38.50 * sky, 0, 0, 1, 66.50* skx, 23.70* sky);
		c.curveTo(68.30 * skx, 26.30 * sky, 69.60 * skx, 29.00 * sky, 69.40 * skx, 32.20 * sky);
		c.curveTo(69.20000000000002 * skx, 35.400000000000006 * sky, 68.10 * skx, 36.40 * sky, 66.80 * skx, 38.20 * sky);
		c.arcTo(33.10 * skx, 33.10 * sky, 0, 0, 1, 52.80* skx, 50.40* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 51.80* skx, 51.50* sky);
		c.arcTo(12.50 * skx, 12.50 * sky, 0, 0, 1, 39.00* skx, 59.80* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 33.20* skx, 53.90* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 0, 33.10* skx, 52.50* sky);
		c.close();
		c.moveTo(45.10 * skx, 17.40* sky);
		c.arcTo(20.70 * skx, 20.70 * sky, 0, 0, 0, 27.50* skx, 19.00* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 26.50* skx, 20.20* sky);
		c.arcTo(28.80 * skx, 28.80 * sky, 0, 0, 0, 26.30* skx, 41.40* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 0, 27.40* skx, 42.60* sky);
		c.arcTo(26.10 * skx, 26.10 * sky, 0, 0, 0, 42.40* skx, 45.60* sky);
		c.lineTo(45.30* skx,45.10* sky);
		c.curveTo(41.40 * skx, 35.80 * sky, 40.50 * skx, 26.60 * sky, 45.10 * skx, 17.40 * sky);
		c.close();
		c.moveTo(55.50 * skx, 29.30* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 53.30* skx, 27.10* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 51.10* skx, 29.20* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 53.30* skx, 31.50* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 55.50* skx, 29.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m1e0aed904a00dba964bb794325a14dd', m1e0aed904a00dba964bb794325a14dd);
	m1e0aed904a00dba964bb794325a14dd.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mccc7e03f492246cdee1f2134ab8ba02() {
		mxActor.call(this);
	};
	mxUtils.extend(mccc7e03f492246cdee1f2134ab8ba02, mxActor);
	mccc7e03f492246cdee1f2134ab8ba02.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 63;
		h1 = 47;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(26.70 * skx, 38.20* sky);
		c.lineTo(23.40* skx,39.50* sky);
		c.arcTo(11.30 * skx, 11.30 * sky, 0, 0, 1, 14.40* skx, 38.90* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 13.80* skx, 37.90* sky);
		c.lineTo(14.40* skx,31.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 12.50* skx, 29.70* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 0, 12.00* skx, 30.10* sky);
		c.lineTo(9.40* skx,32.40* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 1.60* skx, 30.80* sky);
		c.arcTo(13.00 * skx, 13.00 * sky, 0, 0, 1, 0.20* skx, 26.60* sky);
		c.arcTo(18.80 * skx, 18.80 * sky, 0, 0, 1, 0.90* skx, 17.80* sky);
		c.curveTo(1.70 * skx, 15.70 * sky, 3.00 * skx, 14.00 * sky, 5.40 * skx, 13.60 * sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 1, 8.60* skx, 14.50* sky);
		c.lineTo(11.60* skx,17.30* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 13.30* skx, 17.60* sky);
		c.curveTo(14.10 * skx, 17.30 * sky, 14.00 * skx, 16.80 * sky, 13.90 * skx, 16.20 * sky);
		c.arcTo(11.30 * skx, 11.30 * sky, 0, 0, 1, 14.90* skx, 9.70* sky);
		c.curveTo(15.30 * skx, 9.00 * sky, 15.60 * skx, 8.70 * sky, 16.40 * skx, 8.70 * sky);
		c.arcTo(20.20 * skx, 20.20 * sky, 0, 0, 1, 23.40* skx, 10.00* sky);
		c.lineTo(24.80* skx,10.50* sky);
		c.curveTo(25.10 * skx, 8.90 * sky, 25.40 * skx, 7.40 * sky, 25.80 * skx, 5.90 * sky);
		c.arcTo(50.80 * skx, 50.80 * sky, 0, 0, 1, 27.30* skx, 0.70* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 28.30* skx, 0.00* sky);
		c.arcTo(31.60 * skx, 31.60 * sky, 0, 0, 1, 39.50* skx, 3.00* sky);
		c.arcTo(17.20 * skx, 17.20 * sky, 0, 0, 1, 44.70* skx, 7.10* sky);
		c.arcTo(5.20 * skx, 5.20 * sky, 0, 0, 0, 46.80* skx, 8.50* sky);
		c.arcTo(31.80 * skx, 31.80 * sky, 0, 0, 1, 60.70* skx, 18.90* sky);
		c.curveTo(63.30 * skx, 22.40 * sky, 63.30 * skx, 25.50 * sky, 60.80 * skx, 29.00 * sky);
		c.arcTo(27.90 * skx, 27.90 * sky, 0, 0, 1, 47.20* skx, 38.80* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 45.80* skx, 39.80* sky);
		c.arcTo(19.00 * skx, 19.00 * sky, 0, 0, 1, 30.30* skx, 47.10* sky);
		c.curveTo(29.60 * skx, 47.10 * sky, 29.10 * skx, 46.90 * sky, 28.90 * skx, 46.20 * sky);
		c.curveTo(28.20 * skx, 43.90 * sky, 27.60 * skx, 41.70 * sky, 26.90 * skx, 39.50 * sky);
		c.curveTo(26.80 * skx, 39.10 * sky, 26.80 * skx, 38.80 * sky, 26.70 * skx, 38.20 * sky);
		c.close();
		c.moveTo(26.90 * skx, 23.30* sky);
		c.curveTo(26.90 * skx, 23.80 * sky, 27.00 * skx, 24.70 * sky, 27.10 * skx, 25.60 * sky);
		c.arcTo(29.30 * skx, 29.30 * sky, 0, 0, 0, 30.10* skx, 33.70* sky);
		c.arcTo(16.80 * skx, 16.80 * sky, 0, 0, 1, 30.80* skx, 36.10* sky);
		c.lineTo(32.00* skx,41.20* sky);
		c.curveTo(32.20 * skx, 42.00 * sky, 32.60 * skx, 42.20 * sky, 33.40 * skx, 42.00 * sky);
		c.arcTo(20.20 * skx, 20.20 * sky, 0, 0, 0, 40.80* skx, 38.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 41.10* skx, 37.10* sky);
		c.arcTo(31.30 * skx, 31.30 * sky, 0, 0, 1, 38.40* skx, 27.60* sky);
		c.arcTo(32.10 * skx, 32.10 * sky, 0, 0, 1, 40.70* skx, 10.50* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 40.40* skx, 9.00* sky);
		c.curveTo(37.80 * skx, 6.80 * sky, 34.70 * skx, 5.90 * sky, 31.50 * skx, 5.20 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 30.40* skx, 5.90* sky);
		c.curveTo(30.10 * skx, 6.90 * sky, 29.80 * skx, 8.00 * sky, 29.60 * skx, 9.00 * sky);
		c.curveTo(29.400000000000002 * skx, 10.0 * sky, 29.20 * skx, 12.30 * sky, 28.70 * skx, 13.90 * sky);
		c.arcTo(38.30 * skx, 38.30 * sky, 0, 0, 0, 26.90* skx, 23.30* sky);
		c.close();
		c.moveTo(42.60 * skx, 23.40* sky);
		c.arcTo(26.00 * skx, 26.00 * sky, 0, 0, 0, 44.20* skx, 32.90* sky);
		c.curveTo(45.00 * skx, 34.90 * sky, 45.00 * skx, 35.00 * sky, 46.90 * skx, 34.20 * sky);
		c.curveTo(51.10 * skx, 32.50 * sky, 54.70 * skx, 30.20 * sky, 57.00 * skx, 26.20 * sky);
		c.curveTo(58.60 * skx, 23.70 * sky, 58.90 * skx, 23.80 * sky, 56.70 * skx, 21.00 * sky);
		c.arcTo(26.80 * skx, 26.80 * sky, 0, 0, 0, 45.70* skx, 12.90* sky);
		c.curveTo(44.90 * skx, 12.50 * sky, 44.60 * skx, 12.70 * sky, 44.30 * skx, 13.50 * sky);
		c.arcTo(27.90 * skx, 27.90 * sky, 0, 0, 0, 42.60* skx, 23.40* sky);
		c.close();
		c.moveTo(18.60 * skx, 13.50* sky);
		c.lineTo(18.60* skx,17.90 * sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 18.60* skx, 19.30* sky);
		c.arcTo(13.60 * skx, 13.60 * sky, 0, 0, 0, 19.30* skx, 29.20* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 19.40* skx, 30.10* sky);
		c.lineTo(18.50* skx,34.40* sky);
		c.curveTo(18.30 * skx, 35.10 * sky, 18.70 * skx, 35.50 * sky, 19.40 * skx, 35.40 * sky);
		c.lineTo(24.00* skx,34.50* sky);
		c.curveTo(24.90 * skx, 34.30 * sky, 25.10 * skx, 33.80 * sky, 24.70 * skx, 32.90 * sky);
		c.arcTo(20.30 * skx, 20.30 * sky, 0, 0, 1, 22.40* skx, 23.00* sky);
		c.curveTo(22.60 * skx, 20.70 * sky, 23.00 * skx, 18.50 * sky, 23.30 * skx, 16.30 * sky);
		c.curveTo(23.40 * skx, 15.80 * sky, 24.00 * skx, 15.10 * sky, 23.10 * skx, 14.80 * sky);
		c.curveTo(22.200000000000003 * skx, 14.500000000000002 * sky, 20.30 * skx, 14.00 * sky, 18.60 * skx, 13.50 * sky);
		c.close();
		c.moveTo(13.40 * skx, 22.20* sky);
		c.lineTo(12.30* skx,22.40* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 9.50* skx, 21.60* sky);
		c.lineTo(6.80* skx,18.80* sky);
		c.curveTo(6.00 * skx, 18.00 * sky, 5.70 * skx, 18.00 * sky, 5.20 * skx, 19.20 * sky);
		c.arcTo(13.10 * skx, 13.10 * sky, 0, 0, 0, 4.60* skx, 25.40* sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 0, 5.20* skx, 28.00* sky);
		c.curveTo(5.70 * skx, 29.30 * sky, 6.20 * skx, 29.50 * sky, 7.20 * skx, 28.50 * sky);
		c.arcTo(17.50 * skx, 17.50 * sky, 0, 0, 0, 9.50* skx, 26.10* sky);
		c.curveTo(10.30 * skx, 25.00 * sky, 11.10 * skx, 24.40 * sky, 12.60 * skx, 24.80 * sky);
		c.lineTo(13.40 * skx,24.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(51.60 * skx, 24.60* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 49.30* skx, 22.50* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 51.50* skx, 20.30* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 53.70* skx, 22.50* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 51.60* skx, 24.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mccc7e03f492246cdee1f2134ab8ba02', mccc7e03f492246cdee1f2134ab8ba02);
	mccc7e03f492246cdee1f2134ab8ba02.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mecedc43bf70c10bf483c903fa18c196() {
		mxActor.call(this);
	};
	mxUtils.extend(mecedc43bf70c10bf483c903fa18c196, mxActor);
	mecedc43bf70c10bf483c903fa18c196.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 54;
		h1 = 63;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(7.90 * skx, 14.90* sky);
		c.curveTo(7.80 * skx, 16.40 * sky, 7.60 * skx, 17.80 * sky, 7.50 * skx, 19.20 * sky);
		c.arcTo(54.50 * skx, 54.50 * sky, 0, 0, 0, 7.90* skx, 29.90* sky);
		c.arcTo(59.70 * skx, 59.70 * sky, 0, 0, 0, 13.80* skx, 48.40* sky);
		c.curveTo(14.50 * skx, 49.90 * sky, 15.40 * skx, 51.30 * sky, 16.20 * skx, 52.70 * sky);
		c.curveTo(17.0 * skx, 54.10000000000001 * sky, 17.40 * skx, 53.90 * sky, 18.20 * skx, 53.40 * sky);
		c.curveTo(19.0 * skx, 52.9 * sky, 19.10 * skx, 52.20 * sky, 18.50 * skx, 51.20 * sky);
		c.arcTo(57.90 * skx, 57.90 * sky, 0, 0, 1, 12.90* skx, 39.40* sky);
		c.arcTo(61.80 * skx, 61.80 * sky, 0, 0, 1, 10.10* skx, 25.30* sky);
		c.arcTo(43.30 * skx, 43.30 * sky, 0, 0, 1, 10.80* skx, 14.50* sky);
		c.curveTo(11.20 * skx, 11.80 * sky, 12.90 * skx, 10.00 * sky, 15.00 * skx, 8.60 * sky);
		c.curveTo(19.20 * skx, 5.60 * sky, 25.90 * skx, 6.30 * sky, 30.00 * skx, 9.60 * sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 1, 31.00* skx, 10.50* sky);
		c.curveTo(32.10 * skx, 11.70 * sky, 33.20 * skx, 11.60 * sky, 34.50 * skx, 10.90 * sky);
		c.arcTo(14.50 * skx, 14.50 * sky, 0, 0, 1, 45.50* skx, 9.80* sky);
		c.curveTo(49.50 * skx, 10.90 * sky, 51.90 * skx, 13.70 * sky, 53.10 * skx, 17.60 * sky);
		c.arcTo(22.00 * skx, 22.00 * sky, 0, 0, 1, 53.20* skx, 28.70* sky);
		c.curveTo(51.70 * skx, 36.50 * sky, 49.00 * skx, 43.90 * sky, 46.60 * skx, 51.30 * sky);
		c.arcTo(24.10 * skx, 24.10 * sky, 0, 0, 1, 42.80* skx, 59.40* sky);
		c.curveTo(39.60 * skx, 63.40 * sky, 35.20 * skx, 64.40 * sky, 30.60 * skx, 62.20 * sky);
		c.lineTo(30.10* skx,61.90* sky);
		c.curveTo(27.80 * skx, 60.40 * sky, 25.70 * skx, 60.80 * sky, 23.40 * skx, 62.10 * sky);
		c.arcTo(9.70 * skx, 9.70 * sky, 0, 0, 1, 10.40* skx, 58.70* sky);
		c.arcTo(26.40 * skx, 26.40 * sky, 0, 0, 1, 7.10* skx, 51.00* sky);
		c.curveTo(5.90 * skx, 47.40 * sky, 4.60 * skx, 43.80 * sky, 3.20 * skx, 40.30 * sky);
		c.curveTo(1.8000000000000007 * skx, 36.8 * sky, 0.10 * skx, 31.20 * sky, 0.00 * skx, 26.30 * sky);
		c.curveTo(-0.1 * skx, 21.400000000000002 * sky, 1.40 * skx, 17.20 * sky, 6.80 * skx, 15.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(36.60 * skx, 2.30* sky);
		c.lineTo(36.00* skx,3.10* sky);
		c.curveTo(34.80 * skx, 4.40 * sky, 33.50 * skx, 5.70 * sky, 32.30 * skx, 7.10 * sky);
		c.curveTo(31.099999999999994 * skx, 8.5 * sky, 31.70 * skx, 7.60 * sky, 31.30 * skx, 7.30 * sky);
		c.lineTo(29.20* skx,5.90* sky);
		c.curveTo(28.80 * skx, 5.60 * sky, 28.50 * skx, 5.30 * sky, 28.80 * skx, 4.90 * sky);
		c.curveTo(29.1 * skx, 4.500000000000001 * sky, 30.80 * skx, 1.80 * sky, 31.90 * skx, 0.40 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 33.30* skx, 0.10* sky);
		c.arcTo(14.70 * skx, 14.70 * sky, 0, 0, 1, 36.10* skx, 1.50* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 1, 36.60* skx, 2.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mecedc43bf70c10bf483c903fa18c196', mecedc43bf70c10bf483c903fa18c196);
	mecedc43bf70c10bf483c903fa18c196.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m559490624c70bb08707fcbbefbdce5a() {
		mxActor.call(this);
	};
	mxUtils.extend(m559490624c70bb08707fcbbefbdce5a, mxActor);
	m559490624c70bb08707fcbbefbdce5a.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 54;
		h1 = 64;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(26.60 * skx, 7.80* sky);
		c.arcTo(18.60 * skx, 18.60 * sky, 0, 0, 1, 30.60* skx, 1.20* sky);
		c.curveTo(31.80 * skx, -0.10 * sky, 32.50 * skx, -0.30 * sky, 34.30 * skx, 0.50 * sky);
		c.lineTo(36.80* skx,1.90* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 37.00* skx, 5.60* sky);
		c.curveTo(35.90 * skx, 6.50 * sky, 34.80 * skx, 7.40 * sky, 33.80 * skx, 8.40 * sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 0, 32.40* skx, 10.30* sky);
		c.curveTo(32.30 * skx, 10.70 * sky, 32.30 * skx, 11.10 * sky, 32.20 * skx, 11.50 * sky);
		c.curveTo(32.10000000000001 * skx, 11.9 * sky, 33.10 * skx, 11.60 * sky, 33.40 * skx, 11.40 * sky);
		c.lineTo(36.20* skx,10.30* sky);
		c.arcTo(15.20 * skx, 15.20 * sky, 0, 0, 1, 44.90* skx, 9.80* sky);
		c.curveTo(49.70 * skx, 10.90 * sky, 52.70 * skx, 14.50 * sky, 53.60 * skx, 19.70 * sky);
		c.arcTo(28.70 * skx, 28.70 * sky, 0, 0, 1, 52.50* skx, 32.40* sky);
		c.curveTo(50.30 * skx, 39.70 * sky, 48.00 * skx, 46.90 * sky, 45.70 * skx, 54.10 * sky);
		c.arcTo(14.20 * skx, 14.20 * sky, 0, 0, 1, 41.50* skx, 60.90* sky);
		c.arcTo(8.90 * skx, 8.90 * sky, 0, 0, 1, 31.60* skx, 62.80* sky);
		c.lineTo(28.50* skx,61.40* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 25.30* skx, 61.40* sky);
		c.lineTo(23.10* skx,62.40* sky);
		c.curveTo(18.40 * skx, 64.50 * sky, 13.70 * skx, 63.50 * sky, 10.80 * skx, 59.30 * sky);
		c.arcTo(25.90 * skx, 25.90 * sky, 0, 0, 1, 7.80* skx, 53.30* sky);
		c.curveTo(6.10 * skx, 48.90 * sky, 4.60 * skx, 44.50 * sky, 3.00 * skx, 40.00 * sky);
		c.curveTo(1.4000000000000004 * skx, 35.5 * sky, -0.10 * skx, 30.70 * sky, 0.00 * skx, 25.70 * sky);
		c.curveTo(0.10 * skx, 22.20 * sky, 1.20 * skx, 19.10 * sky, 4.00 * skx, 16.90 * sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 1, 9.60* skx, 14.70* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 10.80* skx, 14.10* sky);
		c.curveTo(13.60 * skx, 7.90 * sky, 19.40 * skx, 5.30 * sky, 25.80 * skx, 7.50 * sky);
		c.close();
		c.moveTo(9.80 * skx, 17.40* sky);
		c.lineTo(9.20 * skx,17.40* sky);
		c.curveTo(5.30 * skx, 18.20 * sky, 2.90 * skx, 21.10 * sky, 2.70 * skx, 25.30 * sky);
		c.arcTo(35.00 * skx, 35.00 * sky, 0, 0, 0, 5.10* skx, 37.70* sky);
		c.curveTo(6.90 * skx, 42.90 * sky, 8.70 * skx, 48.00 * sky, 10.60 * skx, 53.20 * sky);
		c.arcTo(23.80 * skx, 23.80 * sky, 0, 0, 0, 12.90* skx, 57.70* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 0, 21.80* skx, 60.00* sky);
		c.lineTo(24.30* skx,58.90* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 29.40* skx, 58.80* sky);
		c.lineTo(32.40* skx,60.20* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 40.60* skx, 57.90* sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 0, 43.10* skx, 53.20* sky);
		c.curveTo(45.40 * skx, 46.30 * sky, 47.60 * skx, 39.40 * sky, 49.60 * skx, 32.50 * sky);
		c.curveTo(50.70 * skx, 28.70 * sky, 51.50 * skx, 24.90 * sky, 51.00 * skx, 21.00 * sky);
		c.curveTo(50.40 * skx, 15.00 * sky, 46.70 * skx, 11.80 * sky, 40.80 * skx, 12.10 * sky);
		c.arcTo(13.00 * skx, 13.00 * sky, 0, 0, 0, 35.10* skx, 13.80* sky);
		c.curveTo(33.10 * skx, 14.80 * sky, 31.40 * skx, 14.70 * sky, 29.80 * skx, 13.10 * sky);
		c.arcTo(28.00 * skx, 28.00 * sky, 0, 0, 0, 26.30* skx, 10.60* sky);
		c.curveTo(20.70 * skx, 7.70 * sky, 14.70 * skx, 10.10 * sky, 13.10 * skx, 15.80 * sky);
		c.arcTo(29.40 * skx, 29.40 * sky, 0, 0, 0, 12.00* skx, 22.40* sky);
		c.curveTo(11.50 * skx, 30.50 * sky, 13.30 * skx, 38.30 * sky, 16.20 * skx, 45.90 * sky);
		c.curveTo(16.90 * skx, 47.90 * sky, 17.80 * skx, 49.80 * sky, 18.60 * skx, 51.80 * sky);
		c.lineTo(18.00* skx,52.10* sky);
		c.arcTo(12.80 * skx, 12.80 * sky, 0, 0, 1, 16.30* skx, 53.10* sky);
		c.curveTo(10.90 * skx, 41.70 * sky, 7.90 * skx, 30.00 * sky, 9.80 * skx, 17.40 * sky);
		c.close();
		c.moveTo(34.80 * skx, 3.80* sky);
		c.lineTo(32.90* skx,2.70* sky);
		c.arcTo(15.70 * skx, 15.70 * sky, 0, 0, 0, 29.30* skx, 8.40* sky);
		c.curveTo(29.10 * skx, 8.90 * sky, 29.10 * skx, 9.40 * sky, 29.80 * skx, 9.50 * sky);
		c.arcTo(13.70 * skx, 13.70 * sky, 0, 0, 1, 34.80* skx, 3.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m559490624c70bb08707fcbbefbdce5a', m559490624c70bb08707fcbbefbdce5a);
	m559490624c70bb08707fcbbefbdce5a.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m9cf0117d83db5d3af37f6ff4fdcff14() {
		mxActor.call(this);
	};
	mxUtils.extend(m9cf0117d83db5d3af37f6ff4fdcff14, mxActor);
	m9cf0117d83db5d3af37f6ff4fdcff14.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 41;
		h1 = 52;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(37.40 * skx, 20.00* sky);
		c.arcTo(34.40 * skx, 34.40 * sky, 0, 0, 1, 40.30* skx, 24.20* sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 1, 32.10* skx, 38.40* sky);
		c.arcTo(71.80 * skx, 71.80 * sky, 0, 0, 1, 24.10* skx, 38.60* sky);
		c.curveTo(23.30 * skx, 38.60 * sky, 23.10 * skx, 38.90 * sky, 23.10 * skx, 39.60 * sky);
		c.arcTo(56.10 * skx, 56.10 * sky, 0, 0, 1, 23.10* skx, 45.40* sky);
		c.curveTo(23.10 * skx, 46.20 * sky, 23.40 * skx, 46.40 * sky, 24.10 * skx, 46.30 * sky);
		c.curveTo(24.800000000000004 * skx, 46.199999999999996 * sky, 28.10 * skx, 46.40 * sky, 30.10 * skx, 46.30 * sky);
		c.curveTo(32.1 * skx, 46.199999999999996 * sky, 30.90 * skx, 46.50 * sky, 30.90 * skx, 47.10 * sky);
		c.lineTo(30.90* skx,50.70 * sky);
		c.curveTo(30.90 * skx, 51.20 * sky, 30.80 * skx, 51.50 * sky, 30.30 * skx, 51.50 * sky);
		c.lineTo(10.40 * skx,51.50* sky);
		c.lineTo(10.40* skx,46.50 * sky);
		c.lineTo(13.30 * skx,46.50* sky);
		c.curveTo(14.70 * skx, 46.50 * sky, 16.00 * skx, 46.60 * sky, 17.40 * skx, 46.50 * sky);
		c.curveTo(18.799999999999997 * skx, 46.4 * sky, 18.00 * skx, 46.20 * sky, 18.00 * skx, 46.10 * sky);
		c.lineTo(18.00* skx,39.10 * sky);
		c.curveTo(18.00 * skx, 39.00 * sky, 17.90 * skx, 39.00 * sky, 17.80 * skx, 38.80 * sky);
		c.lineTo(12.40 * skx,38.80* sky);
		c.arcTo(16.00 * skx, 16.00 * sky, 0, 0, 1, 6.70* skx, 38.10* sky);
		c.arcTo(10.20 * skx, 10.20 * sky, 0, 0, 1, 3.30* skx, 20.80* sky);
		c.lineTo(4.10* skx,20.10* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 2.70* skx, 14.40* sky);
		c.curveTo(3.00 * skx, 11.60 * sky, 5.30 * skx, 8.70 * sky, 8.00 * skx, 8.20 * sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 0, 11.60* skx, 5.50* sky);
		c.arcTo(9.40 * skx, 9.40 * sky, 0, 0, 1, 21.30* skx, -0.00* sky);
		c.arcTo(9.80 * skx, 9.80 * sky, 0, 0, 1, 30.10* skx, 6.60* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 31.60* skx, 7.80* sky);
		c.curveTo(36.40 * skx, 8.40 * sky, 39.00 * skx, 12.60 * sky, 38.60 * skx, 15.90 * sky);
		c.arcTo(24.50 * skx, 24.50 * sky, 0, 0, 1, 37.40* skx, 20.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m9cf0117d83db5d3af37f6ff4fdcff14', m9cf0117d83db5d3af37f6ff4fdcff14);
	m9cf0117d83db5d3af37f6ff4fdcff14.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m7c744f2bd1486f51ea3b9322813f6eb() {
		mxActor.call(this);
	};
	mxUtils.extend(m7c744f2bd1486f51ea3b9322813f6eb, mxActor);
	m7c744f2bd1486f51ea3b9322813f6eb.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 45;
		h1 = 54;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(24.80 * skx, 43.20* sky);
		c.lineTo(24.80* skx,50.60 * sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 24.70* skx, 51.90* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 22.70* skx, 53.50* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 20.70* skx, 52.00* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 1, 20.60* skx, 50.70* sky);
		c.lineTo(20.60* skx,43.20 * sky);
		c.lineTo(18.80 * skx,43.20* sky);
		c.arcTo(21.50 * skx, 21.50 * sky, 0, 0, 1, 11.20* skx, 42.30* sky);
		c.arcTo(15.50 * skx, 15.50 * sky, 0, 0, 1, 0.90* skx, 31.80* sky);
		c.arcTo(15.90 * skx, 15.90 * sky, 0, 0, 1, 4.40* skx, 15.60* sky);
		c.arcTo(16.20 * skx, 16.20 * sky, 0, 0, 1, 9.60* skx, 11.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 10.50* skx, 10.70* sky);
		c.arcTo(12.10 * skx, 12.10 * sky, 0, 0, 1, 20.30* skx, 0.30* sky);
		c.arcTo(12.20 * skx, 12.20 * sky, 0, 0, 1, 34.80* skx, 10.30* sky);
		c.arcTo(25.40 * skx, 25.40 * sky, 0, 0, 1, 34.90* skx, 14.20* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 35.50* skx, 15.20* sky);
		c.arcTo(14.00 * skx, 14.00 * sky, 0, 0, 1, 44.80* skx, 25.20* sky);
		c.arcTo(14.30 * skx, 14.30 * sky, 0, 0, 1, 38.10* skx, 41.30* sky);
		c.arcTo(13.90 * skx, 13.90 * sky, 0, 0, 1, 30.70* skx, 43.20* sky);
		c.curveTo(28.70 * skx, 43.10 * sky, 26.80 * skx, 43.20 * sky, 24.80 * skx, 43.20 * sky);
		c.close();
		c.moveTo(20.60 * skx, 23.60* sky);
		c.lineTo(19.50* skx,23.30* sky);
		c.lineTo(13.30* skx,20.80* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 10.50* skx, 22.00* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 11.80* skx, 24.60* sky);
		c.lineTo(19.90* skx,27.90* sky);
		c.curveTo(20.50 * skx, 28.10 * sky, 20.60 * skx, 28.40 * sky, 20.60 * skx, 29.00 * sky);
		c.lineTo(20.60* skx,42.00 * sky);
		c.curveTo(20.60 * skx, 42.40 * sky, 20.70 * skx, 42.80 * sky, 20.70 * skx, 43.20 * sky);
		c.lineTo(24.70 * skx,43.20* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 0, 24.80* skx, 42.10* sky);
		c.lineTo(24.80* skx,37.20 * sky);
		c.curveTo(24.70 * skx, 36.50 * sky, 25.00 * skx, 36.10 * sky, 25.70 * skx, 35.80 * sky);
		c.lineTo(31.70* skx,32.80* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 32.90* skx, 30.30* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 30.50* skx, 28.90* sky);
		c.arcTo(10.70 * skx, 10.70 * sky, 0, 0, 0, 28.30* skx, 29.90* sky);
		c.lineTo(24.80* skx,31.60* sky);
		c.lineTo(24.80* skx,17.30 * sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 24.70* skx, 16.30* sky);
		c.curveTo(24.50 * skx, 15.00 * sky, 23.70 * skx, 14.30 * sky, 22.60 * skx, 14.40 * sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 20.60* skx, 16.50* sky);
		c.lineTo(20.60* skx,23.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m7c744f2bd1486f51ea3b9322813f6eb', m7c744f2bd1486f51ea3b9322813f6eb);
	m7c744f2bd1486f51ea3b9322813f6eb.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mdb2aeed6f260afeb1ebe0cf32eb1fde() {
		mxActor.call(this);
	};
	mxUtils.extend(mdb2aeed6f260afeb1ebe0cf32eb1fde, mxActor);
	mdb2aeed6f260afeb1ebe0cf32eb1fde.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 41;
		h1 = 52;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(10.30 * skx, 51.50* sky);
		c.lineTo(10.30* skx,46.40 * sky);
		c.lineTo(17.90 * skx,46.40* sky);
		c.lineTo(17.90* skx,38.70 * sky);
		c.curveTo(16.00 * skx, 38.70 * sky, 14.10 * skx, 38.60 * sky, 12.30 * skx, 38.70 * sky);
		c.arcTo(16.90 * skx, 16.90 * sky, 0, 0, 1, 6.40* skx, 37.80* sky);
		c.arcTo(9.80 * skx, 9.80 * sky, 0, 0, 1, 2.70* skx, 21.80* sky);
		c.curveTo(3.80 * skx, 20.60 * sky, 4.00 * skx, 19.90 * sky, 3.20 * skx, 18.30 * sky);
		c.curveTo(1.00 * skx, 13.80 * sky, 4.30 * skx, 8.40 * sky, 9.50 * skx, 7.80 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 11.20* skx, 6.60* sky);
		c.arcTo(9.90 * skx, 9.90 * sky, 0, 0, 1, 27.30* skx, 2.70* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 1, 30.00* skx, 6.90* sky);
		c.curveTo(30.20 * skx, 7.50 * sky, 30.50 * skx, 7.70 * sky, 31.20 * skx, 7.80 * sky);
		c.arcTo(7.60 * skx, 7.60 * sky, 0, 0, 1, 38.10* skx, 12.80* sky);
		c.arcTo(7.50 * skx, 7.50 * sky, 0, 0, 1, 37.30* skx, 19.60* sky);
		c.curveTo(37.00 * skx, 20.10 * sky, 36.90 * skx, 20.30 * sky, 37.40 * skx, 20.80 * sky);
		c.curveTo(40.60 * skx, 23.60 * sky, 41.90 * skx, 27.10 * sky, 40.70 * skx, 31.20 * sky);
		c.curveTo(39.50000000000001 * skx, 35.3 * sky, 36.10 * skx, 38.00 * sky, 31.60 * skx, 38.50 * sky);
		c.arcTo(47.00 * skx, 47.00 * sky, 0, 0, 1, 24.10* skx, 38.60* sky);
		c.curveTo(23.30 * skx, 38.60 * sky, 23.00 * skx, 38.80 * sky, 23.10 * skx, 39.60 * sky);
		c.lineTo(23.10* skx,45.50 * sky);
		c.curveTo(23.10 * skx, 46.10 * sky, 23.30 * skx, 46.40 * sky, 23.90 * skx, 46.40 * sky);
		c.lineTo(30.10 * skx,46.40* sky);
		c.curveTo(30.60 * skx, 46.40 * sky, 30.90 * skx, 46.60 * sky, 30.80 * skx, 47.20 * sky);
		c.curveTo(30.700000000000003 * skx, 47.800000000000004 * sky, 30.90 * skx, 49.70 * sky, 30.80 * skx, 50.90 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 30.20* skx, 51.50* sky);
		c.close();
		c.moveTo(15.40 * skx, 12.90* sky);
		c.lineTo(10.30 * skx,12.90* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 7.80* skx, 15.00* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 9.60* skx, 17.90* sky);
		c.curveTo(10.20 * skx, 18.10 * sky, 10.30 * skx, 18.30 * sky, 10.30 * skx, 18.80 * sky);
		c.curveTo(10.3 * skx, 19.3 * sky, 10.20 * skx, 21.00 * sky, 10.30 * skx, 22.10 * sky);
		c.curveTo(10.400000000000002 * skx, 23.200000000000003 * sky, 10.10 * skx, 23.10 * sky, 9.30 * skx, 23.30 * sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 5.30* skx, 26.90* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 0, 6.90* skx, 32.10* sky);
		c.arcTo(6.20 * skx, 6.20 * sky, 0, 0, 0, 11.20* skx, 33.50* sky);
		c.lineTo(29.40 * skx,33.50* sky);
		c.lineTo(31.50* skx,33.30* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 0, 31.50* skx, 23.20* sky);
		c.curveTo(31.00 * skx, 23.10 * sky, 30.80 * skx, 23.00 * sky, 30.80 * skx, 22.50 * sky);
		c.lineTo(30.80* skx,18.70 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 31.40* skx, 18.00* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 0, 33.40* skx, 15.30* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 30.60* skx, 12.90* sky);
		c.lineTo(27.90 * skx,12.90* sky);
		c.curveTo(25.80 * skx, 12.90 * sky, 25.80 * skx, 12.90 * sky, 25.70 * skx, 10.70 * sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 0, 23.10* skx, 5.90* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 0, 15.40* skx, 10.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mdb2aeed6f260afeb1ebe0cf32eb1fde', mdb2aeed6f260afeb1ebe0cf32eb1fde);
	mdb2aeed6f260afeb1ebe0cf32eb1fde.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mf28c11de45c49c40c8b0cdedab8deb1() {
		mxActor.call(this);
	};
	mxUtils.extend(mf28c11de45c49c40c8b0cdedab8deb1, mxActor);
	mf28c11de45c49c40c8b0cdedab8deb1.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 23;
		h1 = 36;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(10.90 * skx, 19.30* sky);
		c.curveTo(11.50 * skx, 17.70 * sky, 12.20 * skx, 15.90 * sky, 12.90 * skx, 13.90 * sky);
		c.arcTo(20.60 * skx, 20.60 * sky, 0, 0, 1, 3.20* skx, 9.20* sky);
		c.arcTo(31.30 * skx, 31.30 * sky, 0, 0, 0, 1.20* skx, 13.30* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 1.00* skx, 14.00* sky);
		c.arcTo(21.70 * skx, 21.70 * sky, 0, 0, 0, 7.40* skx, 18.20* sky);
		c.arcTo(27.90 * skx, 27.90 * sky, 0, 0, 0, 10.90* skx, 19.30* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(5.00 * skx, 31.70* sky);
		c.curveTo(5.50 * skx, 31.40 * sky, 6.40 * skx, 30.10 * sky, 8.40 * skx, 25.60 * sky);
		c.arcTo(16.90 * skx, 16.90 * sky, 0, 0, 1, 0.10* skx, 21.40* sky);
		c.arcTo(16.70 * skx, 16.70 * sky, 0, 0, 0, 5.00* skx, 31.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(13.20 * skx, 12.90* sky);
		c.curveTo(13.80 * skx, 11.30 * sky, 14.40 * skx, 9.60 * sky, 15.00 * skx, 7.70 * sky);
		c.arcTo(16.70 * skx, 16.70 * sky, 0, 0, 1, 7.40* skx, 3.90* sky);
		c.arcTo(18.60 * skx, 18.60 * sky, 0, 0, 0, 3.70* skx, 8.30* sky);
		c.arcTo(23.30 * skx, 23.30 * sky, 0, 0, 0, 9.60* skx, 12.00* sky);
		c.arcTo(13.50 * skx, 13.50 * sky, 0, 0, 0, 13.20* skx, 12.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(16.90 * skx, 2.10* sky);
		c.curveTo(17.30 * skx, 1.00 * sky, 17.50 * skx, 0.30 * sky, 17.60 * skx, 0.00 * sky);
		c.arcTo(14.10 * skx, 14.10 * sky, 0, 0, 1, 14.60* skx, 0.80* sky);
		c.arcTo(11.90 * skx, 11.90 * sky, 0, 0, 0, 8.20* skx, 3.30* sky);
		c.curveTo(9.40 * skx, 4.30 * sky, 12.40 * skx, 6.40 * sky, 15.40 * skx, 6.70 * sky);
		c.curveTo(15.90 * skx, 5.30 * sky, 16.40 * skx, 3.80 * sky, 16.90 * skx, 2.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(16.60 * skx, 6.70* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 0, 20.10* skx, 4.80* sky);
		c.lineTo(20.90* skx,5.40* sky);
		c.arcTo(5.60 * skx, 5.60 * sky, 0, 0, 1, 16.70* skx, 7.70* sky);
		c.lineTo(16.10 * skx,7.70* sky);
		c.lineTo(14.20* skx,13.00* sky);
		c.arcTo(12.10 * skx, 12.10 * sky, 0, 0, 0, 22.90* skx, 10.00* sky);
		c.lineTo(23.10* skx,10.30* sky);
		c.arcTo(18.80 * skx, 18.80 * sky, 0, 0, 0, 19.10* skx, 2.30* sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 1, 18.70* skx, 0.20* sky);
		c.lineTo(17.80* skx,2.50* sky);
		c.curveTo(17.30 * skx, 4.00 * sky, 16.90 * skx, 5.40 * sky, 16.40 * skx, 6.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(11.60 * skx, 20.30* sky);
		c.lineTo(9.80* skx,24.90* sky);
		c.arcTo(17.20 * skx, 17.20 * sky, 0, 0, 0, 20.20* skx, 22.30* sky);
		c.lineTo(20.50* skx,22.80* sky);
		c.curveTo(20.90 * skx, 21.90 * sky, 21.40 * skx, 20.90 * sky, 21.80 * skx, 19.80 * sky);
		c.arcTo(26.00 * skx, 26.00 * sky, 0, 0, 0, 22.80* skx, 17.30* sky);
		c.arcTo(15.50 * skx, 15.50 * sky, 0, 0, 1, 13.60* skx, 20.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(8.70 * skx, 24.70* sky);
		c.curveTo(9.30 * skx, 23.50 * sky, 9.90 * skx, 21.90 * sky, 10.60 * skx, 20.20 * sky);
		c.arcTo(24.10 * skx, 24.10 * sky, 0, 0, 1, 0.70* skx, 15.10* sky);
		c.arcTo(17.60 * skx, 17.60 * sky, 0, 0, 0, -0.00* skx, 20.00* sky);
		c.arcTo(15.60 * skx, 15.60 * sky, 0, 0, 0, 8.70* skx, 24.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(23.20 * skx, 11.00* sky);
		c.arcTo(12.80 * skx, 12.80 * sky, 0, 0, 1, 15.00* skx, 14.00* sky);
		c.lineTo(13.90 * skx,14.00* sky);
		c.curveTo(13.20 * skx, 16.00 * sky, 12.50 * skx, 17.80 * sky, 11.90 * skx, 19.40 * sky);
		c.arcTo(13.70 * skx, 13.70 * sky, 0, 0, 0, 22.50* skx, 16.20* sky);
		c.lineTo(22.90* skx,16.70* sky);
		c.arcTo(14.10 * skx, 14.10 * sky, 0, 0, 0, 23.20* skx, 11.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(9.40 * skx, 25.80* sky);
		c.curveTo(7.30 * skx, 30.50 * sky, 6.10 * skx, 32.20 * sky, 5.30 * skx, 32.60 * sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 1, 4.10* skx, 34.30* sky);
		c.curveTo(3.60 * skx, 34.90 * sky, 3.00 * skx, 34.30 * sky, 3.20 * skx, 35.20 * sky);
		c.curveTo(4.90 * skx, 37.50 * sky, 6.80 * skx, 34.50 * sky, 7.80 * skx, 32.80 * sky);
		c.curveTo(14.10 * skx, 31.40 * sky, 16.70 * skx, 30.10 * sky, 20.10 * skx, 23.50 * sky);
		c.arcTo(17.70 * skx, 17.70 * sky, 0, 0, 1, 11.30* skx, 25.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mf28c11de45c49c40c8b0cdedab8deb1', mf28c11de45c49c40c8b0cdedab8deb1);
	mf28c11de45c49c40c8b0cdedab8deb1.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mc8a054ab5f9368afb45a6c7866d506e() {
		mxActor.call(this);
	};
	mxUtils.extend(mc8a054ab5f9368afb45a6c7866d506e, mxActor);
	mc8a054ab5f9368afb45a6c7866d506e.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 57;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(15.60 * skx, 40.90* sky);
		c.lineTo(19.30* skx,37.80* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 0, 21.80* skx, 28.90* sky);
		c.arcTo(49.30 * skx, 49.30 * sky, 0, 0, 0, 19.90* skx, 23.50* sky);
		c.arcTo(14.70 * skx, 14.70 * sky, 0, 0, 1, 18.80* skx, 14.70* sky);
		c.arcTo(14.60 * skx, 14.60 * sky, 0, 0, 1, 25.00* skx, 6.30* sky);
		c.curveTo(29.60 * skx, 3.00 * sky, 34.90 * skx, 1.20 * sky, 40.40 * skx, -0.00 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 41.90* skx, 0.90* sky);
		c.curveTo(42.10 * skx, 1.60 * sky, 41.80 * skx, 2.20 * sky, 40.90 * skx, 2.50 * sky);
		c.arcTo(21.40 * skx, 21.40 * sky, 0, 0, 0, 34.20* skx, 6.40* sky);
		c.arcTo(12.40 * skx, 12.40 * sky, 0, 0, 0, 31.10* skx, 21.80* sky);
		c.curveTo(32.20 * skx, 24.20 * sky, 33.60 * skx, 26.40 * sky, 34.60 * skx, 28.80 * sky);
		c.curveTo(36.70 * skx, 34.00 * sky, 36.30 * skx, 39.00 * sky, 32.80 * skx, 43.60 * sky);
		c.curveTo(31.90 * skx, 44.70 * sky, 30.60 * skx, 45.60 * sky, 29.60 * skx, 46.60 * sky);
		c.arcTo(10.70 * skx, 10.70 * sky, 0, 0, 0, 39.80* skx, 39.90* sky);
		c.arcTo(65.20 * skx, 65.20 * sky, 0, 0, 1, 42.70* skx, 32.60* sky);
		c.arcTo(13.80 * skx, 13.80 * sky, 0, 0, 1, 53.30* skx, 24.90* sky);
		c.lineTo(55.30* skx,24.70* sky);
		c.curveTo(55.90 * skx, 24.70 * sky, 56.50 * skx, 24.80 * sky, 56.70 * skx, 25.50 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 56.10* skx, 27.10* sky);
		c.curveTo(54.90 * skx, 28.20 * sky, 53.60 * skx, 29.20 * sky, 52.50 * skx, 30.30 * sky);
		c.curveTo(50.00 * skx, 33.00 * sky, 49.00 * skx, 36.40 * sky, 48.30 * skx, 39.90 * sky);
		c.arcTo(36.50 * skx, 36.50 * sky, 0, 0, 1, 46.60* skx, 46.60* sky);
		c.curveTo(44.30 * skx, 52.30 * sky, 39.80 * skx, 55.00 * sky, 33.90 * skx, 55.50 * sky);
		c.curveTo(30.40 * skx, 55.80 * sky, 27.00 * skx, 55.20 * sky, 23.50 * skx, 54.70 * sky);
		c.arcTo(15.40 * skx, 15.40 * sky, 0, 0, 0, 15.80* skx, 55.00* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 0, 11.10* skx, 58.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 8.70* skx, 58.60* sky);
		c.curveTo(5.80 * skx, 54.80 * sky, 3.40 * skx, 50.60 * sky, 2.70 * skx, 45.70 * sky);
		c.arcTo(18.60 * skx, 18.60 * sky, 0, 0, 1, 3.90* skx, 35.80* sky);
		c.arcTo(29.60 * skx, 29.60 * sky, 0, 0, 0, 5.90* skx, 29.40* sky);
		c.arcTo(18.10 * skx, 18.10 * sky, 0, 0, 0, 0.60* skx, 13.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 0.30* skx, 11.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 2.00* skx, 11.40* sky);
		c.curveTo(8.40 * skx, 15.40 * sky, 13.30 * skx, 20.60 * sky, 15.40 * skx, 28.10 * sky);
		c.curveTo(16.40 * skx, 31.90 * sky, 16.10 * skx, 35.80 * sky, 15.60 * skx, 39.60 * sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 0, 15.40* skx, 40.80* sky);
		c.close();
		c.moveTo(11.60 * skx, 52.80* sky);
		c.arcTo(22.50 * skx, 22.50 * sky, 0, 0, 1, 21.40* skx, 46.90* sky);
		c.arcTo(25.70 * skx, 25.70 * sky, 0, 0, 0, 26.10* skx, 45.40* sky);
		c.curveTo(30.00 * skx, 43.80 * sky, 32.60 * skx, 41.10 * sky, 33.20 * skx, 36.80 * sky);
		c.arcTo(13.50 * skx, 13.50 * sky, 0, 0, 0, 31.40* skx, 27.80* sky);
		c.curveTo(30.60 * skx, 26.20 * sky, 29.70 * skx, 24.60 * sky, 28.90 * skx, 22.90 * sky);
		c.arcTo(15.00 * skx, 15.00 * sky, 0, 0, 1, 27.70* skx, 12.10* sky);
		c.arcTo(15.50 * skx, 15.50 * sky, 0, 0, 1, 31.60* skx, 5.50* sky);
		c.lineTo(30.60* skx,5.80* sky);
		c.curveTo(28.90 * skx, 6.80 * sky, 27.20 * skx, 7.80 * sky, 25.60 * skx, 8.90 * sky);
		c.arcTo(11.60 * skx, 11.60 * sky, 0, 0, 0, 21.30* skx, 15.00* sky);
		c.arcTo(12.10 * skx, 12.10 * sky, 0, 0, 0, 22.20* skx, 22.70* sky);
		c.curveTo(22.80 * skx, 24.20 * sky, 23.50 * skx, 25.80 * sky, 24.00 * skx, 27.40 * sky);
		c.curveTo(25.50 * skx, 32.30 * sky, 24.60 * skx, 36.60 * sky, 20.60 * skx, 39.90 * sky);
		c.lineTo(16.40* skx,43.30* sky);
		c.arcTo(13.70 * skx, 13.70 * sky, 0, 0, 0, 11.60* skx, 52.80* sky);
		c.close();
		c.moveTo(6.90 * skx, 18.60* sky);
		c.lineTo(7.20* skx,19.50* sky);
		c.arcTo(20.30 * skx, 20.30 * sky, 0, 0, 1, 8.50* skx, 29.30* sky);
		c.arcTo(30.80 * skx, 30.80 * sky, 0, 0, 1, 6.30* skx, 36.60* sky);
		c.arcTo(15.70 * skx, 15.70 * sky, 0, 0, 0, 6.20* skx, 49.00* sky);
		c.curveTo(6.90 * skx, 50.80 * sky, 7.80 * skx, 52.50 * sky, 8.60 * skx, 54.20 * sky);
		c.lineTo(8.80 * skx,54.20* sky);
		c.arcTo(25.00 * skx, 25.00 * sky, 0, 0, 1, 10.80* skx, 46.50* sky);
		c.arcTo(26.40 * skx, 26.40 * sky, 0, 0, 0, 13.40* skx, 37.40* sky);
		c.curveTo(13.80 * skx, 33.10 * sky, 13.60 * skx, 28.80 * sky, 11.50 * skx, 24.80 * sky);
		c.arcTo(22.80 * skx, 22.80 * sky, 0, 0, 0, 6.90* skx, 18.60* sky);
		c.close();
		c.moveTo(51.10 * skx, 28.10* sky);
		c.lineTo(50.20* skx,28.50* sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 0, 46.00* skx, 32.00* sky);
		c.arcTo(24.60 * skx, 24.60 * sky, 0, 0, 0, 42.40* skx, 39.70* sky);
		c.curveTo(41.20 * skx, 43.80 * sky, 38.80 * skx, 46.70 * sky, 34.70 * skx, 48.00 * sky);
		c.arcTo(14.50 * skx, 14.50 * sky, 0, 0, 1, 30.60* skx, 49.00* sky);
		c.curveTo(28.00 * skx, 49.30 * sky, 25.40 * skx, 49.40 * sky, 22.70 * skx, 49.60 * sky);
		c.arcTo(12.00 * skx, 12.00 * sky, 0, 0, 0, 16.20* skx, 52.20* sky);
		c.arcTo(27.70 * skx, 27.70 * sky, 0, 0, 1, 25.30* skx, 52.40* sky);
		c.arcTo(30.40 * skx, 30.40 * sky, 0, 0, 0, 34.30* skx, 53.00* sky);
		c.arcTo(11.90 * skx, 11.90 * sky, 0, 0, 0, 42.90* skx, 48.30* sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 0, 45.70* skx, 40.90* sky);
		c.curveTo(46.30 * skx, 36.30 * sky, 47.70 * skx, 32.00 * sky, 50.90 * skx, 28.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(46.90 * skx, 19.70* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 1, 43.30* skx, 23.50* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 1, 39.50* skx, 19.80* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 1, 43.20* skx, 16.00* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 1, 46.90* skx, 19.70* sky);
		c.close();
		c.moveTo(44.50 * skx, 19.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 43.20* skx, 18.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 42.00* skx, 19.70* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 43.30* skx, 21.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 44.50* skx, 19.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(50.70 * skx, 13.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 49.40* skx, 12.30* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 50.60* skx, 11.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 51.90* skx, 12.40* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 50.70* skx, 13.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(45.70 * skx, 7.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 44.50* skx, 8.60* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 43.30* skx, 7.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 44.50* skx, 6.20* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 45.70* skx, 7.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mc8a054ab5f9368afb45a6c7866d506e', mc8a054ab5f9368afb45a6c7866d506e);
	mc8a054ab5f9368afb45a6c7866d506e.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m4d95f82bc0eb7653687f0c7ae5d0f43() {
		mxActor.call(this);
	};
	mxUtils.extend(m4d95f82bc0eb7653687f0c7ae5d0f43, mxActor);
	m4d95f82bc0eb7653687f0c7ae5d0f43.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 57;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(8.50 * skx, 57.00* sky);
		c.curveTo(8.90 * skx, 50.70 * sky, 11.20 * skx, 45.40 * sky, 16.50 * skx, 41.50 * sky);
		c.arcTo(39.70 * skx, 39.70 * sky, 0, 0, 0, 20.90* skx, 37.60* sky);
		c.arcTo(7.60 * skx, 7.60 * sky, 0, 0, 0, 22.90* skx, 29.40* sky);
		c.arcTo(32.00 * skx, 32.00 * sky, 0, 0, 0, 21.20* skx, 25.10* sky);
		c.arcTo(49.60 * skx, 49.60 * sky, 0, 0, 1, 19.00* skx, 20.40* sky);
		c.curveTo(17.60 * skx, 16.40 * sky, 18.70 * skx, 12.90 * sky, 21.50 * skx, 9.80 * sky);
		c.arcTo(24.80 * skx, 24.80 * sky, 0, 0, 1, 31.00* skx, 3.30* sky);
		c.curveTo(34.10 * skx, 2.10 * sky, 37.30 * skx, 1.20 * sky, 40.50 * skx, 0.10 * sky);
		c.lineTo(41.10 * skx,0.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 41.80* skx, 0.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 41.40* skx, 1.30* sky);
		c.lineTo(40.10* skx,1.80* sky);
		c.curveTo(36.10 * skx, 3.50 * sky, 32.50 * skx, 5.70 * sky, 30.20 * skx, 9.50 * sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 0, 29.60* skx, 21.50* sky);
		c.curveTo(30.60 * skx, 23.40 * sky, 31.90 * skx, 25.20 * sky, 33.00 * skx, 27.00 * sky);
		c.curveTo(34.1 * skx, 28.8 * sky, 35.70 * skx, 32.00 * sky, 35.60 * skx, 34.90 * sky);
		c.arcTo(11.50 * skx, 11.50 * sky, 0, 0, 1, 30.00* skx, 44.90* sky);
		c.arcTo(24.70 * skx, 24.70 * sky, 0, 0, 1, 22.30* skx, 48.00* sky);
		c.arcTo(15.10 * skx, 15.10 * sky, 0, 0, 0, 14.20* skx, 52.40* sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 0, 11.20* skx, 57.50* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 10.80* skx, 58.60* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 9.40* skx, 59.20* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 8.50* skx, 58.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(15.30 * skx, 55.00* sky);
		c.curveTo(17.00 * skx, 52.60 * sky, 19.60 * skx, 51.40 * sky, 22.40 * skx, 50.50 * sky);
		c.curveTo(25.199999999999996 * skx, 49.6 * sky, 27.00 * skx, 48.80 * sky, 29.40 * skx, 48.10 * sky);
		c.lineTo(32.20* skx,47.40* sky);
		c.arcTo(11.00 * skx, 11.00 * sky, 0, 0, 0, 41.20* skx, 39.00* sky);
		c.arcTo(23.90 * skx, 23.90 * sky, 0, 0, 1, 44.70* skx, 31.40* sky);
		c.arcTo(12.50 * skx, 12.50 * sky, 0, 0, 1, 54.30* skx, 26.00* sky);
		c.lineTo(55.70 * skx,26.00* sky);
		c.lineTo(56.60* skx,26.50* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 56.10* skx, 27.30* sky);
		c.arcTo(17.00 * skx, 17.00 * sky, 0, 0, 0, 50.30* skx, 33.40* sky);
		c.arcTo(24.80 * skx, 24.80 * sky, 0, 0, 0, 48.00* skx, 40.90* sky);
		c.arcTo(19.30 * skx, 19.30 * sky, 0, 0, 1, 44.40* skx, 50.20* sky);
		c.arcTo(14.70 * skx, 14.70 * sky, 0, 0, 1, 33.60* skx, 55.50* sky);
		c.arcTo(41.40 * skx, 41.40 * sky, 0, 0, 1, 23.70* skx, 54.70* sky);
		c.arcTo(18.40 * skx, 18.40 * sky, 0, 0, 0, 15.30* skx, 55.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(6.10 * skx, 55.00* sky);
		c.arcTo(25.60 * skx, 25.60 * sky, 0, 0, 1, 2.60* skx, 46.00* sky);
		c.arcTo(18.50 * skx, 18.50 * sky, 0, 0, 1, 3.90* skx, 35.40* sky);
		c.arcTo(26.90 * skx, 26.90 * sky, 0, 0, 0, 5.80* skx, 29.30* sky);
		c.curveTo(6.60 * skx, 24.10 * sky, 5.10 * skx, 19.40 * sky, 2.30 * skx, 15.10 * sky);
		c.curveTo(1.70 * skx, 14.20 * sky, 0.90 * skx, 13.30 * sky, 0.20 * skx, 12.30 * sky);
		c.arcTo(8.70 * skx, 8.70 * sky, 0, 0, 1, -0.00* skx, 11.30* sky);
		c.curveTo(0.30 * skx, 11.30 * sky, 0.80 * skx, 11.20 * sky, 1.00 * skx, 11.40 * sky);
		c.arcTo(33.10 * skx, 33.10 * sky, 0, 0, 1, 7.60* skx, 17.20* sky);
		c.arcTo(27.10 * skx, 27.10 * sky, 0, 0, 1, 13.90* skx, 28.40* sky);
		c.arcTo(26.30 * skx, 26.30 * sky, 0, 0, 1, 14.10* skx, 39.90* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 13.60* skx, 40.70* sky);
		c.arcTo(20.90 * skx, 20.90 * sky, 0, 0, 0, 6.30* skx, 54.30* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 6.10* skx, 55.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(43.10 * skx, 23.40* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 39.40* skx, 19.70* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 1, 43.10* skx, 16.00* sky);
		c.arcTo(3.90 * skx, 3.90 * sky, 0, 0, 1, 46.80* skx, 19.70* sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 1, 43.10* skx, 23.40* sky);
		c.close();
		c.moveTo(43.10 * skx, 18.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 41.90* skx, 19.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 43.10* skx, 21.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 44.30* skx, 19.80* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 43.10* skx, 18.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(45.50 * skx, 7.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 44.30* skx, 8.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 43.10* skx, 7.40* sky);
		c.quadTo(43.20 * skx, 6.20* sky, 44.30 * skx, 6.20 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 45.50* skx, 7.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(51.70 * skx, 12.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 50.40* skx, 13.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 49.30* skx, 12.30* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 50.50* skx, 11.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 51.70* skx, 12.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m4d95f82bc0eb7653687f0c7ae5d0f43', m4d95f82bc0eb7653687f0c7ae5d0f43);
	m4d95f82bc0eb7653687f0c7ae5d0f43.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m0d475adf0706820aea2affdfb5de461() {
		mxActor.call(this);
	};
	mxUtils.extend(m0d475adf0706820aea2affdfb5de461, mxActor);
	m0d475adf0706820aea2affdfb5de461.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 65;
		h1 = 66;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(53.50 * skx, 14.50* sky);
		c.lineTo(49.60* skx,15.60* sky);
		c.curveTo(49.40 * skx, 17.10 * sky, 49.10 * skx, 18.60 * sky, 49.00 * skx, 20.00 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 49.50* skx, 20.90* sky);
		c.lineTo(52.60* skx,22.70* sky);
		c.lineTo(48.60* skx,23.20* sky);
		c.lineTo(48.00* skx,27.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 48.50* skx, 28.50* sky);
		c.lineTo(52.10* skx,30.00* sky);
		c.lineTo(48.40* skx,30.80* sky);
		c.curveTo(47.80 * skx, 30.90 * sky, 47.60 * skx, 31.10 * sky, 47.60 * skx, 31.70 * sky);
		c.curveTo(47.6 * skx, 32.3 * sky, 47.40 * skx, 33.80 * sky, 47.40 * skx, 34.80 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 47.90* skx, 35.60* sky);
		c.curveTo(48.60 * skx, 36.00 * sky, 49.40 * skx, 36.20 * sky, 50.30 * skx, 36.60 * sky);
		c.lineTo(47.80* skx,37.40* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 47.10* skx, 38.10* sky);
		c.curveTo(47.00 * skx, 40.90 * sky, 46.80 * skx, 43.70 * sky, 46.70 * skx, 46.50 * sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 0, 52.20* skx, 40.40* sky);
		c.arcTo(5.90 * skx, 5.90 * sky, 0, 0, 1, 54.00* skx, 35.90* sky);
		c.curveTo(54.20 * skx, 35.80 * sky, 54.30 * skx, 35.40 * sky, 54.30 * skx, 35.10 * sky);
		c.curveTo(54.3 * skx, 34.800000000000004 * sky, 54.60 * skx, 32.50 * sky, 54.80 * skx, 30.80 * sky);
		c.arcTo(26.70 * skx, 26.70 * sky, 0, 0, 0, 56.50* skx, 33.80* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 59.80* skx, 35.30* sky);
		c.lineTo(64.60* skx,34.30* sky);
		c.lineTo(61.80* skx,37.40* sky);
		c.curveTo(61.40 * skx, 37.70 * sky, 61.40 * skx, 38.10 * sky, 61.40 * skx, 38.60 * sky);
		c.arcTo(13.50 * skx, 13.50 * sky, 0, 0, 1, 61.20* skx, 42.10* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 61.60* skx, 43.40* sky);
		c.curveTo(62.80 * skx, 44.40 * sky, 63.90 * skx, 45.50 * sky, 65.20 * skx, 46.80 * sky);
		c.lineTo(60.40* skx,46.20* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 59.30* skx, 46.60* sky);
		c.curveTo(58.60 * skx, 47.50 * sky, 57.80 * skx, 48.20 * sky, 57.10 * skx, 49.10 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 56.70* skx, 50.20* sky);
		c.curveTo(57.00 * skx, 51.70 * sky, 57.50 * skx, 53.10 * sky, 57.70 * skx, 54.70 * sky);
		c.lineTo(54.40* skx,51.90* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 53.00* skx, 51.70* sky);
		c.curveTo(51.00 * skx, 52.60 * sky, 48.90 * skx, 53.40 * sky, 46.60 * skx, 54.20 * sky);
		c.curveTo(46.60 * skx, 55.20 * sky, 46.60 * skx, 56.30 * sky, 46.70 * skx, 57.40 * sky);
		c.curveTo(46.800000000000004 * skx, 58.5 * sky, 47.10 * skx, 57.90 * sky, 47.30 * skx, 58.10 * sky);
		c.lineTo(51.20* skx,59.50* sky);
		c.lineTo(46.80* skx,60.60* sky);
		c.lineTo(47.10* skx,66.00* sky);
		c.lineTo(30.40 * skx,66.00* sky);
		c.curveTo(29.60 * skx, 66.00 * sky, 29.40 * skx, 65.70 * sky, 29.20 * skx, 65.10 * sky);
		c.curveTo(29.0 * skx, 64.49999999999999 * sky, 28.20 * skx, 62.40 * sky, 27.80 * skx, 61.10 * sky);
		c.curveTo(27.400000000000002 * skx, 59.800000000000004 * sky, 27.20 * skx, 60.00 * sky, 26.30 * skx, 60.00 * sky);
		c.curveTo(25.400000000000002 * skx, 60.0 * sky, 23.90 * skx, 60.00 * sky, 22.70 * skx, 60.00 * sky);
		c.lineTo(22.70* skx,59.80 * sky);
		c.lineTo(26.00* skx,57.60* sky);
		c.curveTo(26.60 * skx, 57.30 * sky, 26.60 * skx, 56.90 * sky, 26.50 * skx, 56.30 * sky);
		c.curveTo(26.4 * skx, 55.699999999999996 * sky, 25.50 * skx, 52.80 * sky, 25.00 * skx, 51.10 * sky);
		c.curveTo(24.5 * skx, 49.400000000000006 * sky, 24.70 * skx, 50.40 * sky, 24.10 * skx, 50.40 * sky);
		c.arcTo(26.00 * skx, 26.00 * sky, 0, 0, 1, 20.20* skx, 49.90* sky);
		c.lineTo(23.40* skx,47.90* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 24.00* skx, 46.60* sky);
		c.curveTo(23.70 * skx, 45.30 * sky, 23.50 * skx, 43.90 * sky, 23.10 * skx, 42.50 * sky);
		c.curveTo(22.700000000000003 * skx, 41.1 * sky, 22.60 * skx, 42.00 * sky, 22.40 * skx, 41.80 * sky);
		c.lineTo(21.80 * skx,41.80* sky);
		c.curveTo(20.40 * skx, 41.10 * sky, 19.60 * skx, 41.80 * sky, 19.00 * skx, 42.90 * sky);
		c.arcTo(9.40 * skx, 9.40 * sky, 0, 0, 1, 17.40* skx, 44.90* sky);
		c.curveTo(17.40 * skx, 43.80 * sky, 17.30 * skx, 42.80 * sky, 17.40 * skx, 41.70 * sky);
		c.curveTo(17.499999999999996 * skx, 40.60000000000001 * sky, 17.20 * skx, 40.40 * sky, 16.30 * skx, 40.00 * sky);
		c.lineTo(13.20* skx,38.50* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 12.20* skx, 38.40* sky);
		c.lineTo(9.20* skx,40.30* sky);
		c.lineTo(10.50* skx,36.70* sky);
		c.lineTo(7.40* skx,33.30* sky);
		c.lineTo(6.60 * skx,33.30* sky);
		c.lineTo(2.80* skx,34.50* sky);
		c.lineTo(5.20* skx,31.30* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 5.40* skx, 30.00* sky);
		c.curveTo(4.90 * skx, 28.50 * sky, 4.50 * skx, 26.90 * sky, 4.00 * skx, 25.40 * sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 3.20* skx, 24.30* sky);
		c.lineTo(-0.00* skx,22.30* sky);
		c.lineTo(3.10* skx,22.10* sky);
		c.curveTo(3.60 * skx, 22.10 * sky, 3.90 * skx, 22.00 * sky, 4.00 * skx, 21.50 * sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 6.30* skx, 18.10* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 6.80* skx, 17.20* sky);
		c.curveTo(6.90 * skx, 16.00 * sky, 7.10 * skx, 14.70 * sky, 7.20 * skx, 13.10 * sky);
		c.curveTo(7.90 * skx, 14.30 * sky, 8.50 * skx, 15.30 * sky, 9.00 * skx, 16.30 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 10.20* skx, 17.10* sky);
		c.arcTo(5.50 * skx, 5.50 * sky, 0, 0, 1, 13.80* skx, 18.60* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 14.90* skx, 18.90* sky);
		c.lineTo(17.90* skx,18.10* sky);
		c.lineTo(16.00* skx,21.20* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 15.70* skx, 21.90* sky);
		c.arcTo(35.60 * skx, 35.60 * sky, 0, 0, 0, 16.50* skx, 27.60* sky);
		c.arcTo(9.40 * skx, 9.40 * sky, 0, 0, 0, 21.70* skx, 34.20* sky);
		c.arcTo(4.00 * skx, 4.00 * sky, 0, 0, 0, 21.70* skx, 33.10* sky);
		c.lineTo(21.40* skx,26.90* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 20.70* skx, 25.80* sky);
		c.lineTo(17.30* skx,24.30* sky);
		c.lineTo(20.70* skx,23.60* sky);
		c.curveTo(21.30 * skx, 23.50 * sky, 21.50 * skx, 23.30 * sky, 21.50 * skx, 22.70 * sky);
		c.lineTo(22.10* skx,15.00* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 21.60* skx, 14.10* sky);
		c.lineTo(18.10* skx,11.70* sky);
		c.lineTo(18.10* skx,11.40 * sky);
		c.lineTo(21.70 * skx,11.40* sky);
		c.curveTo(22.40 * skx, 11.40 * sky, 22.80 * skx, 11.20 * sky, 23.00 * skx, 10.60 * sky);
		c.arcTo(11.50 * skx, 11.50 * sky, 0, 0, 1, 26.60* skx, 6.00* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 27.10* skx, 4.50* sky);
		c.curveTo(26.90 * skx, 3.30 * sky, 26.80 * skx, 2.00 * sky, 26.60 * skx, 0.90 * sky);
		c.lineTo(29.30* skx,3.30* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 30.50* skx, 3.60* sky);
		c.arcTo(13.40 * skx, 13.40 * sky, 0, 0, 1, 37.00* skx, 2.50* sky);
		c.curveTo(37.70 * skx, 2.60 * sky, 38.10 * skx, 2.40 * sky, 38.30 * skx, 1.80 * sky);
		c.arcTo(15.10 * skx, 15.10 * sky, 0, 0, 1, 39.20* skx, -0.00* sky);
		c.curveTo(39.30 * skx, 0.20 * sky, 39.40 * skx, 0.30 * sky, 39.40 * skx, 0.40 * sky);
		c.curveTo(39.30 * skx, 2.40 * sky, 40.50 * skx, 3.30 * sky, 42.30 * skx, 3.90 * sky);
		c.arcTo(8.70 * skx, 8.70 * sky, 0, 0, 1, 44.90* skx, 5.50* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 46.20* skx, 5.70* sky);
		c.lineTo(49.10* skx,4.90* sky);
		c.lineTo(47.50* skx,7.20* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 47.40* skx, 8.20* sky);
		c.curveTo(48.00 * skx, 9.50 * sky, 48.50 * skx, 10.80 * sky, 49.20 * skx, 12.10 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 50.00* skx, 13.00* sky);
		c.lineTo(53.60* skx,14.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m0d475adf0706820aea2affdfb5de461', m0d475adf0706820aea2affdfb5de461);
	m0d475adf0706820aea2affdfb5de461.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mf1c3f22576fd106a7aee897d5b8ff0e() {
		mxActor.call(this);
	};
	mxUtils.extend(mf1c3f22576fd106a7aee897d5b8ff0e, mxActor);
	mf1c3f22576fd106a7aee897d5b8ff0e.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 64;
		h1 = 66;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(46.50 * skx, 60.80* sky);
		c.lineTo(46.80* skx,66.10* sky);
		c.lineTo(29.20 * skx,66.10* sky);
		c.curveTo(28.60 * skx, 64.50 * sky, 28.00 * skx, 62.80 * sky, 27.50 * skx, 61.10 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 26.30* skx, 60.30* sky);
		c.lineTo(22.40 * skx,60.30* sky);
		c.lineTo(22.40* skx,60.00 * sky);
		c.lineTo(25.70* skx,57.80* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 26.20* skx, 56.60* sky);
		c.curveTo(25.70 * skx, 54.90 * sky, 25.20 * skx, 53.30 * sky, 24.80 * skx, 51.60 * sky);
		c.curveTo(24.400000000000002 * skx, 49.900000000000006 * sky, 24.30 * skx, 50.60 * sky, 23.60 * skx, 50.60 * sky);
		c.arcTo(25.20 * skx, 25.20 * sky, 0, 0, 1, 19.90* skx, 50.10* sky);
		c.lineTo(22.50* skx,48.50* sky);
		c.curveTo(23.80 * skx, 47.70 * sky, 23.70 * skx, 47.70 * sky, 23.60 * skx, 46.20 * sky);
		c.curveTo(23.500000000000004 * skx, 44.7 * sky, 22.50 * skx, 42.80 * sky, 20.20 * skx, 42.60 * sky);
		c.curveTo(17.9 * skx, 42.400000000000006 * sky, 19.00 * skx, 42.50 * sky, 18.60 * skx, 43.20 * sky);
		c.arcTo(6.00 * skx, 6.00 * sky, 0, 0, 1, 17.00* skx, 45.00* sky);
		c.lineTo(17.00* skx,42.30 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 16.50* skx, 41.40* sky);
		c.lineTo(14.10* skx,40.10* sky);
		c.lineTo(11.70* skx,38.60* sky);
		c.lineTo(8.80* skx,40.40* sky);
		c.curveTo(9.20 * skx, 39.50 * sky, 9.40 * skx, 38.70 * sky, 9.80 * skx, 38.00 * sky);
		c.curveTo(10.200000000000001 * skx, 37.3 * sky, 9.90 * skx, 37.10 * sky, 9.50 * skx, 36.70 * sky);
		c.arcTo(20.90 * skx, 20.90 * sky, 0, 0, 1, 7.10* skx, 33.90* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 5.90* skx, 33.50* sky);
		c.lineTo(2.40* skx,34.60* sky);
		c.curveTo(3.40 * skx, 33.40 * sky, 4.20 * skx, 32.40 * sky, 4.90 * skx, 31.40 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 5.00* skx, 30.40* sky);
		c.curveTo(4.60 * skx, 28.80 * sky, 4.10 * skx, 27.20 * sky, 3.60 * skx, 25.50 * sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 2.90* skx, 24.50* sky);
		c.lineTo(0.00* skx,22.40* sky);
		c.lineTo(2.80* skx,22.20* sky);
		c.curveTo(3.30 * skx, 22.20 * sky, 3.60 * skx, 22.10 * sky, 3.70 * skx, 21.50 * sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 1, 7.60* skx, 16.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 8.20* skx, 15.70* sky);
		c.curveTo(8.40 * skx, 14.40 * sky, 8.50 * skx, 13.10 * sky, 8.80 * skx, 11.80 * sky);
		c.lineTo(10.70* skx,15.10* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 11.90* skx, 15.90* sky);
		c.arcTo(6.90 * skx, 6.90 * sky, 0, 0, 1, 15.70* skx, 17.80* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 17.00* skx, 18.10* sky);
		c.lineTo(19.50* skx,17.40* sky);
		c.lineTo(17.90* skx,19.80* sky);
		c.curveTo(17.80 * skx, 20.10 * sky, 17.60 * skx, 20.40 * sky, 17.70 * skx, 20.60 * sky);
		c.curveTo(17.799999999999997 * skx, 20.800000000000004 * sky, 18.10 * skx, 24.00 * sky, 18.40 * skx, 25.70 * sky);
		c.arcTo(10.80 * skx, 10.80 * sky, 0, 0, 0, 20.70* skx, 31.20* sky);
		c.lineTo(21.30* skx,31.80* sky);
		c.curveTo(21.30 * skx, 30.50 * sky, 21.20 * skx, 29.40 * sky, 21.20 * skx, 28.30 * sky);
		c.curveTo(21.2 * skx, 27.200000000000003 * sky, 21.50 * skx, 24.70 * sky, 18.60 * skx, 24.70 * sky);
		c.lineTo(18.90* skx,24.40* sky);
		c.lineTo(19.40 * skx,24.40* sky);
		c.curveTo(21.20 * skx, 23.90 * sky, 21.20 * skx, 23.90 * sky, 21.30 * skx, 22.00 * sky);
		c.curveTo(21.400000000000002 * skx, 20.1 * sky, 21.60 * skx, 17.70 * sky, 21.80 * skx, 15.60 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 21.10* skx, 14.10* sky);
		c.lineTo(17.90* skx,11.90* sky);
		c.lineTo(17.90* skx,11.60 * sky);
		c.lineTo(21.60 * skx,11.60* sky);
		c.curveTo(22.20 * skx, 11.60 * sky, 22.60 * skx, 11.50 * sky, 22.80 * skx, 10.80 * sky);
		c.arcTo(12.90 * skx, 12.90 * sky, 0, 0, 1, 26.40* skx, 6.00* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 26.80* skx, 4.90* sky);
		c.curveTo(26.70 * skx, 3.50 * sky, 26.50 * skx, 2.20 * sky, 26.30 * skx, 0.60 * sky);
		c.lineTo(29.00* skx,3.50* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 30.10* skx, 3.80* sky);
		c.arcTo(12.60 * skx, 12.60 * sky, 0, 0, 1, 36.70* skx, 2.60* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 38.10* skx, 1.80* sky);
		c.curveTo(38.30 * skx, 1.30 * sky, 38.60 * skx, 0.80 * sky, 39.00 * skx, -0.00 * sky);
		c.curveTo(39.20 * skx, 0.90 * sky, 39.30 * skx, 1.60 * sky, 39.40 * skx, 2.20 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 40.30* skx, 3.30* sky);
		c.curveTo(41.80 * skx, 4.00 * sky, 43.20 * skx, 4.90 * sky, 44.70 * skx, 5.70 * sky);
		c.lineTo(45.80* skx,5.90* sky);
		c.lineTo(49.00* skx,4.80* sky);
		c.curveTo(48.30 * skx, 5.80 * sky, 47.80 * skx, 6.60 * sky, 47.20 * skx, 7.30 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 47.20* skx, 8.50* sky);
		c.curveTo(47.80 * skx, 9.70 * sky, 48.30 * skx, 11.00 * sky, 48.90 * skx, 12.30 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 49.60* skx, 13.10* sky);
		c.lineTo(53.30* skx,14.70* sky);
		c.lineTo(49.90* skx,15.50* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 49.20* skx, 16.40* sky);
		c.curveTo(49.10 * skx, 17.50 * sky, 48.90 * skx, 18.70 * sky, 48.70 * skx, 19.90 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 49.30* skx, 21.10* sky);
		c.lineTo(52.40* skx,22.90* sky);
		c.lineTo(48.30* skx,23.30* sky);
		c.lineTo(47.70* skx,28.00* sky);
		c.curveTo(47.70 * skx, 28.20 * sky, 48.10 * skx, 28.50 * sky, 48.30 * skx, 28.70 * sky);
		c.lineTo(51.80* skx,30.20* sky);
		c.lineTo(48.20* skx,30.90* sky);
		c.curveTo(47.60 * skx, 31.10 * sky, 47.30 * skx, 31.30 * sky, 47.30 * skx, 32.00 * sky);
		c.arcTo(26.40 * skx, 26.40 * sky, 0, 0, 1, 47.10* skx, 34.80* sky);
		c.curveTo(47.00 * skx, 35.40 * sky, 47.20 * skx, 35.70 * sky, 47.80 * skx, 35.90 * sky);
		c.lineTo(50.10* skx,36.80* sky);
		c.arcTo(23.00 * skx, 23.00 * sky, 0, 0, 0, 47.50* skx, 37.50* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 46.80* skx, 38.30* sky);
		c.lineTo(46.50* skx,44.00* sky);
		c.arcTo(5.40 * skx, 5.40 * sky, 0, 0, 0, 49.80* skx, 39.70* sky);
		c.arcTo(21.70 * skx, 21.70 * sky, 0, 0, 1, 50.20* skx, 37.20* sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 1, 52.80* skx, 33.90* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 53.60* skx, 32.70* sky);
		c.arcTo(18.80 * skx, 18.80 * sky, 0, 0, 1, 54.10* skx, 29.40* sky);
		c.curveTo(54.70 * skx, 30.30 * sky, 55.20 * skx, 31.30 * sky, 55.70 * skx, 32.20 * sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 57.10* skx, 33.30* sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 58.70* skx, 33.90* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 61.40* skx, 34.20* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 63.60* skx, 34.00* sky);
		c.lineTo(63.00* skx,35.40* sky);
		c.lineTo(62.10* skx,36.40* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 61.60* skx, 37.90* sky);
		c.arcTo(24.20 * skx, 24.20 * sky, 0, 0, 1, 61.30* skx, 42.60* sky);
		c.curveTo(61.20 * skx, 43.20 * sky, 61.20 * skx, 43.50 * sky, 61.60 * skx, 43.90 * sky);
		c.lineTo(62.80* skx,44.90* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 63.40* skx, 46.70* sky);
		c.lineTo(60.50* skx,46.30* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 59.30* skx, 46.80* sky);
		c.arcTo(33.30 * skx, 33.30 * sky, 0, 0, 1, 56.80* skx, 49.60* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 56.50* skx, 50.70* sky);
		c.arcTo(25.90 * skx, 25.90 * sky, 0, 0, 1, 57.40* skx, 54.90* sky);
		c.lineTo(53.90* skx,51.90* sky);
		c.lineTo(46.30* skx,54.90* sky);
		c.curveTo(46.40 * skx, 54.80 * sky, 46.30 * skx, 54.80 * sky, 46.30 * skx, 54.90 * sky);
		c.curveTo(46.20 * skx, 57.90 * sky, 46.20 * skx, 57.90 * sky, 49.00 * skx, 58.90 * sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 50.60* skx, 59.80* sky);
		c.lineTo(48.60* skx,60.30* sky);
		c.close();
		c.moveTo(43.90 * skx, 63.50* sky);
		c.curveTo(43.80 * skx, 61.20 * sky, 43.70 * skx, 58.90 * sky, 43.70 * skx, 56.70 * sky);
		c.arcTo(236.50 * skx, 236.50 * sky, 0, 0, 1, 46.40* skx, 17.30* sky);
		c.arcTo(9.60 * skx, 9.60 * sky, 0, 0, 0, 43.20* skx, 7.90* sky);
		c.arcTo(11.50 * skx, 11.50 * sky, 0, 0, 0, 30.60* skx, 6.50* sky);
		c.curveTo(27.40 * skx, 8.10 * sky, 25.10 * skx, 10.50 * sky, 24.60 * skx, 14.20 * sky);
		c.curveTo(24.1 * skx, 17.9 * sky, 23.90 * skx, 21.00 * sky, 23.80 * skx, 24.50 * sky);
		c.curveTo(23.50 * skx, 37.80 * sky, 26.60 * skx, 50.50 * sky, 30.90 * skx, 62.90 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 31.80* skx, 63.50* sky);
		c.lineTo(43.90 * skx,63.50* sky);
		c.close();
		c.moveTo(22.30 * skx, 40.40* sky);
		c.curveTo(22.10 * skx, 38.70 * sky, 21.90 * skx, 37.20 * sky, 21.70 * skx, 35.70 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 21.20* skx, 35.10* sky);
		c.arcTo(10.40 * skx, 10.40 * sky, 0, 0, 1, 16.30* skx, 28.40* sky);
		c.arcTo(52.40 * skx, 52.40 * sky, 0, 0, 1, 15.50* skx, 23.10* sky);
		c.arcTo(4.80 * skx, 4.80 * sky, 0, 0, 0, 10.70* skx, 18.50* sky);
		c.arcTo(4.50 * skx, 4.50 * sky, 0, 0, 0, 6.20* skx, 23.30* sky);
		c.arcTo(13.20 * skx, 13.20 * sky, 0, 0, 0, 6.60* skx, 26.70* sky);
		c.curveTo(8.40 * skx, 34.70 * sky, 16.40 * skx, 39.30 * sky, 22.30 * skx, 40.40 * sky);
		c.close();
		c.moveTo(46.40 * skx, 51.90* sky);
		c.arcTo(20.90 * skx, 20.90 * sky, 0, 0, 0, 55.30* skx, 47.40* sky);
		c.arcTo(10.70 * skx, 10.70 * sky, 0, 0, 0, 59.10* skx, 39.40* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 56.10* skx, 35.70* sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 0, 52.50* skx, 39.00* sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 1, 52.40* skx, 40.40* sky);
		c.arcTo(9.30 * skx, 9.30 * sky, 0, 0, 1, 47.20* skx, 46.90* sky);
		c.curveTo(46.80 * skx, 47.10 * sky, 46.40 * skx, 47.50 * sky, 46.40 * skx, 47.80 * sky);
		c.curveTo(46.4 * skx, 48.099999999999994 * sky, 46.40 * skx, 50.40 * sky, 46.40 * skx, 51.90 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mf1c3f22576fd106a7aee897d5b8ff0e', mf1c3f22576fd106a7aee897d5b8ff0e);
	mf1c3f22576fd106a7aee897d5b8ff0e.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m7bf529425940edbc33b689b9ffd5fe3() {
		mxActor.call(this);
	};
	mxUtils.extend(m7bf529425940edbc33b689b9ffd5fe3, mxActor);
	m7bf529425940edbc33b689b9ffd5fe3.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 53;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(35.70 * skx, 2.90* sky);
		c.arcTo(12.40 * skx, 12.40 * sky, 0, 0, 1, 42.80* skx, 0.00* sky);
		c.curveTo(43.10 * skx, 1.20 * sky, 43.30 * skx, 2.40 * sky, 43.60 * skx, 3.50 * sky);
		c.arcTo(14.20 * skx, 14.20 * sky, 0, 0, 0, 46.10* skx, 9.10* sky);
		c.lineTo(47.40* skx,10.20* sky);
		c.curveTo(52.40 * skx, 13.50 * sky, 54.00 * skx, 18.20 * sky, 53.30 * skx, 23.90 * sky);
		c.curveTo(52.30 * skx, 31.50 * sky, 48.40 * skx, 37.50 * sky, 43.10 * skx, 42.70 * sky);
		c.arcTo(58.60 * skx, 58.60 * sky, 0, 0, 1, 19.70* skx, 56.80* sky);
		c.arcTo(42.50 * skx, 42.50 * sky, 0, 0, 1, 6.90* skx, 59.00* sky);
		c.arcTo(7.90 * skx, 7.90 * sky, 0, 0, 1, 1.80* skx, 57.20* sky);
		c.curveTo(1.00 * skx, 56.60 * sky, 0.60 * skx, 55.40 * sky, -0.00 * skx, 54.50 * sky);
		c.curveTo(-0.6 * skx, 53.6 * sky, 0.10 * skx, 54.00 * sky, 0.10 * skx, 53.80 * sky);
		c.curveTo(0.1 * skx, 53.599999999999994 * sky, 1.10 * skx, 51.50 * sky, 1.70 * skx, 50.30 * sky);
		c.curveTo(2.3 * skx, 49.099999999999994 * sky, 4.00 * skx, 47.90 * sky, 5.30 * skx, 46.80 * sky);
		c.arcTo(81.80 * skx, 81.80 * sky, 0, 0, 1, 18.10* skx, 38.60* sky);
		c.arcTo(47.40 * skx, 47.40 * sky, 0, 0, 0, 31.20* skx, 28.50* sky);
		c.arcTo(28.10 * skx, 28.10 * sky, 0, 0, 0, 37.00* skx, 17.40* sky);
		c.arcTo(37.10 * skx, 37.10 * sky, 0, 0, 1, 39.20* skx, 11.90* sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 0, 39.50* skx, 10.10* sky);
		c.arcTo(18.30 * skx, 18.30 * sky, 0, 0, 0, 36.30* skx, 3.70* sky);
		c.close();
		c.moveTo(45.20 * skx, 15.50* sky);
		c.lineTo(45.20* skx,14.20 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 44.00* skx, 13.10* sky);
		c.curveTo(43.30 * skx, 13.00 * sky, 42.90 * skx, 13.40 * sky, 42.80 * skx, 14.10 * sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 42.70* skx, 14.70* sky);
		c.arcTo(30.60 * skx, 30.60 * sky, 0, 0, 1, 39.50* skx, 27.90* sky);
		c.curveTo(36.30 * skx, 34.40 * sky, 31.20 * skx, 39.20 * sky, 25.20 * skx, 43.10 * sky);
		c.curveTo(21.60 * skx, 45.60 * sky, 17.50 * skx, 46.90 * sky, 13.60 * skx, 48.70 * sky);
		c.arcTo(101.00 * skx, 101.00 * sky, 0, 0, 0, 4.40* skx, 53.60* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 3.70* skx, 55.00* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 4.70* skx, 55.90* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 6.00* skx, 55.50* sky);
		c.arcTo(55.70 * skx, 55.70 * sky, 0, 0, 1, 16.60* skx, 50.10* sky);
		c.arcTo(50.20 * skx, 50.20 * sky, 0, 0, 0, 33.90* skx, 39.40* sky);
		c.curveTo(40.70 * skx, 32.90 * sky, 44.70 * skx, 25.00 * sky, 45.20 * skx, 15.50 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m7bf529425940edbc33b689b9ffd5fe3', m7bf529425940edbc33b689b9ffd5fe3);
	m7bf529425940edbc33b689b9ffd5fe3.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m774e0213668b69f19e407c58c7b2f6b() {
		mxActor.call(this);
	};
	mxUtils.extend(m774e0213668b69f19e407c58c7b2f6b, mxActor);
	m774e0213668b69f19e407c58c7b2f6b.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 54;
		h1 = 59;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(35.70 * skx, 2.90* sky);
		c.arcTo(12.50 * skx, 12.50 * sky, 0, 0, 1, 42.90* skx, 0.00* sky);
		c.arcTo(12.60 * skx, 12.60 * sky, 0, 0, 0, 43.40* skx, 2.80* sky);
		c.curveTo(44.00 * skx, 4.60 * sky, 44.60 * skx, 6.30 * sky, 45.30 * skx, 7.90 * sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 0, 47.30* skx, 10.10* sky);
		c.curveTo(52.30 * skx, 13.50 * sky, 54.10 * skx, 18.20 * sky, 53.30 * skx, 24.00 * sky);
		c.curveTo(52.49999999999999 * skx, 29.8 * sky, 48.70 * skx, 37.10 * sky, 43.70 * skx, 42.10 * sky);
		c.arcTo(57.00 * skx, 57.00 * sky, 0, 0, 1, 13.20* skx, 58.40* sky);
		c.arcTo(40.70 * skx, 40.70 * sky, 0, 0, 1, 7.10* skx, 59.00* sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 1, 1.90* skx, 57.30* sky);
		c.curveTo(1.00 * skx, 56.70 * sky, 0.60 * skx, 55.40 * sky, 0.00 * skx, 54.40 * sky);
		c.lineTo(0.00* skx,54.20 * sky);
		c.curveTo(0.90 * skx, 52.10 * sky, 1.50 * skx, 50.00 * sky, 3.30 * skx, 48.40 * sky);
		c.arcTo(94.90 * skx, 94.90 * sky, 0, 0, 1, 18.50* skx, 38.40* sky);
		c.arcTo(49.90 * skx, 49.90 * sky, 0, 0, 0, 30.90* skx, 28.90* sky);
		c.arcTo(28.60 * skx, 28.60 * sky, 0, 0, 0, 37.00* skx, 17.50* sky);
		c.curveTo(37.60 * skx, 15.60 * sky, 38.50 * skx, 13.80 * sky, 39.30 * skx, 11.90 * sky);
		c.arcTo(3.50 * skx, 3.50 * sky, 0, 0, 0, 39.50* skx, 10.20* sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 0, 36.30* skx, 3.60* sky);
		c.close();
		c.moveTo(2.90 * skx, 54.50* sky);
		c.lineTo(3.60* skx,54.10* sky);
		c.arcTo(91.50 * skx, 91.50 * sky, 0, 0, 1, 17.60* skx, 47.10* sky);
		c.arcTo(45.50 * skx, 45.50 * sky, 0, 0, 0, 34.20* skx, 35.60* sky);
		c.arcTo(29.40 * skx, 29.40 * sky, 0, 0, 0, 42.30* skx, 19.10* sky);
		c.curveTo(42.60 * skx, 17.50 * sky, 42.70 * skx, 15.90 * sky, 42.90 * skx, 14.30 * sky);
		c.lineTo(45.20 * skx,14.30* sky);
		c.lineTo(45.20* skx,15.30 * sky);
		c.arcTo(33.50 * skx, 33.50 * sky, 0, 0, 1, 41.70* skx, 29.10* sky);
		c.curveTo(37.60 * skx, 37.10 * sky, 31.10 * skx, 42.80 * sky, 23.30 * skx, 47.00 * sky);
		c.curveTo(19.70 * skx, 49.00 * sky, 15.80 * skx, 50.50 * sky, 12.00 * skx, 52.30 * sky);
		c.curveTo(9.70 * skx, 53.40 * sky, 7.50 * skx, 54.70 * sky, 5.20 * skx, 55.90 * sky);
		c.lineTo(5.20* skx,56.20 * sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 0, 6.90* skx, 56.60* sky);
		c.lineTo(10.70* skx,56.30* sky);
		c.arcTo(54.40 * skx, 54.40 * sky, 0, 0, 0, 44.60* skx, 37.30* sky);
		c.arcTo(25.60 * skx, 25.60 * sky, 0, 0, 0, 51.00* skx, 22.50* sky);
		c.curveTo(51.30 * skx, 18.40 * sky, 50.00 * skx, 14.90 * sky, 46.50 * skx, 12.60 * sky);
		c.arcTo(12.20 * skx, 12.20 * sky, 0, 0, 1, 42.00* skx, 6.60* sky);
		c.curveTo(41.50 * skx, 5.40 * sky, 41.20 * skx, 4.20 * sky, 40.80 * skx, 3.00 * sky);
		c.lineTo(39.50* skx,3.40* sky);
		c.curveTo(40.30 * skx, 5.30 * sky, 41.20 * skx, 7.20 * sky, 41.80 * skx, 9.10 * sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 1, 41.30* skx, 13.40* sky);
		c.arcTo(23.70 * skx, 23.70 * sky, 0, 0, 0, 39.30* skx, 18.40* sky);
		c.arcTo(30.80 * skx, 30.80 * sky, 0, 0, 1, 32.50* skx, 30.80* sky);
		c.arcTo(45.90 * skx, 45.90 * sky, 0, 0, 1, 20.30* skx, 40.10* sky);
		c.arcTo(97.00 * skx, 97.00 * sky, 0, 0, 0, 4.80* skx, 50.40* sky);
		c.curveTo(3.60 * skx, 51.40 * sky, 3.30 * skx, 52.70 * sky, 2.70 * skx, 54.00 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 2.90* skx, 54.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m774e0213668b69f19e407c58c7b2f6b', m774e0213668b69f19e407c58c7b2f6b);
	m774e0213668b69f19e407c58c7b2f6b.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m538890fb5e8d7aa9b4cb8df85850622() {
		mxActor.call(this);
	};
	mxUtils.extend(m538890fb5e8d7aa9b4cb8df85850622, mxActor);
	m538890fb5e8d7aa9b4cb8df85850622.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 64;
		h1 = 71;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(39.70 * skx, 64.70* sky);
		c.lineTo(38.60* skx,65.90* sky);
		c.lineTo(41.70* skx,67.30* sky);
		c.lineTo(38.80* skx,68.80* sky);
		c.lineTo(40.20* skx,70.00* sky);
		c.lineTo(38.50* skx,70.50* sky);
		c.arcTo(33.50 * skx, 33.50 * sky, 0, 0, 1, 26.30* skx, 69.10* sky);
		c.lineTo(25.30* skx,68.70* sky);
		c.curveTo(23.40 * skx, 67.80 * sky, 23.20 * skx, 66.90 * sky, 24.50 * skx, 65.20 * sky);
		c.arcTo(5.10 * skx, 5.10 * sky, 0, 0, 0, 25.50* skx, 60.60* sky);
		c.curveTo(25.30 * skx, 60.00 * sky, 25.10 * skx, 59.80 * sky, 24.50 * skx, 59.70 * sky);
		c.arcTo(66.00 * skx, 66.00 * sky, 0, 0, 1, 3.80* skx, 52.60* sky);
		c.arcTo(11.10 * skx, 11.10 * sky, 0, 0, 1, 0.60* skx, 50.10* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 0.10* skx, 48.30* sky);
		c.curveTo(0.30 * skx, 47.80 * sky, 1.10 * skx, 47.50 * sky, 1.70 * skx, 47.30 * sky);
		c.lineTo(3.50 * skx,47.30* sky);
		c.lineTo(3.20* skx,46.80* sky);
		c.curveTo(2.50 * skx, 45.80 * sky, 2.80 * skx, 45.00 * sky, 3.90 * skx, 44.80 * sky);
		c.lineTo(5.80 * skx,44.80* sky);
		c.curveTo(15.70 * skx, 45.20 * sky, 24.40 * skx, 42.30 * sky, 31.50 * skx, 35.30 * sky);
		c.arcTo(13.60 * skx, 13.60 * sky, 0, 0, 0, 36.20* skx, 24.00* sky);
		c.arcTo(18.40 * skx, 18.40 * sky, 0, 0, 0, 34.10* skx, 16.40* sky);
		c.arcTo(16.40 * skx, 16.40 * sky, 0, 0, 1, 32.00* skx, 10.30* sky);
		c.curveTo(31.50 * skx, 6.00 * sky, 33.60 * skx, 2.10 * sky, 37.20 * skx, 0.70 * sky);
		c.curveTo(40.800000000000004 * skx, -0.7000000000000002 * sky, 45.90 * skx, -0.40 * sky, 49.10 * skx, 3.70 * sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 0, 49.60* skx, 4.40* sky);
		c.curveTo(51.90 * skx, 8.00 * sky, 55.30 * skx, 8.70 * sky, 59.20 * skx, 8.40 * sky);
		c.curveTo(60.20 * skx, 8.30 * sky, 61.10 * skx, 8.00 * sky, 62.00 * skx, 8.00 * sky);
		c.curveTo(62.9 * skx, 8.0 * sky, 63.30 * skx, 8.00 * sky, 63.50 * skx, 8.30 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 63.50* skx, 9.90* sky);
		c.arcTo(8.80 * skx, 8.80 * sky, 0, 0, 1, 59.40* skx, 13.90* sky);
		c.arcTo(25.00 * skx, 25.00 * sky, 0, 0, 1, 50.90* skx, 16.20* sky);
		c.lineTo(48.50* skx,16.60* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 46.00* skx, 19.60* sky);
		c.arcTo(9.80 * skx, 9.80 * sky, 0, 0, 0, 47.70* skx, 26.10* sky);
		c.curveTo(49.00 * skx, 28.20 * sky, 50.40 * skx, 30.20 * sky, 51.80 * skx, 32.20 * sky);
		c.curveTo(53.199999999999996 * skx, 34.2 * sky, 55.40 * skx, 37.70 * sky, 56.00 * skx, 41.00 * sky);
		c.arcTo(15.40 * skx, 15.40 * sky, 0, 0, 1, 47.00* skx, 57.90* sky);
		c.curveTo(42.60 * skx, 60.00 * sky, 37.80 * skx, 60.50 * sky, 33.00 * skx, 60.40 * sky);
		c.lineTo(29.70 * skx,60.40* sky);
		c.arcTo(12.90 * skx, 12.90 * sky, 0, 0, 0, 29.10* skx, 62.90* sky);
		c.curveTo(29.10 * skx, 63.60 * sky, 29.20 * skx, 64.40 * sky, 30.40 * skx, 64.40 * sky);
		c.lineTo(38.70* skx,64.60* sky);
		c.close();
		c.moveTo(45.30 * skx, 10.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 47.20* skx, 9.00* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 1, 0, 45.30* skx, 10.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m538890fb5e8d7aa9b4cb8df85850622', m538890fb5e8d7aa9b4cb8df85850622);
	m538890fb5e8d7aa9b4cb8df85850622.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m8807cf7bc2b921dd743b050574f933e() {
		mxActor.call(this);
	};
	mxUtils.extend(m8807cf7bc2b921dd743b050574f933e, mxActor);
	m8807cf7bc2b921dd743b050574f933e.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 66;
		h1 = 70;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(3.00 * skx, 44.30* sky);
		c.curveTo(2.70 * skx, 42.60 * sky, 3.60 * skx, 41.50 * sky, 5.50 * skx, 41.40 * sky);
		c.lineTo(11.50* skx,41.10* sky);
		c.curveTo(18.60 * skx, 40.30 * sky, 25.30 * skx, 38.40 * sky, 31.20 * skx, 34.20 * sky);
		c.arcTo(13.90 * skx, 13.90 * sky, 0, 0, 0, 36.20* skx, 28.70* sky);
		c.curveTo(37.70 * skx, 25.40 * sky, 37.10 * skx, 22.10 * sky, 35.70 * skx, 18.90 * sky);
		c.curveTo(34.300000000000004 * skx, 15.699999999999996 * sky, 34.00 * skx, 15.50 * sky, 33.30 * skx, 13.60 * sky);
		c.arcTo(10.40 * skx, 10.40 * sky, 0, 0, 1, 37.50* skx, 1.40* sky);
		c.arcTo(10.70 * skx, 10.70 * sky, 0, 0, 1, 50.70* skx, 3.50* sky);
		c.arcTo(18.40 * skx, 18.40 * sky, 0, 0, 1, 52.40* skx, 5.70* sky);
		c.arcTo(4.70 * skx, 4.70 * sky, 0, 0, 0, 56.70* skx, 7.90* sky);
		c.arcTo(42.30 * skx, 42.30 * sky, 0, 0, 0, 61.70* skx, 7.40* sky);
		c.lineTo(62.50 * skx,7.40* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 65.40* skx, 10.70* sky);
		c.arcTo(8.40 * skx, 8.40 * sky, 0, 0, 1, 61.80* skx, 15.00* sky);
		c.arcTo(21.50 * skx, 21.50 * sky, 0, 0, 1, 52.30* skx, 18.20* sky);
		c.lineTo(50.20* skx,18.40* sky);
		c.curveTo(48.90 * skx, 18.70 * sky, 48.60 * skx, 19.20 * sky, 48.50 * skx, 20.50 * sky);
		c.arcTo(8.20 * skx, 8.20 * sky, 0, 0, 0, 50.20* skx, 25.50* sky);
		c.curveTo(51.50 * skx, 27.50 * sky, 53.00 * skx, 29.40 * sky, 54.40 * skx, 31.40 * sky);
		c.arcTo(18.70 * skx, 18.70 * sky, 0, 0, 1, 58.30* skx, 40.00* sky);
		c.arcTo(14.90 * skx, 14.90 * sky, 0, 0, 1, 49.90* skx, 55.70* sky);
		c.curveTo(45.10 * skx, 58.20 * sky, 40.00 * skx, 58.70 * sky, 34.70 * skx, 58.60 * sky);
		c.lineTo(30.30* skx,58.40* sky);
		c.curveTo(30.60 * skx, 61.20 * sky, 29.60 * skx, 63.50 * sky, 28.50 * skx, 66.10 * sky);
		c.curveTo(32.50 * skx, 67.50 * sky, 36.50 * skx, 67.20 * sky, 40.40 * skx, 66.90 * sky);
		c.lineTo(40.90* skx,64.60* sky);
		c.curveTo(41.00 * skx, 64.80 * sky, 40.90 * skx, 64.70 * sky, 40.90 * skx, 64.70 * sky);
		c.curveTo(40.9 * skx, 64.7 * sky, 39.40 * skx, 63.00 * sky, 38.20 * skx, 63.00 * sky);
		c.lineTo(33.10* skx,62.80* sky);
		c.curveTo(32.00 * skx, 62.80 * sky, 31.30 * skx, 62.20 * sky, 31.40 * skx, 61.40 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 33.10* skx, 60.00* sky);
		c.quadTo(37.50 * skx, 60.20* sky, 41.80 * skx, 60.60 * sky);
		c.curveTo(43.00 * skx, 60.70 * sky, 44.10 * skx, 61.10 * sky, 44.20 * skx, 62.60 * sky);
		c.curveTo(44.300000000000004 * skx, 64.1 * sky, 44.50 * skx, 62.90 * sky, 44.70 * skx, 63.10 * sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 44.70* skx, 66.30* sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 44.10* skx, 67.40* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 42.70* skx, 69.00* sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 1, 39.00* skx, 69.80* sky);
		c.arcTo(30.20 * skx, 30.20 * sky, 0, 0, 1, 29.50* skx, 69.30* sky);
		c.lineTo(28.20* skx,68.90* sky);
		c.curveTo(25.70 * skx, 67.90 * sky, 25.00 * skx, 66.20 * sky, 26.20 * skx, 63.80 * sky);
		c.arcTo(9.00 * skx, 9.00 * sky, 0, 0, 0, 27.50* skx, 58.70* sky);
		c.curveTo(27.40 * skx, 58.10 * sky, 27.20 * skx, 57.90 * sky, 26.60 * skx, 57.90 * sky);
		c.curveTo(20.50 * skx, 57.00 * sky, 14.40 * skx, 55.80 * sky, 8.70 * skx, 53.30 * sky);
		c.arcTo(52.80 * skx, 52.80 * sky, 0, 0, 1, 2.50* skx, 50.00* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 0.80* skx, 48.70* sky);
		c.curveTo(-0.60 * skx, 47.10 * sky, -0.10 * skx, 45.40 * sky, 1.80 * skx, 44.60 * sky);
		c.close();
		c.moveTo(62.40 * skx, 10.20* sky);
		c.lineTo(58.90* skx,10.70* sky);
		c.curveTo(55.00 * skx, 11.10 * sky, 51.70 * skx, 10.30 * sky, 49.50 * skx, 6.60 * sky);
		c.lineTo(48.90* skx,5.90* sky);
		c.curveTo(47.00 * skx, 3.10 * sky, 44.20 * skx, 2.50 * sky, 41.10 * skx, 3.10 * sky);
		c.curveTo(38.0 * skx, 3.7 * sky, 35.60 * skx, 6.60 * sky, 35.70 * skx, 10.50 * sky);
		c.curveTo(35.800000000000004 * skx, 14.4 * sky, 36.80 * skx, 14.80 * sky, 37.80 * skx, 16.80 * sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 1, 39.80* skx, 26.70* sky);
		c.curveTo(39.20 * skx, 30.40 * sky, 37.00 * skx, 33.20 * sky, 34.20 * skx, 35.50 * sky);
		c.curveTo(28.40 * skx, 40.20 * sky, 21.50 * skx, 42.40 * sky, 14.20 * skx, 43.60 * sky);
		c.lineTo(6.70* skx,44.30* sky);
		c.curveTo(7.60 * skx, 46.10 * sky, 7.20 * skx, 46.90 * sky, 5.10 * skx, 47.00 * sky);
		c.lineTo(3.40* skx,47.20* sky);
		c.lineTo(4.70* skx,48.10* sky);
		c.arcTo(46.50 * skx, 46.50 * sky, 0, 0, 0, 10.20* skx, 50.80* sky);
		c.arcTo(72.00 * skx, 72.00 * sky, 0, 0, 0, 38.10* skx, 55.60* sky);
		c.arcTo(22.70 * skx, 22.70 * sky, 0, 0, 0, 49.20* skx, 52.70* sky);
		c.curveTo(55.30 * skx, 49.20 * sky, 57.40 * skx, 42.20 * sky, 53.90 * skx, 36.10 * sky);
		c.arcTo(62.40 * skx, 62.40 * sky, 0, 0, 0, 49.30* skx, 29.30* sky);
		c.arcTo(16.20 * skx, 16.20 * sky, 0, 0, 1, 46.00* skx, 23.10* sky);
		c.curveTo(45.00 * skx, 19.00 * sky, 45.90 * skx, 15.70 * sky, 51.10 * skx, 15.30 * sky);
		c.arcTo(21.70 * skx, 21.70 * sky, 0, 0, 0, 58.60* skx, 13.50* sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 0, 62.40* skx, 10.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(44.90 * skx, 11.40* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 44.90* skx, 7.10* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 47.10* skx, 9.30* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 44.90* skx, 11.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m8807cf7bc2b921dd743b050574f933e', m8807cf7bc2b921dd743b050574f933e);
	m8807cf7bc2b921dd743b050574f933e.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m90302049800ee04ce3f780e054f896f() {
		mxActor.call(this);
	};
	mxUtils.extend(m90302049800ee04ce3f780e054f896f, mxActor);
	m90302049800ee04ce3f780e054f896f.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 71;
		h1 = 60;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(45.40 * skx, 6.60* sky);
		c.curveTo(50.90 * skx, 6.30 * sky, 54.60 * skx, 8.10 * sky, 56.30 * skx, 11.90 * sky);
		c.curveTo(54.30 * skx, 12.70 * sky, 52.30 * skx, 12.20 * sky, 50.30 * skx, 11.90 * sky);
		c.arcTo(8.40 * skx, 8.40 * sky, 0, 0, 0, 42.60* skx, 14.10* sky);
		c.arcTo(4.60 * skx, 4.60 * sky, 0, 0, 0, 42.10* skx, 20.70* sky);
		c.arcTo(19.90 * skx, 19.90 * sky, 0, 0, 0, 44.90* skx, 23.70* sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 1, 45.60* skx, 25.40* sky);
		c.arcTo(10.80 * skx, 10.80 * sky, 0, 0, 0, 49.10* skx, 34.50* sky);
		c.curveTo(50.40 * skx, 35.70 * sky, 52.20 * skx, 36.40 * sky, 53.70 * skx, 37.40 * sky);
		c.lineTo(54.80* skx,37.70* sky);
		c.curveTo(53.00 * skx, 42.00 * sky, 48.50 * skx, 43.40 * sky, 43.50 * skx, 41.20 * sky);
		c.arcTo(8.40 * skx, 8.40 * sky, 0, 0, 1, 36.00* skx, 45.80* sky);
		c.curveTo(32.70 * skx, 45.80 * sky, 30.30 * skx, 44.10 * sky, 28.40 * skx, 41.40 * sky);
		c.curveTo(26.00 * skx, 43.90 * sky, 23.30 * skx, 45.40 * sky, 19.70 * skx, 44.70 * sky);
		c.arcTo(8.90 * skx, 8.90 * sky, 0, 0, 1, 12.90* skx, 38.50* sky);
		c.curveTo(9.80 * skx, 38.80 * sky, 7.00 * skx, 38.10 * sky, 4.90 * skx, 35.70 * sky);
		c.curveTo(2.8000000000000007 * skx, 33.300000000000004 * sky, 2.70 * skx, 30.40 * sky, 4.20 * skx, 27.50 * sky);
		c.curveTo(0.90 * skx, 25.60 * sky, -0.70 * skx, 22.80 * sky, 0.30 * skx, 19.10 * sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 1, 6.80* skx, 13.70* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 1, 10.20* skx, 6.50* sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 1, 18.10* skx, 5.60* sky);
		c.curveTo(19.20 * skx, 2.90 * sky, 20.80 * skx, 0.80 * sky, 23.80 * skx, 0.20 * sky);
		c.arcTo(8.40 * skx, 8.40 * sky, 0, 0, 1, 31.30* skx, 2.30* sky);
		c.curveTo(37.80 * skx, -1.70 * sky, 43.30 * skx, -0.00 * sky, 45.40 * skx, 6.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(62.10 * skx, 35.90* sky);
		c.curveTo(58.90 * skx, 35.70 * sky, 55.70 * skx, 35.50 * sky, 52.80 * skx, 33.80 * sky);
		c.arcTo(8.20 * skx, 8.20 * sky, 0, 0, 1, 48.50* skx, 26.00* sky);
		c.curveTo(48.50 * skx, 25.00 * sky, 49.00 * skx, 23.90 * sky, 48.70 * skx, 23.00 * sky);
		c.curveTo(48.400000000000006 * skx, 22.1 * sky, 47.10 * skx, 21.80 * sky, 46.40 * skx, 21.20 * sky);
		c.arcTo(18.00 * skx, 18.00 * sky, 0, 0, 1, 44.50* skx, 19.20* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 45.00* skx, 15.80* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 1, 50.60* skx, 14.80* sky);
		c.arcTo(14.00 * skx, 14.00 * sky, 0, 0, 0, 56.00* skx, 15.00* sky);
		c.arcTo(13.20 * skx, 13.20 * sky, 0, 0, 1, 67.90* skx, 18.80* sky);
		c.curveTo(70.40 * skx, 21.30 * sky, 72.00 * skx, 24.30 * sky, 71.20 * skx, 28.00 * sky);
		c.curveTo(70.90 * skx, 29.40 * sky, 70.50 * skx, 30.70 * sky, 70.30 * skx, 32.20 * sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 1, 66.90* skx, 35.30* sky);
		c.curveTo(65.30 * skx, 35.60 * sky, 63.70 * skx, 35.70 * sky, 62.10 * skx, 35.90 * sky);
		c.close();
		c.moveTo(63.10 * skx, 27.10* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 64.40* skx, 25.80* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 1, 0, 61.70* skx, 25.80* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 63.10* skx, 27.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(7.40 * skx, 40.80* sky);
		c.lineTo(10.70* skx,41.50* sky);
		c.curveTo(11.00 * skx, 41.60 * sky, 11.20 * skx, 41.90 * sky, 11.40 * skx, 42.10 * sky);
		c.curveTo(11.600000000000001 * skx, 42.300000000000004 * sky, 13.80 * skx, 44.70 * sky, 15.10 * skx, 45.90 * sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 1, 15.80* skx, 47.20* sky);
		c.curveTo(15.80 * skx, 50.50 * sky, 15.90 * skx, 53.70 * sky, 15.90 * skx, 57.00 * sky);
		c.curveTo(15.9 * skx, 60.3 * sky, 14.30 * skx, 60.90 * sky, 11.80 * skx, 60.00 * sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 10.30* skx, 58.10* sky);
		c.curveTo(9.30 * skx, 53.40 * sky, 8.50 * skx, 48.70 * sky, 7.70 * skx, 44.00 * sky);
		c.arcTo(31.60 * skx, 31.60 * sky, 0, 0, 1, 7.40* skx, 40.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(18.60 * skx, 47.40* sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 0, 26.00* skx, 46.70* sky);
		c.curveTo(26.10 * skx, 50.40 * sky, 26.20 * skx, 54.00 * sky, 26.20 * skx, 57.60 * sky);
		c.curveTo(26.30 * skx, 58.90 * sky, 25.50 * skx, 60.00 * sky, 24.70 * skx, 60.00 * sky);
		c.curveTo(23.9 * skx, 60.0 * sky, 21.40 * skx, 60.40 * sky, 20.70 * skx, 58.70 * sky);
		c.arcTo(21.80 * skx, 21.80 * sky, 0, 0, 1, 19.60* skx, 54.30* sky);
		c.curveTo(19.20 * skx, 52.30 * sky, 18.90 * skx, 50.40 * sky, 18.60 * skx, 48.40 * sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 1, 18.60* skx, 47.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(43.70 * skx, 45.70* sky);
		c.curveTo(43.50 * skx, 48.80 * sky, 43.40 * skx, 51.70 * sky, 43.20 * skx, 54.60 * sky);
		c.arcTo(19.50 * skx, 19.50 * sky, 0, 0, 1, 42.90* skx, 58.00* sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 40.90* skx, 60.10* sky);
		c.curveTo(39.10 * skx, 60.30 * sky, 38.10 * skx, 59.90 * sky, 37.60 * skx, 58.50 * sky);
		c.arcTo(40.10 * skx, 40.10 * sky, 0, 0, 1, 36.00* skx, 48.70* sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 0, 43.70* skx, 45.70* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(46.70 * skx, 45.40* sky);
		c.lineTo(50.10* skx,45.10* sky);
		c.lineTo(50.10* skx,46.10 * sky);
		c.lineTo(49.80* skx,56.50* sky);
		c.lineTo(49.80* skx,57.30 * sky);
		c.curveTo(49.60 * skx, 59.90 * sky, 47.80 * skx, 60.90 * sky, 45.70 * skx, 59.90 * sky);
		c.curveTo(46.00 * skx, 55.00 * sky, 46.40 * skx, 50.20 * sky, 46.70 * skx, 45.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m90302049800ee04ce3f780e054f896f', m90302049800ee04ce3f780e054f896f);
	m90302049800ee04ce3f780e054f896f.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m7af36c2a4e0014f50400e230982e396() {
		mxActor.call(this);
	};
	mxUtils.extend(m7af36c2a4e0014f50400e230982e396, mxActor);
	m7af36c2a4e0014f50400e230982e396.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 71;
		h1 = 61;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(22.20 * skx, 46.20* sky);
		c.curveTo(22.40 * skx, 48.30 * sky, 22.60 * skx, 50.30 * sky, 22.90 * skx, 52.30 * sky);
		c.curveTo(23.199999999999996 * skx, 54.3 * sky, 23.50 * skx, 55.80 * sky, 23.80 * skx, 57.50 * sky);
		c.lineTo(23.80* skx,58.10 * sky);
		c.curveTo(24.10 * skx, 60.50 * sky, 23.40 * skx, 61.20 * sky, 21.10 * skx, 60.60 * sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 19.90* skx, 59.00* sky);
		c.curveTo(19.10 * skx, 56.40 * sky, 18.40 * skx, 53.80 * sky, 17.80 * skx, 51.10 * sky);
		c.curveTo(17.200000000000003 * skx, 48.400000000000006 * sky, 16.70 * skx, 46.80 * sky, 16.20 * skx, 44.60 * sky);
		c.lineTo(15.90* skx,43.50* sky);
		c.lineTo(15.60 * skx,43.50* sky);
		c.curveTo(15.60 * skx, 43.90 * sky, 15.50 * skx, 44.30 * sky, 15.50 * skx, 44.70 * sky);
		c.curveTo(15.10 * skx, 49.30 * sky, 14.80 * skx, 54.00 * sky, 14.40 * skx, 58.70 * sky);
		c.curveTo(14.20 * skx, 61.10 * sky, 13.70 * skx, 60.70 * sky, 11.80 * skx, 60.60 * sky);
		c.curveTo(9.900000000000002 * skx, 60.5 * sky, 10.80 * skx, 59.80 * sky, 10.70 * skx, 59.30 * sky);
		c.curveTo(10.20 * skx, 57.10 * sky, 9.90 * skx, 55.00 * sky, 9.60 * skx, 52.80 * sky);
		c.curveTo(9.20 * skx, 48.60 * sky, 8.90 * skx, 44.50 * sky, 8.50 * skx, 40.30 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 7.70* skx, 39.00* sky);
		c.curveTo(4.40 * skx, 36.70 * sky, 2.60 * skx, 33.70 * sky, 2.90 * skx, 29.60 * sky);
		c.arcTo(1.50 * skx, 1.50 * sky, 0, 0, 0, 2.50* skx, 28.50* sky);
		c.arcTo(10.20 * skx, 10.20 * sky, 0, 0, 1, 5.90* skx, 12.60* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 6.70* skx, 11.80* sky);
		c.curveTo(8.70 * skx, 7.00 * sky, 12.30 * skx, 4.70 * sky, 17.30 * skx, 4.40 * sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 0, 19.30* skx, 3.50* sky);
		c.curveTo(22.40 * skx, 0.00 * sky, 27.40 * skx, -0.90 * sky, 32.00 * skx, 0.90 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 33.60* skx, 0.90* sky);
		c.arcTo(12.60 * skx, 12.60 * sky, 0, 0, 1, 47.80* skx, 4.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 48.90* skx, 5.50* sky);
		c.arcTo(13.20 * skx, 13.20 * sky, 0, 0, 1, 60.10* skx, 14.70* sky);
		c.arcTo(14.30 * skx, 14.30 * sky, 0, 0, 1, 60.50* skx, 16.90* sky);
		c.lineTo(61.50* skx,17.10* sky);
		c.curveTo(66.20 * skx, 18.50 * sky, 70.10 * skx, 23.00 * sky, 70.50 * skx, 27.60 * sky);
		c.arcTo(15.70 * skx, 15.70 * sky, 0, 0, 0, 71.00* skx, 30.60* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 69.50* skx, 34.20* sky);
		c.arcTo(13.00 * skx, 13.00 * sky, 0, 0, 1, 63.40* skx, 35.60* sky);
		c.curveTo(61.90 * skx, 35.70 * sky, 60.40 * skx, 35.60 * sky, 58.80 * skx, 35.60 * sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 58.70* skx, 35.90* sky);
		c.arcTo(10.50 * skx, 10.50 * sky, 0, 0, 1, 53.30* skx, 42.50* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 52.50* skx, 43.60* sky);
		c.curveTo(52.80 * skx, 48.20 * sky, 53.00 * skx, 52.70 * sky, 53.30 * skx, 57.20 * sky);
		c.lineTo(53.30* skx,58.30 * sky);
		c.curveTo(53.40 * skx, 60.60 * sky, 52.80 * skx, 61.10 * sky, 50.60 * skx, 60.60 * sky);
		c.curveTo(50.10 * skx, 60.50 * sky, 49.60 * skx, 59.80 * sky, 49.40 * skx, 59.20 * sky);
		c.curveTo(48.70 * skx, 56.80 * sky, 48.10 * skx, 54.30 * sky, 47.50 * skx, 51.90 * sky);
		c.lineTo(46.00* skx,43.80* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 44.00* skx, 46.20* sky);
		c.curveTo(43.80 * skx, 49.80 * sky, 43.70 * skx, 53.50 * sky, 43.60 * skx, 57.20 * sky);
		c.lineTo(43.60* skx,58.30 * sky);
		c.curveTo(43.40 * skx, 60.50 * sky, 42.70 * skx, 61.10 * sky, 40.50 * skx, 60.60 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 39.60* skx, 59.40* sky);
		c.curveTo(39.10 * skx, 57.30 * sky, 38.70 * skx, 55.20 * sky, 38.40 * skx, 53.00 * sky);
		c.curveTo(38.099999999999994 * skx, 50.8 * sky, 38.00 * skx, 49.40 * sky, 37.70 * skx, 47.60 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 36.90* skx, 47.00* sky);
		c.arcTo(13.20 * skx, 13.20 * sky, 0, 0, 1, 30.20* skx, 44.90* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 0, 29.30* skx, 44.80* sky);
		c.arcTo(12.80 * skx, 12.80 * sky, 0, 0, 1, 22.20* skx, 46.20* sky);
		c.close();
		c.moveTo(55.20 * skx, 16.80* sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 0, 52.10* skx, 12.30* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 0, 44.30* skx, 11.60* sky);
		c.curveTo(44.30 * skx, 8.90 * sky, 43.30 * skx, 6.90 * sky, 40.70 * skx, 6.00 * sky);
		c.curveTo(38.10000000000001 * skx, 5.1 * sky, 35.00 * skx, 5.40 * sky, 32.80 * skx, 8.00 * sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 0, 26.20* skx, 5.50* sky);
		c.curveTo(23.30 * skx, 6.00 * sky, 22.10 * skx, 8.10 * sky, 21.50 * skx, 10.70 * sky);
		c.curveTo(17.90 * skx, 9.30 * sky, 15.60 * skx, 9.40 * sky, 13.50 * skx, 11.20 * sky);
		c.curveTo(11.4 * skx, 12.999999999999998 * sky, 11.20 * skx, 14.90 * sky, 12.00 * skx, 17.20 * sky);
		c.curveTo(8.20 * skx, 16.90 * sky, 6.10 * skx, 18.00 * sky, 5.50 * skx, 20.70 * sky);
		c.curveTo(4.9 * skx, 23.4 * sky, 6.00 * skx, 25.10 * sky, 9.80 * skx, 26.80 * sky);
		c.lineTo(9.40* skx,27.40* sky);
		c.curveTo(7.30 * skx, 30.50 * sky, 8.20 * skx, 33.50 * sky, 11.70 * skx, 35.00 * sky);
		c.arcTo(7.10 * skx, 7.10 * sky, 0, 0, 0, 16.90* skx, 35.20* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 0, 21.80* skx, 40.70* sky);
		c.arcTo(7.30 * skx, 7.30 * sky, 0, 0, 0, 29.00* skx, 38.40* sky);
		c.lineTo(30.30* skx,37.00* sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 0, 35.50* skx, 41.40* sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 0, 41.20* skx, 40.60* sky);
		c.arcTo(4.10 * skx, 4.10 * sky, 0, 0, 0, 43.20* skx, 36.80* sky);
		c.curveTo(47.50 * skx, 39.70 * sky, 52.90 * skx, 38.30 * sky, 53.50 * skx, 34.30 * sky);
		c.curveTo(50.20 * skx, 33.10 * sky, 48.90 * skx, 30.50 * sky, 48.50 * skx, 27.30 * sky);
		c.arcTo(17.90 * skx, 17.90 * sky, 0, 0, 1, 48.60* skx, 23.30* sky);
		c.curveTo(46.60 * skx, 23.10 * sky, 44.70 * skx, 23.00 * sky, 42.80 * skx, 22.70 * sky);
		c.curveTo(40.89999999999999 * skx, 22.4 * sky, 41.10 * skx, 21.70 * sky, 41.70 * skx, 20.30 * sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 50.10* skx, 16.90* sky);
		c.curveTo(51.90 * skx, 17.50 * sky, 53.40 * skx, 17.10 * sky, 55.20 * skx, 16.80 * sky);
		c.close();
		c.moveTo(61.10 * skx, 25.80* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 63.90* skx, 25.80* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 62.40* skx, 24.40* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 61.10* skx, 25.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m7af36c2a4e0014f50400e230982e396', m7af36c2a4e0014f50400e230982e396);
	m7af36c2a4e0014f50400e230982e396.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function mf6f98a3ebde03a1276a77d3c61859df() {
		mxActor.call(this);
	};
	mxUtils.extend(mf6f98a3ebde03a1276a77d3c61859df, mxActor);
	mf6f98a3ebde03a1276a77d3c61859df.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 54;
		h1 = 54;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(0.00 * skx, 29.00* sky);
		c.arcTo(35.00 * skx, 35.00 * sky, 0, 0, 1, 4.00* skx, 13.50* sky);
		c.arcTo(26.20 * skx, 26.20 * sky, 0, 0, 1, 14.80* skx, 2.20* sky);
		c.arcTo(18.60 * skx, 18.60 * sky, 0, 0, 1, 26.60* skx, 0.20* sky);
		c.curveTo(35.70 * skx, 1.70 * sky, 42.60 * skx, 6.80 * sky, 48.10 * skx, 14.00 * sky);
		c.arcTo(28.60 * skx, 28.60 * sky, 0, 0, 1, 53.70* skx, 26.10* sky);
		c.arcTo(19.30 * skx, 19.30 * sky, 0, 0, 1, 48.40* skx, 44.30* sky);
		c.arcTo(31.60 * skx, 31.60 * sky, 0, 0, 1, 31.80* skx, 53.30* sky);
		c.arcTo(31.80 * skx, 31.80 * sky, 0, 0, 1, 20.30* skx, 53.60* sky);
		c.curveTo(10.50 * skx, 51.80 * sky, 3.10 * skx, 45.20 * sky, 0.90 * skx, 35.40 * sky);
		c.curveTo(0.50 * skx, 33.30 * sky, 0.30 * skx, 31.20 * sky, 0.00 * skx, 29.00 * sky);
		c.close();
		c.moveTo(34.50 * skx, 37.40* sky);
		c.lineTo(34.50* skx,41.40 * sky);
		c.curveTo(34.40 * skx, 42.20 * sky, 34.70 * skx, 42.50 * sky, 35.50 * skx, 42.60 * sky);
		c.arcTo(47.10 * skx, 47.10 * sky, 0, 0, 0, 40.80* skx, 42.90* sky);
		c.curveTo(47.50 * skx, 42.20 * sky, 51.70 * skx, 37.50 * sky, 51.70 * skx, 30.80 * sky);
		c.arcTo(25.30 * skx, 25.30 * sky, 0, 0, 0, 47.20* skx, 16.90* sky);
		c.arcTo(34.00 * skx, 34.00 * sky, 0, 0, 0, 34.40* skx, 5.30* sky);
		c.curveTo(30.10 * skx, 3.10 * sky, 25.60 * skx, 1.90 * sky, 20.70 * skx, 2.80 * sky);
		c.arcTo(10.60 * skx, 10.60 * sky, 0, 0, 0, 12.50* skx, 8.80* sky);
		c.curveTo(10.60 * skx, 12.80 * sky, 11.00 * skx, 16.90 * sky, 12.20 * skx, 20.90 * sky);
		c.arcTo(30.30 * skx, 30.30 * sky, 0, 0, 0, 20.60* skx, 34.40* sky);
		c.curveTo(22.00 * skx, 35.70 * sky, 23.60 * skx, 36.90 * sky, 25.10 * skx, 38.20 * sky);
		c.curveTo(25.30 * skx, 37.80 * sky, 25.50 * skx, 37.70 * sky, 25.50 * skx, 37.50 * sky);
		c.curveTo(25.5 * skx, 37.3 * sky, 26.10 * skx, 34.70 * sky, 26.30 * skx, 33.40 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 0, 25.90* skx, 32.30* sky);
		c.arcTo(29.50 * skx, 29.50 * sky, 0, 0, 1, 19.20* skx, 24.50* sky);
		c.curveTo(17.30 * skx, 21.10 * sky, 15.90 * skx, 17.50 * sky, 16.10 * skx, 13.50 * sky);
		c.arcTo(6.50 * skx, 6.50 * sky, 0, 0, 1, 23.20* skx, 7.20* sky);
		c.arcTo(20.50 * skx, 20.50 * sky, 0, 0, 1, 32.20* skx, 9.90* sky);
		c.curveTo(39.80 * skx, 14.30 * sky, 45.10 * skx, 20.40 * sky, 46.70 * skx, 29.20 * sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 1, 46.10* skx, 34.90* sky);
		c.curveTo(44.90 * skx, 37.20 * sky, 42.10 * skx, 38.50 * sky, 38.90 * skx, 38.10 * sky);
		c.close();
		c.moveTo(27.90 * skx, 38.20* sky);
		c.lineTo(28.20* skx,38.40* sky);
		c.curveTo(29.50 * skx, 37.30 * sky, 30.80 * skx, 36.20 * sky, 32.00 * skx, 35.00 * sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 34.40* skx, 34.50* sky);
		c.arcTo(12.70 * skx, 12.70 * sky, 0, 0, 0, 41.10* skx, 35.60* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 44.30* skx, 32.40* sky);
		c.arcTo(13.50 * skx, 13.50 * sky, 0, 0, 0, 43.40* skx, 25.80* sky);
		c.arcTo(26.80 * skx, 26.80 * sky, 0, 0, 0, 30.00* skx, 11.50* sky);
		c.arcTo(13.30 * skx, 13.30 * sky, 0, 0, 0, 21.90* skx, 9.90* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 18.80* skx, 12.40* sky);
		c.curveTo(18.10 * skx, 14.70 * sky, 18.70 * skx, 16.80 * sky, 19.40 * skx, 18.90 * sky);
		c.arcTo(25.00 * skx, 25.00 * sky, 0, 0, 0, 28.10* skx, 30.90* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 28.90* skx, 33.10* sky);
		c.curveTo(28.80 * skx, 34.00 * sky, 28.50 * skx, 34.80 * sky, 28.40 * skx, 35.70 * sky);
		c.arcTo(18.40 * skx, 18.40 * sky, 0, 0, 0, 27.90* skx, 38.20* sky);
		c.close();
		c.moveTo(24.50 * skx, 47.00* sky);
		c.curveTo(24.70 * skx, 47.10 * sky, 24.70 * skx, 47.20 * sky, 24.80 * skx, 47.10 * sky);
		c.arcTo(16.50 * skx, 16.50 * sky, 0, 0, 0, 31.70* skx, 42.90* sky);
		c.curveTo(31.80 * skx, 42.80 * sky, 32.00 * skx, 42.70 * sky, 32.00 * skx, 42.50 * sky);
		c.lineTo(32.00* skx,38.40 * sky);
		c.arcTo(24.30 * skx, 24.30 * sky, 0, 0, 1, 28.50* skx, 40.80* sky);
		c.arcTo(5.70 * skx, 5.70 * sky, 0, 0, 0, 25.80* skx, 44.00* sky);
		c.curveTo(25.50 * skx, 45.00 * sky, 24.90 * skx, 46.00 * sky, 24.50 * skx, 47.00 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('mf6f98a3ebde03a1276a77d3c61859df', mf6f98a3ebde03a1276a77d3c61859df);
	mf6f98a3ebde03a1276a77d3c61859df.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m50a4295992ba0d4c537ae945699a8c2() {
		mxActor.call(this);
	};
	mxUtils.extend(m50a4295992ba0d4c537ae945699a8c2, mxActor);
	m50a4295992ba0d4c537ae945699a8c2.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 53;
		h1 = 60;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(32.40 * skx, 9.60* sky);
		c.arcTo(13.60 * skx, 13.60 * sky, 0, 0, 0, 34.30* skx, 0.00* sky);
		c.arcTo(8.10 * skx, 8.10 * sky, 0, 0, 0, 31.30* skx, 1.00* sky);
		c.curveTo(31.40 * skx, 1.30 * sky, 31.40 * skx, 2.10 * sky, 31.10 * skx, 2.20 * sky);
		c.curveTo(30.800000000000004 * skx, 2.3000000000000003 * sky, 30.50 * skx, 1.80 * sky, 30.30 * skx, 1.50 * sky);
		c.arcTo(10.30 * skx, 10.30 * sky, 0, 0, 0, 27.60* skx, 4.70* sky);
		c.curveTo(27.90 * skx, 4.90 * sky, 28.40 * skx, 5.40 * sky, 28.40 * skx, 5.80 * sky);
		c.curveTo(28.4 * skx, 6.199999999999999 * sky, 27.40 * skx, 5.90 * sky, 27.00 * skx, 5.80 * sky);
		c.arcTo(31.40 * skx, 31.40 * sky, 0, 0, 0, 25.40* skx, 11.10* sky);
		c.curveTo(19.10 * skx, -0.90 * sky, 10.80 * skx, 5.70 * sky, 10.80 * skx, 5.70 * sky);
		c.arcTo(28.20 * skx, 28.20 * sky, 0, 0, 0, 12.70* skx, 8.60* sky);
		c.lineTo(12.80 * skx,8.60* sky);
		c.curveTo(13.10 * skx, 8.20 * sky, 14.10 * skx, 7.10 * sky, 14.70 * skx, 7.50 * sky);
		c.arcTo(0.10 * skx, 0.10 * sky, 0, 0, 0, 14.80* skx, 7.60* sky);
		c.lineTo(14.80 * skx,7.60* sky);
		c.curveTo(15.00 * skx, 8.10 * sky, 14.00 * skx, 9.40 * sky, 14.00 * skx, 9.60 * sky);
		c.arcTo(24.10 * skx, 24.10 * sky, 0, 0, 0, 16.20* skx, 11.60* sky);
		c.curveTo(16.70 * skx, 10.90 * sky, 17.70 * skx, 9.50 * sky, 17.90 * skx, 9.60 * sky);
		c.lineTo(18.00 * skx,9.60* sky);
		c.curveTo(18.40 * skx, 10.20 * sky, 17.60 * skx, 12.40 * sky, 17.60 * skx, 12.60 * sky);
		c.lineTo(17.50 * skx,12.60* sky);
		c.lineTo(17.50* skx,12.80 * sky);
		c.curveTo(0.60 * skx, 13.10 * sky, -0.20 * skx, 29.60 * sky, 0.00 * skx, 29.60 * sky);
		c.lineTo(4.30* skx,28.30* sky);
		c.curveTo(5.30 * skx, 28.00 * sky, 4.50 * skx, 23.80 * sky, 5.30 * skx, 23.70 * sky);
		c.curveTo(6.1 * skx, 23.599999999999998 * sky, 6.90 * skx, 27.10 * sky, 6.90 * skx, 27.10 * sky);
		c.arcTo(47.00 * skx, 47.00 * sky, 0, 0, 0, 11.80* skx, 24.90* sky);
		c.arcTo(14.60 * skx, 14.60 * sky, 0, 0, 1, 12.40* skx, 20.00* sky);
		c.curveTo(12.30 * skx, 21.50 * sky, 16.40 * skx, 25.70 * sky, 16.40 * skx, 25.70 * sky);
		c.curveTo(14.60 * skx, 35.10 * sky, 19.10 * skx, 38.60 * sky, 20.80 * skx, 41.00 * sky);
		c.arcTo(41.10 * skx, 41.10 * sky, 0, 0, 0, 23.00* skx, 37.50* sky);
		c.lineTo(21.30* skx,34.50* sky);
		c.lineTo(24.50* skx,34.90* sky);
		c.curveTo(25.20 * skx, 33.80 * sky, 25.80 * skx, 32.70 * sky, 26.40 * skx, 31.60 * sky);
		c.lineTo(26.90* skx,30.90* sky);
		c.lineTo(27.10* skx,30.50* sky);
		c.arcTo(0.40 * skx, 0.40 * sky, 0, 0, 0, 27.00* skx, 30.20* sky);
		c.lineTo(26.70* skx,29.90* sky);
		c.lineTo(26.50* skx,29.60* sky);
		c.lineTo(25.90* skx,28.80* sky);
		c.lineTo(24.70* skx,27.20* sky);
		c.lineTo(24.40* skx,26.60* sky);
		c.lineTo(29.10 * skx,26.60* sky);
		c.lineTo(29.90* skx,25.10* sky);
		c.curveTo(31.30 * skx, 28.50 * sky, 37.10 * skx, 44.20 * sky, 29.60 * skx, 59.60 * sky);
		c.lineTo(38.20* skx,59.90* sky);
		c.curveTo(38.20 * skx, 59.90 * sky, 41.20 * skx, 39.20 * sky, 30.90 * skx, 22.80 * sky);
		c.curveTo(33.40 * skx, 21.80 * sky, 37.50 * skx, 25.50 * sky, 38.60 * skx, 26.40 * sky);
		c.arcTo(22.50 * skx, 22.50 * sky, 0, 0, 0, 38.70* skx, 22.00* sky);
		c.curveTo(38.30 * skx, 22.00 * sky, 37.40 * skx, 21.80 * sky, 37.30 * skx, 21.40 * sky);
		c.curveTo(37.199999999999996 * skx, 20.999999999999996 * sky, 38.00 * skx, 20.40 * sky, 38.30 * skx, 20.10 * sky);
		c.curveTo(37.30 * skx, 17.20 * sky, 35.20 * skx, 17.30 * sky, 35.20 * skx, 17.30 * sky);
		c.lineTo(35.50* skx,15.40* sky);
		c.lineTo(38.40* skx,15.90* sky);
		c.lineTo(37.80 * skx,15.90* sky);
		c.curveTo(37.80 * skx, 15.90 * sky, 37.90 * skx, 13.30 * sky, 38.60 * skx, 13.30 * sky);
		c.curveTo(39.300000000000004 * skx, 13.3 * sky, 39.70 * skx, 15.10 * sky, 39.80 * skx, 16.10 * sky);
		c.lineTo(42.50 * skx,16.10* sky);
		c.curveTo(42.50 * skx, 15.60 * sky, 42.20 * skx, 11.90 * sky, 42.50 * skx, 12.00 * sky);
		c.arcTo(22.10 * skx, 22.10 * sky, 0, 0, 1, 45.20* skx, 16.10* sky);
		c.arcTo(46.70 * skx, 46.70 * sky, 0, 0, 0, 53.30* skx, 15.10* sky);
		c.curveTo(46.60 * skx, 5.10 * sky, 38.80 * skx, 7.40 * sky, 32.40 * skx, 9.60 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m50a4295992ba0d4c537ae945699a8c2', m50a4295992ba0d4c537ae945699a8c2);
	m50a4295992ba0d4c537ae945699a8c2.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m8fc6eaa922abdf8a4a749f5f1bf7eb0() {
		mxActor.call(this);
	};
	mxUtils.extend(m8fc6eaa922abdf8a4a749f5f1bf7eb0, mxActor);
	m8fc6eaa922abdf8a4a749f5f1bf7eb0.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 54;
		h1 = 54;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(25.40 * skx, 54.20* sky);
		c.curveTo(17.90 * skx, 54.00 * sky, 11.50 * skx, 51.80 * sky, 6.40 * skx, 46.40 * sky);
		c.arcTo(24.20 * skx, 24.20 * sky, 0, 0, 1, 0.10* skx, 31.80* sky);
		c.arcTo(31.50 * skx, 31.50 * sky, 0, 0, 1, 9.20* skx, 6.30* sky);
		c.curveTo(15.30 * skx, 0.10 * sky, 22.80 * skx, -1.50 * sky, 30.90 * skx, 1.40 * sky);
		c.curveTo(42.30 * skx, 5.50 * sky, 49.90 * skx, 13.40 * sky, 53.20 * skx, 25.10 * sky);
		c.curveTo(55.60 * skx, 33.40 * sky, 52.90 * skx, 40.50 * sky, 46.50 * skx, 46.10 * sky);
		c.arcTo(32.20 * skx, 32.20 * sky, 0, 0, 1, 25.40* skx, 54.20* sky);
		c.close();
		c.moveTo(25.20 * skx, 38.30* sky);
		c.curveTo(25.50 * skx, 36.70 * sky, 25.70 * skx, 35.30 * sky, 26.10 * skx, 33.90 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 25.50* skx, 32.10* sky);
		c.arcTo(28.40 * skx, 28.40 * sky, 0, 0, 1, 18.00* skx, 22.70* sky);
		c.arcTo(19.30 * skx, 19.30 * sky, 0, 0, 1, 15.90* skx, 13.30* sky);
		c.curveTo(16.20 * skx, 10.00 * sky, 18.30 * skx, 7.70 * sky, 21.60 * skx, 7.50 * sky);
		c.arcTo(16.90 * skx, 16.90 * sky, 0, 0, 1, 27.10* skx, 8.00* sky);
		c.curveTo(35.60 * skx, 10.50 * sky, 41.40 * skx, 16.10 * sky, 45.00 * skx, 24.00 * sky);
		c.arcTo(15.50 * skx, 15.50 * sky, 0, 0, 1, 46.60* skx, 32.50* sky);
		c.arcTo(5.80 * skx, 5.80 * sky, 0, 0, 1, 41.70* skx, 38.00* sky);
		c.arcTo(10.60 * skx, 10.60 * sky, 0, 0, 1, 36.70* skx, 37.90* sky);
		c.lineTo(34.40* skx,37.30* sky);
		c.lineTo(34.40* skx,42.40 * sky);
		c.arcTo(19.60 * skx, 19.60 * sky, 0, 0, 0, 40.80* skx, 43.00* sky);
		c.arcTo(11.20 * skx, 11.20 * sky, 0, 0, 0, 51.10* skx, 34.30* sky);
		c.arcTo(17.10 * skx, 17.10 * sky, 0, 0, 0, 50.80* skx, 25.30* sky);
		c.arcTo(32.00 * skx, 32.00 * sky, 0, 0, 0, 38.40* skx, 8.00* sky);
		c.curveTo(34.10 * skx, 4.80 * sky, 29.40 * skx, 2.70 * sky, 23.90 * skx, 2.60 * sky);
		c.curveTo(18.4 * skx, 2.5 * sky, 15.70 * skx, 3.80 * sky, 13.10 * skx, 7.60 * sky);
		c.curveTo(10.5 * skx, 11.399999999999999 * sky, 10.80 * skx, 14.00 * sky, 11.20 * skx, 17.40 * sky);
		c.arcTo(28.50 * skx, 28.50 * sky, 0, 0, 0, 17.00* skx, 30.60* sky);
		c.arcTo(33.60 * skx, 33.60 * sky, 0, 0, 0, 25.20* skx, 38.30* sky);
		c.close();
		c.moveTo(9.20 * skx, 10.00* sky);
		c.lineTo(8.50* skx,10.80* sky);
		c.arcTo(29.20 * skx, 29.20 * sky, 0, 0, 0, 3.00* skx, 33.80* sky);
		c.curveTo(4.50 * skx, 42.20 * sky, 9.30 * skx, 48.00 * sky, 17.60 * skx, 50.50 * sky);
		c.curveTo(25.900000000000002 * skx, 53.0 * sky, 35.10 * skx, 51.20 * sky, 42.90 * skx, 45.90 * sky);
		c.lineTo(44.10* skx,44.90* sky);
		c.lineTo(43.60 * skx,44.90* sky);
		c.arcTo(19.50 * skx, 19.50 * sky, 0, 0, 1, 33.70* skx, 44.80* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 0, 32.50* skx, 45.10* sky);
		c.arcTo(38.20 * skx, 38.20 * sky, 0, 0, 1, 23.80* skx, 49.10* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 22.10* skx, 48.80* sky);
		c.curveTo(21.70 * skx, 48.30 * sky, 21.90 * skx, 47.70 * sky, 22.10 * skx, 47.10 * sky);
		c.curveTo(22.300000000000004 * skx, 46.5 * sky, 23.50 * skx, 43.60 * sky, 24.30 * skx, 41.90 * sky);
		c.curveTo(25.1 * skx, 40.199999999999996 * sky, 24.40 * skx, 40.70 * sky, 23.70 * skx, 40.20 * sky);
		c.arcTo(35.50 * skx, 35.50 * sky, 0, 0, 1, 11.20* skx, 25.80* sky);
		c.arcTo(23.50 * skx, 23.50 * sky, 0, 0, 1, 8.80* skx, 12.30* sky);
		c.curveTo(8.90 * skx, 11.60 * sky, 9.10 * skx, 10.90 * sky, 9.20 * skx, 10.00 * sky);
		c.close();
		c.moveTo(27.70 * skx, 38.30* sky);
		c.lineTo(27.90* skx,38.50* sky);
		c.curveTo(29.20 * skx, 37.40 * sky, 30.50 * skx, 36.40 * sky, 31.70 * skx, 35.20 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 34.30* skx, 34.60* sky);
		c.arcTo(12.50 * skx, 12.50 * sky, 0, 0, 0, 40.90* skx, 35.70* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 44.10* skx, 32.30* sky);
		c.arcTo(12.50 * skx, 12.50 * sky, 0, 0, 0, 43.80* skx, 28.00* sky);
		c.curveTo(41.20 * skx, 19.30 * sky, 35.50 * skx, 13.60 * sky, 27.00 * skx, 10.50 * sky);
		c.arcTo(10.30 * skx, 10.30 * sky, 0, 0, 0, 21.50* skx, 10.00* sky);
		c.curveTo(19.90 * skx, 10.30 * sky, 18.70 * skx, 11.10 * sky, 18.60 * skx, 12.80 * sky);
		c.arcTo(14.10 * skx, 14.10 * sky, 0, 0, 0, 18.80* skx, 17.40* sky);
		c.arcTo(24.10 * skx, 24.10 * sky, 0, 0, 0, 27.80* skx, 30.90* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 28.70* skx, 33.40* sky);
		c.curveTo(28.30 * skx, 35.00 * sky, 28.00 * skx, 36.70 * sky, 27.70 * skx, 38.30 * sky);
		c.close();
		c.moveTo(31.90 * skx, 38.50* sky);
		c.lineTo(27.00* skx,41.70* sky);
		c.lineTo(26.70* skx,42.10* sky);
		c.lineTo(25.50* skx,45.50* sky);
		c.lineTo(25.50* skx,45.80 * sky);
		c.lineTo(31.50* skx,42.60* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 0, 31.80* skx, 42.00* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m8fc6eaa922abdf8a4a749f5f1bf7eb0', m8fc6eaa922abdf8a4a749f5f1bf7eb0);
	m8fc6eaa922abdf8a4a749f5f1bf7eb0.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m9f8112ce21d62a386b97a9a41866ad0() {
		mxActor.call(this);
	};
	mxUtils.extend(m9f8112ce21d62a386b97a9a41866ad0, mxActor);
	m9f8112ce21d62a386b97a9a41866ad0.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 63;
		h1 = 66;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(0.00 * skx, 47.00* sky);
		c.curveTo(0.20 * skx, 43.40 * sky, 0.80 * skx, 40.00 * sky, 3.10 * skx, 37.00 * sky);
		c.curveTo(5.4 * skx, 34.0 * sky, 12.50 * skx, 31.40 * sky, 17.00 * skx, 33.90 * sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 20.40* skx, 33.90* sky);
		c.curveTo(24.30 * skx, 31.80 * sky, 28.00 * skx, 32.90 * sky, 31.40 * skx, 35.10 * sky);
		c.curveTo(34.8 * skx, 37.300000000000004 * sky, 36.40 * skx, 40.60 * sky, 37.00 * skx, 44.50 * sky);
		c.curveTo(38.50 * skx, 53.40 * sky, 32.20 * skx, 61.60 * sky, 24.30 * skx, 64.50 * sky);
		c.curveTo(13.60 * skx, 68.50 * sky, 1.90 * skx, 60.60 * sky, 0.30 * skx, 50.10 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(33.60 * skx, 61.80* sky);
		c.curveTo(40.90 * skx, 53.70 * sky, 42.20 * skx, 44.90 * sky, 36.40 * skx, 35.40 * sky);
		c.arcTo(0.10 * skx, 0.10 * sky, 0, 0, 1, 36.50* skx, 35.30* sky);
		c.curveTo(38.30 * skx, 35.60 * sky, 39.30 * skx, 34.50 * sky, 40.30 * skx, 33.20 * sky);
		c.curveTo(42.80 * skx, 30.30 * sky, 46.20 * skx, 29.70 * sky, 49.70 * skx, 30.00 * sky);
		c.curveTo(54.80 * skx, 30.40 * sky, 58.30 * skx, 33.30 * sky, 60.60 * skx, 37.70 * sky);
		c.curveTo(64.40 * skx, 44.90 * sky, 63.40 * skx, 51.70 * sky, 58.80 * skx, 58.10 * sky);
		c.curveTo(54.199999999999996 * skx, 64.5 * sky, 48.60 * skx, 65.90 * sky, 41.70 * skx, 65.30 * sky);
		c.arcTo(17.30 * skx, 17.30 * sky, 0, 0, 1, 34.20* skx, 62.40* sky);
		c.lineTo(33.80* skx,62.10* sky);
		c.curveTo(33.80 * skx, 62.00 * sky, 33.70 * skx, 61.90 * sky, 33.60 * skx, 61.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(42.60 * skx, 5.80* sky);
		c.lineTo(47.20* skx,7.20* sky);
		c.arcTo(14.80 * skx, 14.80 * sky, 0, 0, 1, 56.10* skx, 15.10* sky);
		c.curveTo(56.70 * skx, 16.40 * sky, 57.50 * skx, 17.60 * sky, 58.20 * skx, 18.90 * sky);
		c.curveTo(58.900000000000006 * skx, 20.199999999999996 * sky, 58.60 * skx, 20.80 * sky, 57.50 * skx, 21.20 * sky);
		c.curveTo(52.70 * skx, 23.10 * sky, 47.90 * skx, 23.70 * sky, 43.10 * skx, 21.10 * sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 1, 37.00* skx, 13.00* sky);
		c.curveTo(36.70 * skx, 11.60 * sky, 36.60 * skx, 10.10 * sky, 36.30 * skx, 8.50 * sky);
		c.lineTo(34.20* skx,9.80* sky);
		c.arcTo(29.90 * skx, 29.90 * sky, 0, 0, 0, 22.60* skx, 23.30* sky);
		c.arcTo(63.60 * skx, 63.60 * sky, 0, 0, 0, 20.70* skx, 29.50* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 1, 18.60* skx, 31.30* sky);
		c.arcTo(1.00 * skx, 1.00 * sky, 0, 0, 1, 17.60* skx, 29.90* sky);
		c.arcTo(32.00 * skx, 32.00 * sky, 0, 0, 1, 25.20* skx, 13.70* sky);
		c.arcTo(36.80 * skx, 36.80 * sky, 0, 0, 1, 36.70* skx, 4.90* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 0, 37.60* skx, 4.10* sky);
		c.lineTo(39.90* skx,1.00* sky);
		c.curveTo(40.80 * skx, -0.10 * sky, 41.50 * skx, -0.30 * sky, 42.70 * skx, 0.40 * sky);
		c.lineTo(43.80* skx,1.20* sky);
		c.curveTo(45.00 * skx, 2.30 * sky, 45.00 * skx, 3.00 * sky, 43.90 * skx, 4.20 * sky);
		c.lineTo(42.30* skx,5.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(34.70 * skx, 15.80* sky);
		c.curveTo(35.90 * skx, 18.00 * sky, 37.60 * skx, 19.80 * sky, 37.50 * skx, 22.50 * sky);
		c.curveTo(37.4 * skx, 25.2 * sky, 38.10 * skx, 27.40 * sky, 38.50 * skx, 29.90 * sky);
		c.curveTo(38.60 * skx, 30.70 * sky, 37.90 * skx, 32.30 * sky, 37.10 * skx, 32.50 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 1, 35.90* skx, 31.70* sky);
		c.curveTo(35.50 * skx, 28.50 * sky, 34.90 * skx, 25.40 * sky, 34.50 * skx, 22.20 * sky);
		c.arcTo(45.10 * skx, 45.10 * sky, 0, 0, 1, 34.50* skx, 17.00* sky);
		c.arcTo(5.00 * skx, 5.00 * sky, 0, 0, 1, 34.70* skx, 15.80* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m9f8112ce21d62a386b97a9a41866ad0', m9f8112ce21d62a386b97a9a41866ad0);
	m9f8112ce21d62a386b97a9a41866ad0.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m8fcb263948ca48260be07a72a1011b9() {
		mxActor.call(this);
	};
	mxUtils.extend(m8fcb263948ca48260be07a72a1011b9, mxActor);
	m8fcb263948ca48260be07a72a1011b9.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 63;
		h1 = 66;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(31.30 * skx, 60.20* sky);
		c.arcTo(19.80 * skx, 19.80 * sky, 0, 0, 1, 22.10* skx, 65.20* sky);
		c.curveTo(12.30 * skx, 67.40 * sky, 1.80 * skx, 60.20 * sky, 0.30 * skx, 50.20 * sky);
		c.arcTo(18.70 * skx, 18.70 * sky, 0, 0, 1, 1.30* skx, 40.00* sky);
		c.arcTo(11.80 * skx, 11.80 * sky, 0, 0, 1, 16.70* skx, 33.70* sky);
		c.lineTo(17.10 * skx,33.70* sky);
		c.curveTo(17.30 * skx, 32.30 * sky, 17.40 * skx, 30.90 * sky, 17.60 * skx, 29.50 * sky);
		c.arcTo(31.90 * skx, 31.90 * sky, 0, 0, 1, 30.50* skx, 8.80* sky);
		c.curveTo(32.50 * skx, 7.30 * sky, 34.80 * skx, 6.20 * sky, 36.90 * skx, 4.90 * sky);
		c.arcTo(2.80 * skx, 2.80 * sky, 0, 0, 0, 37.80* skx, 3.90* sky);
		c.curveTo(38.60 * skx, 2.80 * sky, 39.30 * skx, 1.70 * sky, 40.10 * skx, 0.70 * sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 42.30* skx, 0.30* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 43.40* skx, 0.90* sky);
		c.curveTo(45.00 * skx, 2.10 * sky, 45.00 * skx, 3.10 * sky, 43.60 * skx, 4.40 * sky);
		c.lineTo(42.30* skx,5.70* sky);
		c.lineTo(45.00* skx,6.40* sky);
		c.curveTo(49.80 * skx, 7.80 * sky, 53.50 * skx, 10.40 * sky, 55.80 * skx, 14.90 * sky);
		c.lineTo(58.20* skx,18.90* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 57.50* skx, 21.10* sky);
		c.curveTo(51.00 * skx, 24.10 * sky, 41.70 * skx, 23.70 * sky, 37.80 * skx, 15.30 * sky);
		c.curveTo(37.80 * skx, 15.20 * sky, 37.70 * skx, 15.10 * sky, 37.50 * skx, 14.90 * sky);
		c.arcTo(37.90 * skx, 37.90 * sky, 0, 0, 0, 39.50* skx, 33.60* sky);
		c.arcTo(22.60 * skx, 22.60 * sky, 0, 0, 1, 43.80* skx, 30.80* sky);
		c.arcTo(12.30 * skx, 12.30 * sky, 0, 0, 1, 58.20* skx, 34.60* sky);
		c.curveTo(63.40 * skx, 40.80 * sky, 64.20 * skx, 47.80 * sky, 60.70 * skx, 55.00 * sky);
		c.curveTo(57.2 * skx, 62.2 * sky, 51.20 * skx, 65.70 * sky, 43.30 * skx, 65.50 * sky);
		c.arcTo(17.50 * skx, 17.50 * sky, 0, 0, 1, 32.20* skx, 61.00* sky);
		c.close();
		c.moveTo(18.40 * skx, 62.70* sky);
		c.curveTo(24.50 * skx, 62.80 * sky, 31.00 * skx, 58.30 * sky, 33.20 * skx, 52.20 * sky);
		c.curveTo(35.400000000000006 * skx, 46.10000000000001 * sky, 34.70 * skx, 42.40 * sky, 30.80 * skx, 38.20 * sky);
		c.curveTo(28.40 * skx, 35.80 * sky, 23.80 * skx, 34.90 * sky, 20.80 * skx, 36.70 * sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 16.60* skx, 36.90* sky);
		c.arcTo(8.70 * skx, 8.70 * sky, 0, 0, 0, 3.70* skx, 41.90* sky);
		c.curveTo(-0.10 * skx, 54.00 * sky, 9.70 * skx, 62.70 * sky, 18.40 * skx, 62.70 * sky);
		c.close();
		c.moveTo(33.30 * skx, 58.10* sky);
		c.arcTo(15.20 * skx, 15.20 * sky, 0, 0, 0, 46.60* skx, 62.50* sky);
		c.curveTo(56.80 * skx, 60.90 * sky, 61.20 * skx, 50.50 * sky, 59.50 * skx, 43.20 * sky);
		c.curveTo(58.50 * skx, 39.00 * sky, 56.40 * skx, 35.50 * sky, 52.40 * skx, 33.60 * sky);
		c.curveTo(48.4 * skx, 31.700000000000003 * sky, 43.30 * skx, 32.40 * sky, 41.20 * skx, 36.70 * sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 1, 37.90* skx, 38.20* sky);
		c.lineTo(34.60 * skx,38.20* sky);
		c.arcTo(17.90 * skx, 17.90 * sky, 0, 0, 1, 33.30* skx, 58.10* sky);
		c.close();
		c.moveTo(35.90 * skx, 8.70* sky);
		c.curveTo(26.50 * skx, 13.90 * sky, 20.10 * skx, 23.70 * sky, 20.10 * skx, 33.80 * sky);
		c.arcTo(10.00 * skx, 10.00 * sky, 0, 0, 1, 26.00* skx, 32.90* sky);
		c.arcTo(14.80 * skx, 14.80 * sky, 0, 0, 1, 32.10* skx, 35.70* sky);
		c.curveTo(32.40 * skx, 35.90 * sky, 32.70 * skx, 36.10 * sky, 32.90 * skx, 36.00 * sky);
		c.curveTo(33.099999999999994 * skx, 35.9 * sky, 35.60 * skx, 35.40 * sky, 36.90 * skx, 35.10 * sky);
		c.arcTo(42.50 * skx, 42.50 * sky, 0, 0, 1, 35.90* skx, 8.70* sky);
		c.close();
		c.moveTo(39.50 * skx, 8.40* sky);
		c.arcTo(9.90 * skx, 9.90 * sky, 0, 0, 0, 43.70* skx, 18.10* sky);
		c.curveTo(47.20 * skx, 20.50 * sky, 50.90 * skx, 20.30 * sky, 54.80 * skx, 19.10 * sky);
		c.curveTo(51.50 * skx, 11.90 * sky, 46.00 * skx, 8.10 * sky, 39.50 * skx, 8.40 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m8fcb263948ca48260be07a72a1011b9', m8fcb263948ca48260be07a72a1011b9);
	m8fcb263948ca48260be07a72a1011b9.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m76fe09b80b309566a383c42538db86c() {
		mxActor.call(this);
	};
	mxUtils.extend(m76fe09b80b309566a383c42538db86c, mxActor);
	m76fe09b80b309566a383c42538db86c.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 61;
		h1 = 57;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(42.30 * skx, 57.30* sky);
		c.curveTo(39.90 * skx, 56.50 * sky, 37.80 * skx, 55.60 * sky, 35.70 * skx, 55.00 * sky);
		c.arcTo(6.00 * skx, 6.00 * sky, 0, 0, 0, 30.50* skx, 55.70* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 1, 29.70* skx, 55.90* sky);
		c.lineTo(23.80* skx,53.50* sky);
		c.lineTo(25.00* skx,51.30* sky);
		c.curveTo(14.90 * skx, 50.10 * sky, 6.50 * skx, 45.90 * sky, -0.00 * skx, 38.20 * sky);
		c.lineTo(-0.00* skx,37.80 * sky);
		c.lineTo(4.90* skx,38.30* sky);
		c.curveTo(10.90 * skx, 38.40 * sky, 16.20 * skx, 36.90 * sky, 19.70 * skx, 31.60 * sky);
		c.arcTo(22.10 * skx, 22.10 * sky, 0, 0, 0, 23.20* skx, 21.00* sky);
		c.curveTo(23.50 * skx, 18.10 * sky, 23.40 * skx, 15.00 * sky, 24.00 * skx, 12.10 * sky);
		c.curveTo(25.50 * skx, 4.20 * sky, 33.60 * skx, -1.20 * sky, 41.60 * skx, 0.20 * sky);
		c.arcTo(15.60 * skx, 15.60 * sky, 0, 0, 1, 52.90* skx, 9.00* sky);
		c.arcTo(3.80 * skx, 3.80 * sky, 0, 0, 0, 54.30* skx, 10.40* sky);
		c.lineTo(59.90* skx,13.10* sky);
		c.lineTo(61.10* skx,13.80* sky);
		c.lineTo(55.20* skx,17.70* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 54.30* skx, 19.30* sky);
		c.arcTo(54.20 * skx, 54.20 * sky, 0, 0, 1, 52.10* skx, 31.20* sky);
		c.curveTo(50.10 * skx, 37.80 * sky, 46.80 * skx, 43.50 * sky, 41.10 * skx, 47.60 * sky);
		c.lineTo(39.50* skx,48.70* sky);
		c.lineTo(40.30* skx,49.10* sky);
		c.lineTo(45.10* skx,51.30* sky);
		c.curveTo(45.90 * skx, 51.70 * sky, 46.10 * skx, 52.20 * sky, 45.50 * skx, 53.00 * sky);
		c.arcTo(39.80 * skx, 39.80 * sky, 0, 0, 0, 42.30* skx, 57.30* sky);
		c.close();
		c.moveTo(40.70 * skx, 13.60* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 44.10* skx, 17.10* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 47.50* skx, 13.80* sky);
		c.arcTo(3.30 * skx, 3.30 * sky, 0, 0, 0, 44.10* skx, 10.30* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 40.70* skx, 13.60* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m76fe09b80b309566a383c42538db86c', m76fe09b80b309566a383c42538db86c);
	m76fe09b80b309566a383c42538db86c.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m6b85448df0cc0b9078017a002a8ce4b() {
		mxActor.call(this);
	};
	mxUtils.extend(m6b85448df0cc0b9078017a002a8ce4b, mxActor);
	m6b85448df0cc0b9078017a002a8ce4b.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 63;
		h1 = 53;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(61.10 * skx, 9.60* sky);
		c.curveTo(62.60 * skx, 10.60 * sky, 62.70 * skx, 11.10 * sky, 61.80 * skx, 12.80 * sky);
		c.arcTo(10.70 * skx, 10.70 * sky, 0, 0, 1, 57.00* skx, 17.40* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 0, 55.60* skx, 19.40* sky);
		c.curveTo(55.00 * skx, 26.40 * sky, 53.10 * skx, 32.80 * sky, 48.70 * skx, 38.40 * sky);
		c.arcTo(27.20 * skx, 27.20 * sky, 0, 0, 1, 39.30* skx, 45.90* sky);
		c.lineTo(37.90* skx,46.60* sky);
		c.lineTo(42.10* skx,49.40* sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 42.50* skx, 51.50* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 40.80* skx, 52.40* sky);
		c.curveTo(40.40 * skx, 52.50 * sky, 39.90 * skx, 52.00 * sky, 39.50 * skx, 51.70 * sky);
		c.arcTo(10.10 * skx, 10.10 * sky, 0, 0, 0, 27.80* skx, 50.50* sky);
		c.arcTo(8.80 * skx, 8.80 * sky, 0, 0, 0, 26.30* skx, 51.70* sky);
		c.curveTo(25.10 * skx, 52.60 * sky, 24.30 * skx, 52.70 * sky, 23.50 * skx, 52.00 * sky);
		c.curveTo(22.7 * skx, 51.3 * sky, 22.80 * skx, 50.60 * sky, 23.70 * skx, 49.20 * sky);
		c.lineTo(18.00* skx,48.60* sky);
		c.curveTo(12.00 * skx, 47.80 * sky, 6.10 * skx, 46.20 * sky, 1.00 * skx, 42.50 * sky);
		c.curveTo(-0.20 * skx, 41.60 * sky, -0.40 * skx, 40.00 * sky, 0.90 * skx, 39.50 * sky);
		c.arcTo(2.70 * skx, 2.70 * sky, 0, 0, 1, 2.70* skx, 39.40* sky);
		c.curveTo(5.20 * skx, 39.50 * sky, 7.70 * skx, 39.80 * sky, 10.20 * skx, 39.70 * sky);
		c.arcTo(13.90 * skx, 13.90 * sky, 0, 0, 0, 19.90* skx, 35.90* sky);
		c.arcTo(13.90 * skx, 13.90 * sky, 0, 0, 0, 24.00* skx, 26.90* sky);
		c.arcTo(105.10 * skx, 105.10 * sky, 0, 0, 0, 24.60* skx, 15.70* sky);
		c.curveTo(24.80 * skx, 8.80 * sky, 28.50 * skx, 3.20 * sky, 34.80 * skx, 1.00 * sky);
		c.curveTo(41.099999999999994 * skx, -1.2000000000000002 * sky, 47.80 * skx, -0.00 * sky, 52.20 * skx, 5.30 * sky);
		c.arcTo(1.90 * skx, 1.90 * sky, 0, 0, 0, 53.60* skx, 5.80* sky);
		c.quadTo(56.50 * skx, 4.90* sky, 59.30 * skx, 3.70 * sky);
		c.curveTo(60.10 * skx, 3.40 * sky, 60.80 * skx, 2.80 * sky, 61.70 * skx, 3.40 * sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 62.30* skx, 5.70* sky);
		c.close();
		c.moveTo(58.10 * skx, 8.70* sky);
		c.lineTo(57.70* skx,8.30* sky);
		c.lineTo(53.40* skx,9.20* sky);
		c.curveTo(51.80 * skx, 9.60 * sky, 50.60 * skx, 9.40 * sky, 49.90 * skx, 7.70 * sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 49.30* skx, 6.90* sky);
		c.arcTo(12.00 * skx, 12.00 * sky, 0, 0, 0, 41.90* skx, 3.40* sky);
		c.curveTo(35.30 * skx, 2.60 * sky, 29.70 * skx, 6.40 * sky, 28.30 * skx, 12.70 * sky);
		c.arcTo(24.20 * skx, 24.20 * sky, 0, 0, 0, 28.00* skx, 18.10* sky);
		c.arcTo(43.20 * skx, 43.20 * sky, 0, 0, 1, 26.60* skx, 30.60* sky);
		c.curveTo(24.90 * skx, 36.10 * sky, 21.70 * skx, 40.10 * sky, 16.20 * skx, 41.90 * sky);
		c.curveTo(14.10 * skx, 42.50 * sky, 12.00 * skx, 42.70 * sky, 9.90 * skx, 43.10 * sky);
		c.lineTo(10.40* skx,43.30* sky);
		c.arcTo(43.90 * skx, 43.90 * sky, 0, 0, 0, 24.70* skx, 45.80* sky);
		c.arcTo(27.70 * skx, 27.70 * sky, 0, 0, 0, 38.30* skx, 42.80* sky);
		c.arcTo(24.20 * skx, 24.20 * sky, 0, 0, 0, 50.30* skx, 28.40* sky);
		c.arcTo(34.20 * skx, 34.20 * sky, 0, 0, 0, 52.30* skx, 18.40* sky);
		c.curveTo(52.40 * skx, 16.30 * sky, 53.20 * skx, 15.60 * sky, 54.80 * skx, 14.90 * sky);
		c.arcTo(18.30 * skx, 18.30 * sky, 0, 0, 0, 57.80* skx, 13.10* sky);
		c.lineTo(57.80* skx,12.80 * sky);
		c.lineTo(54.20* skx,12.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(47.60 * skx, 10.50* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 45.20* skx, 13.00* sky);
		c.arcTo(2.50 * skx, 2.50 * sky, 0, 0, 1, 42.70* skx, 10.50* sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 1, 45.20* skx, 8.10* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 1, 47.60* skx, 10.50* sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m6b85448df0cc0b9078017a002a8ce4b', m6b85448df0cc0b9078017a002a8ce4b);
	m6b85448df0cc0b9078017a002a8ce4b.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function me86f8d7858373d71be3b0fae5877331() {
		mxActor.call(this);
	};
	mxUtils.extend(me86f8d7858373d71be3b0fae5877331, mxActor);
	me86f8d7858373d71be3b0fae5877331.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 62;
		h1 = 63;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(24.80 * skx, 37.40* sky);
		c.lineTo(24.00* skx,36.50* sky);
		c.lineTo(15.80* skx,40.50* sky);
		c.curveTo(14.60 * skx, 41.00 * sky, 13.20 * skx, 41.40 * sky, 12.40 * skx, 42.30 * sky);
		c.curveTo(11.600000000000001 * skx, 43.199999999999996 * sky, 11.50 * skx, 44.70 * sky, 11.10 * skx, 45.90 * sky);
		c.lineTo(6.50* skx,60.70* sky);
		c.curveTo(6.40 * skx, 60.90 * sky, 6.40 * skx, 61.10 * sky, 6.30 * skx, 61.30 * sky);
		c.curveTo(6.199999999999999 * skx, 61.49999999999999 * sky, 5.40 * skx, 62.60 * sky, 4.60 * skx, 62.40 * sky);
		c.curveTo(3.799999999999999 * skx, 62.199999999999996 * sky, 3.60 * skx, 61.50 * sky, 3.90 * skx, 60.50 * sky);
		c.curveTo(4.199999999999999 * skx, 59.5 * sky, 4.80 * skx, 57.50 * sky, 5.30 * skx, 56.00 * sky);
		c.lineTo(9.80* skx,41.40* sky);
		c.arcTo(3.10 * skx, 3.10 * sky, 0, 0, 1, 11.20* skx, 39.80* sky);
		c.lineTo(22.00* skx,34.70* sky);
		c.lineTo(22.50* skx,34.50* sky);
		c.lineTo(21.60* skx,31.70* sky);
		c.arcTo(0.80 * skx, 0.80 * sky, 0, 0, 0, 21.00* skx, 31.30* sky);
		c.lineTo(9.80* skx,29.00* sky);
		c.curveTo(9.60 * skx, 28.90 * sky, 9.10 * skx, 29.20 * sky, 8.90 * skx, 29.50 * sky);
		c.curveTo(6.90 * skx, 32.60 * sky, 4.80 * skx, 35.70 * sky, 2.70 * skx, 38.80 * sky);
		c.lineTo(2.40* skx,39.30* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 1, 0.50* skx, 39.70* sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 1, 0.30* skx, 37.90* sky);
		c.curveTo(2.70 * skx, 34.20 * sky, 5.20 * skx, 30.60 * sky, 7.60 * skx, 27.00 * sky);
		c.arcTo(1.40 * skx, 1.40 * sky, 0, 0, 1, 9.40* skx, 26.40* sky);
		c.lineTo(20.70* skx,28.60* sky);
		c.lineTo(21.20 * skx,28.60* sky);
		c.lineTo(21.50* skx,25.90* sky);
		c.lineTo(13.10* skx,24.10* sky);
		c.curveTo(9.80 * skx, 23.30 * sky, 10.50 * skx, 24.00 * sky, 9.30 * skx, 20.80 * sky);
		c.lineTo(5.30* skx,9.80* sky);
		c.lineTo(5.00* skx,9.00* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 1, 5.80* skx, 7.60* sky);
		c.arcTo(3.40 * skx, 3.40 * sky, 0, 0, 1, 7.20* skx, 8.10* sky);
		c.curveTo(7.50 * skx, 8.20 * sky, 7.50 * skx, 8.60 * sky, 7.60 * skx, 8.90 * sky);
		c.curveTo(9.10 * skx, 12.90 * sky, 10.50 * skx, 16.80 * sky, 11.90 * skx, 20.70 * sky);
		c.arcTo(1.20 * skx, 1.20 * sky, 0, 0, 0, 12.90* skx, 21.60* sky);
		c.lineTo(21.70* skx,23.60* sky);
		c.arcTo(1.30 * skx, 1.30 * sky, 0, 0, 0, 23.10* skx, 23.10* sky);
		c.arcTo(17.10 * skx, 17.10 * sky, 0, 0, 1, 25.10* skx, 21.30* sky);
		c.curveTo(20.70 * skx, 18.70 * sky, 20.70 * skx, 14.80 * sky, 22.00 * skx, 10.50 * sky);
		c.lineTo(18.90* skx,10.10* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 17.50* skx, 9.10* sky);
		c.curveTo(16.30 * skx, 6.70 * sky, 15.10 * skx, 4.40 * sky, 14.00 * skx, 2.00 * sky);
		c.curveTo(13.60 * skx, 1.20 * sky, 13.70 * skx, 0.50 * sky, 14.40 * skx, 0.20 * sky);
		c.curveTo(15.100000000000001 * skx, -0.09999999999999998 * sky, 15.80 * skx, -0.00 * sky, 16.20 * skx, 1.00 * sky);
		c.curveTo(16.599999999999998 * skx, 2.0 * sky, 18.20 * skx, 5.00 * sky, 19.30 * skx, 6.90 * sky);
		c.curveTo(19.40 * skx, 7.30 * sky, 19.90 * skx, 7.50 * sky, 20.20 * skx, 7.70 * sky);
		c.lineTo(21.00 * skx,7.70* sky);
		c.curveTo(23.50 * skx, 8.00 * sky, 23.50 * skx, 8.00 * sky, 25.00 * skx, 6.10 * sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 0, 25.40* skx, 5.30* sky);
		c.arcTo(7.00 * skx, 7.00 * sky, 0, 0, 1, 28.70* skx, 1.20* sky);
		c.lineTo(28.70* skx,4.00 * sky);
		c.lineTo(33.70 * skx,4.00* sky);
		c.lineTo(33.70* skx,1.30 * sky);
		c.lineTo(34.40* skx,1.70* sky);
		c.arcTo(6.40 * skx, 6.40 * sky, 0, 0, 1, 36.80* skx, 4.90* sky);
		c.arcTo(6.90 * skx, 6.90 * sky, 0, 0, 0, 38.50* skx, 7.60* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 0, 40.00* skx, 8.20* sky);
		c.curveTo(42.30 * skx, 8.20 * sky, 43.50 * skx, 7.00 * sky, 44.30 * skx, 4.90 * sky);
		c.arcTo(28.10 * skx, 28.10 * sky, 0, 0, 1, 46.20* skx, 1.00* sky);
		c.curveTo(46.60 * skx, 0.10 * sky, 47.30 * skx, -0.20 * sky, 48.00 * skx, 0.20 * sky);
		c.curveTo(48.7 * skx, 0.6000000000000001 * sky, 48.90 * skx, 1.20 * sky, 48.40 * skx, 2.10 * sky);
		c.curveTo(47.9 * skx, 3.0 * sky, 46.10 * skx, 6.80 * sky, 44.90 * skx, 9.10 * sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 43.60* skx, 10.00* sky);
		c.arcTo(26.10 * skx, 26.10 * sky, 0, 0, 1, 40.40* skx, 10.60* sky);
		c.curveTo(41.80 * skx, 14.90 * sky, 41.60 * skx, 18.70 * sky, 37.40 * skx, 21.30 * sky);
		c.lineTo(39.60* skx,23.40* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 0, 40.30* skx, 23.60* sky);
		c.lineTo(49.80* skx,21.50* sky);
		c.curveTo(50.10 * skx, 21.50 * sky, 50.40 * skx, 21.00 * sky, 50.50 * skx, 20.70 * sky);
		c.lineTo(54.80* skx,8.90* sky);
		c.lineTo(55.10* skx,8.20* sky);
		c.curveTo(55.50 * skx, 7.60 * sky, 56.00 * skx, 7.30 * sky, 56.60 * skx, 7.60 * sky);
		c.curveTo(57.2 * skx, 7.8999999999999995 * sky, 57.60 * skx, 8.40 * sky, 57.40 * skx, 9.00 * sky);
		c.lineTo(56.50* skx,11.60* sky);
		c.curveTo(55.10 * skx, 15.20 * sky, 53.80 * skx, 18.90 * sky, 52.50 * skx, 22.50 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 51.00* skx, 23.80* sky);
		c.lineTo(41.90* skx,25.80* sky);
		c.lineTo(40.90* skx,26.10* sky);
		c.lineTo(41.30* skx,28.70* sky);
		c.lineTo(46.30* skx,27.70* sky);
		c.lineTo(53.00* skx,26.40* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 55.00* skx, 27.10* sky);
		c.curveTo(57.30 * skx, 30.70 * sky, 59.70 * skx, 34.20 * sky, 62.00 * skx, 37.70 * sky);
		c.curveTo(62.50 * skx, 38.40 * sky, 62.60 * skx, 39.00 * sky, 62.00 * skx, 39.60 * sky);
		c.curveTo(61.4 * skx, 40.2 * sky, 60.60 * skx, 40.10 * sky, 60.00 * skx, 39.20 * sky);
		c.curveTo(59.4 * skx, 38.300000000000004 * sky, 57.50 * skx, 35.50 * sky, 56.30 * skx, 33.60 * sky);
		c.curveTo(55.099999999999994 * skx, 31.700000000000003 * sky, 54.40 * skx, 30.80 * sky, 53.50 * skx, 29.40 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 52.40* skx, 29.00* sky);
		c.lineTo(41.70* skx,31.20* sky);
		c.curveTo(41.10 * skx, 31.30 * sky, 40.80 * skx, 31.50 * sky, 40.70 * skx, 32.10 * sky);
		c.curveTo(40.60000000000001 * skx, 32.7 * sky, 40.20 * skx, 33.60 * sky, 39.90 * skx, 34.50 * sky);
		c.lineTo(48.40* skx,38.50* sky);
		c.arcTo(28.00 * skx, 28.00 * sky, 0, 0, 1, 51.40* skx, 40.00* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 52.40* skx, 41.10* sky);
		c.curveTo(54.50 * skx, 47.60 * sky, 56.50 * skx, 54.10 * sky, 58.60 * skx, 60.60 * sky);
		c.curveTo(58.80 * skx, 61.50 * sky, 58.50 * skx, 62.20 * sky, 57.80 * skx, 62.40 * sky);
		c.curveTo(57.099999999999994 * skx, 62.599999999999994 * sky, 56.40 * skx, 62.20 * sky, 56.10 * skx, 61.20 * sky);
		c.curveTo(54.20 * skx, 55.20 * sky, 52.30 * skx, 49.20 * sky, 50.50 * skx, 43.20 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 0, 49.10* skx, 41.60* sky);
		c.lineTo(39.10* skx,36.90* sky);
		c.lineTo(38.40* skx,36.50* sky);
		c.lineTo(37.80* skx,37.20* sky);
		c.arcTo(24.90 * skx, 24.90 * sky, 0, 0, 1, 41.60* skx, 40.60* sky);
		c.arcTo(9.80 * skx, 9.80 * sky, 0, 0, 1, 43.60* skx, 48.70* sky);
		c.arcTo(17.70 * skx, 17.70 * sky, 0, 0, 1, 38.30* skx, 59.30* sky);
		c.curveTo(33.80 * skx, 63.60 * sky, 28.60 * skx, 63.60 * sky, 24.20 * skx, 59.30 * sky);
		c.arcTo(16.90 * skx, 16.90 * sky, 0, 0, 1, 18.80* skx, 45.70* sky);
		c.arcTo(9.20 * skx, 9.20 * sky, 0, 0, 1, 24.10* skx, 37.80* sky);
		c.close();
		c.moveTo(31.00 * skx, 38.50* sky);
		c.lineTo(31.00* skx,38.70 * sky);
		c.arcTo(12.50 * skx, 12.50 * sky, 0, 0, 0, 25.30* skx, 40.00* sky);
		c.arcTo(6.60 * skx, 6.60 * sky, 0, 0, 0, 21.40* skx, 45.20* sky);
		c.arcTo(14.00 * skx, 14.00 * sky, 0, 0, 0, 26.20* skx, 57.70* sky);
		c.curveTo(29.40 * skx, 60.80 * sky, 33.00 * skx, 60.70 * sky, 36.30 * skx, 57.70 * sky);
		c.arcTo(15.00 * skx, 15.00 * sky, 0, 0, 0, 41.20* skx, 46.40* sky);
		c.arcTo(6.80 * skx, 6.80 * sky, 0, 0, 0, 36.40* skx, 39.70* sky);
		c.arcTo(47.10 * skx, 47.10 * sky, 0, 0, 0, 31.00* skx, 38.50* sky);
		c.close();
		c.moveTo(31.40 * skx, 22.30* sky);
		c.arcTo(40.40 * skx, 40.40 * sky, 0, 0, 0, 27.40* skx, 23.10* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 0, 24.00* skx, 26.40* sky);
		c.arcTo(9.40 * skx, 9.40 * sky, 0, 0, 0, 27.20* skx, 36.10* sky);
		c.arcTo(3.20 * skx, 3.20 * sky, 0, 0, 0, 28.60* skx, 36.40* sky);
		c.arcTo(45.10 * skx, 45.10 * sky, 0, 0, 0, 33.80* skx, 36.40* sky);
		c.arcTo(2.90 * skx, 2.90 * sky, 0, 0, 0, 35.20* skx, 36.10* sky);
		c.arcTo(8.90 * skx, 8.90 * sky, 0, 0, 0, 38.50* skx, 27.10* sky);
		c.arcTo(4.40 * skx, 4.40 * sky, 0, 0, 0, 35.40* skx, 23.30* sky);
		c.arcTo(29.20 * skx, 29.20 * sky, 0, 0, 0, 31.40* skx, 22.30* sky);
		c.close();
		c.moveTo(31.00 * skx, 20.10* sky);
		c.lineTo(33.80* skx,19.80* sky);
		c.lineTo(35.30* skx,19.40* sky);
		c.curveTo(37.70 * skx, 18.70 * sky, 38.70 * skx, 17.10 * sky, 38.70 * skx, 14.60 * sky);
		c.arcTo(8.50 * skx, 8.50 * sky, 0, 0, 0, 32.40* skx, 6.50* sky);
		c.arcTo(4.90 * skx, 4.90 * sky, 0, 0, 0, 30.00* skx, 6.50* sky);
		c.arcTo(8.00 * skx, 8.00 * sky, 0, 0, 0, 23.80* skx, 13.20* sky);
		c.curveTo(23.20 * skx, 16.80 * sky, 24.60 * skx, 18.90 * sky, 28.10 * skx, 19.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('me86f8d7858373d71be3b0fae5877331', me86f8d7858373d71be3b0fae5877331);
	me86f8d7858373d71be3b0fae5877331.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
	function m81db73223718e20c611fc61c4055b52() {
		mxActor.call(this);
	};
	mxUtils.extend(m81db73223718e20c611fc61c4055b52, mxActor);
	m81db73223718e20c611fc61c4055b52.prototype.redrawPath = function (c, x, y, w, h) {
		w1 = 62;
		h1 = 63;
		skx = w / w1;
		sky = h / h1;
		c.begin();
		c.moveTo(28.60 * skx, 0.10* sky);
		c.lineTo(28.60* skx,3.80 * sky);
		c.lineTo(33.30 * skx,3.80* sky);
		c.lineTo(33.30* skx,0.20 * sky);
		c.lineTo(33.50 * skx,0.20* sky);
		c.arcTo(9.50 * skx, 9.50 * sky, 0, 0, 1, 35.50* skx, 2.20* sky);
		c.curveTo(36.40 * skx, 3.40 * sky, 37.00 * skx, 4.70 * sky, 37.80 * skx, 6.00 * sky);
		c.curveTo(38.599999999999994 * skx, 7.3 * sky, 38.20 * skx, 6.60 * sky, 38.50 * skx, 6.60 * sky);
		c.lineTo(42.70* skx,7.20* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 44.00* skx, 6.50* sky);
		c.lineTo(47.80* skx,0.80* sky);
		c.quadTo(48.60 * skx, -0.40* sky, 49.60 * skx, 0.20 * sky);
		c.curveTo(50.20 * skx, 0.60 * sky, 50.30 * skx, 1.30 * sky, 49.80 * skx, 2.10 * sky);
		c.lineTo(45.30* skx,8.80* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 43.50* skx, 9.60* sky);
		c.lineTo(39.10* skx,9.00* sky);
		c.curveTo(40.30 * skx, 11.60 * sky, 41.00 * skx, 14.10 * sky, 40.20 * skx, 16.70 * sky);
		c.curveTo(39.400000000000006 * skx, 19.299999999999997 * sky, 37.00 * skx, 20.70 * sky, 34.10 * skx, 21.40 * sky);
		c.lineTo(34.80* skx,21.60* sky);
		c.curveTo(39.30 * skx, 23.00 * sky, 41.40 * skx, 26.30 * sky, 40.30 * skx, 31.00 * sky);
		c.arcTo(10.00 * skx, 10.00 * sky, 0, 0, 1, 34.20* skx, 38.30* sky);
		c.lineTo(33.80* skx,38.50* sky);
		c.lineTo(33.80 * skx,38.50* sky);
		c.curveTo(35.10 * skx, 38.90 * sky, 36.30 * skx, 39.20 * sky, 37.50 * skx, 39.70 * sky);
		c.curveTo(41.60 * skx, 41.40 * sky, 43.50 * skx, 45.10 * sky, 42.80 * skx, 49.50 * sky);
		c.arcTo(16.30 * skx, 16.30 * sky, 0, 0, 1, 36.50* skx, 60.40* sky);
		c.curveTo(32.90 * skx, 63.10 * sky, 28.80 * skx, 63.20 * sky, 25.30 * skx, 60.40 * sky);
		c.arcTo(15.80 * skx, 15.80 * sky, 0, 0, 1, 19.00* skx, 47.70* sky);
		c.arcTo(8.20 * skx, 8.20 * sky, 0, 0, 1, 24.90* skx, 39.40* sky);
		c.lineTo(28.10* skx,38.50* sky);
		c.lineTo(27.20* skx,38.10* sky);
		c.arcTo(10.00 * skx, 10.00 * sky, 0, 0, 1, 21.60* skx, 26.80* sky);
		c.arcTo(6.70 * skx, 6.70 * sky, 0, 0, 1, 26.50* skx, 21.80* sky);
		c.lineTo(27.80* skx,21.40* sky);
		c.curveTo(24.90 * skx, 20.70 * sky, 22.60 * skx, 19.60 * sky, 21.70 * skx, 16.80 * sky);
		c.curveTo(20.799999999999997 * skx, 14.0 * sky, 21.50 * skx, 11.60 * sky, 22.80 * skx, 9.00 * sky);
		c.curveTo(21.30 * skx, 9.20 * sky, 19.80 * skx, 9.30 * sky, 18.40 * skx, 9.60 * sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 16.50* skx, 8.70* sky);
		c.lineTo(12.00* skx,2.00* sky);
		c.curveTo(11.60 * skx, 1.40 * sky, 11.50 * skx, 0.80 * sky, 12.00 * skx, 0.40 * sky);
		c.arcTo(2.30 * skx, 2.30 * sky, 0, 0, 1, 13.40* skx, 0.20* sky);
		c.curveTo(13.70 * skx, 0.20 * sky, 13.90 * skx, 0.60 * sky, 14.10 * skx, 0.90 * sky);
		c.curveTo(15.40 * skx, 2.80 * sky, 16.70 * skx, 4.60 * sky, 17.90 * skx, 6.50 * sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 19.10* skx, 7.10* sky);
		c.lineTo(23.30* skx,6.60* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 24.10* skx, 5.80* sky);
		c.arcTo(11.60 * skx, 11.60 * sky, 0, 0, 1, 28.00* skx, 0.40* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(39.50 * skx, 37.10* sky);
		c.curveTo(40.10 * skx, 35.80 * sky, 41.00 * skx, 35.70 * sky, 42.20 * skx, 36.30 * sky);
		c.arcTo(31.80 * skx, 31.80 * sky, 0, 0, 1, 45.40* skx, 37.90* sky);
		c.lineTo(50.80* skx,41.40* sky);
		c.arcTo(3.60 * skx, 3.60 * sky, 0, 0, 1, 52.30* skx, 43.70* sky);
		c.curveTo(53.70 * skx, 48.90 * sky, 55.10 * skx, 54.20 * sky, 56.60 * skx, 59.50 * sky);
		c.curveTo(56.90 * skx, 60.70 * sky, 56.50 * skx, 61.60 * sky, 55.50 * skx, 61.90 * sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 53.00* skx, 60.50* sky);
		c.curveTo(52.40 * skx, 58.50 * sky, 51.80 * skx, 56.40 * sky, 51.30 * skx, 54.30 * sky);
		c.curveTo(50.8 * skx, 52.199999999999996 * sky, 49.60 * skx, 48.20 * sky, 48.70 * skx, 45.20 * sky);
		c.arcTo(2.60 * skx, 2.60 * sky, 0, 0, 0, 47.80* skx, 44.00* sky);
		c.arcTo(7.80 * skx, 7.80 * sky, 0, 0, 0, 46.30* skx, 43.00* sky);
		c.arcTo(14.10 * skx, 14.10 * sky, 0, 0, 1, 42.30* skx, 39.70* sky);
		c.arcTo(17.60 * skx, 17.60 * sky, 0, 0, 0, 39.50* skx, 37.10* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(22.60 * skx, 37.20* sky);
		c.arcTo(18.50 * skx, 18.50 * sky, 0, 0, 0, 18.10* skx, 41.00* sky);
		c.arcTo(23.30 * skx, 23.30 * sky, 0, 0, 1, 14.10* skx, 43.70* sky);
		c.arcTo(2.40 * skx, 2.40 * sky, 0, 0, 0, 13.20* skx, 45.00* sky);
		c.curveTo(11.70 * skx, 50.00 * sky, 10.40 * skx, 54.90 * sky, 9.00 * skx, 59.80 * sky);
		c.arcTo(3.70 * skx, 3.70 * sky, 0, 0, 1, 8.50* skx, 60.90* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 6.20* skx, 61.60* sky);
		c.arcTo(2.10 * skx, 2.10 * sky, 0, 0, 1, 5.30* skx, 59.20* sky);
		c.curveTo(6.20 * skx, 55.90 * sky, 7.20 * skx, 52.60 * sky, 8.10 * skx, 49.20 * sky);
		c.curveTo(9.0 * skx, 45.800000000000004 * sky, 9.40 * skx, 44.80 * sky, 10.10 * skx, 42.60 * sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 10.80* skx, 41.60* sky);
		c.arcTo(83.30 * skx, 83.30 * sky, 0, 0, 1, 18.10* skx, 36.80* sky);
		c.arcTo(6.30 * skx, 6.30 * sky, 0, 0, 1, 21.20* skx, 35.90* sky);
		c.curveTo(21.60 * skx, 35.90 * sky, 22.00 * skx, 36.70 * sky, 22.60 * skx, 37.20 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(40.20 * skx, 20.90* sky);
		c.lineTo(42.60* skx,20.60* sky);
		c.lineTo(49.00* skx,20.00* sky);
		c.arcTo(1.10 * skx, 1.10 * sky, 0, 0, 0, 49.60* skx, 19.30* sky);
		c.curveTo(51.00 * skx, 16.00 * sky, 52.30 * skx, 12.70 * sky, 53.60 * skx, 9.40 * sky);
		c.curveTo(54.20 * skx, 8.10 * sky, 54.90 * skx, 7.70 * sky, 56.10 * skx, 8.20 * sky);
		c.curveTo(57.300000000000004 * skx, 8.7 * sky, 57.50 * skx, 9.50 * sky, 57.00 * skx, 10.80 * sky);
		c.curveTo(55.50 * skx, 14.60 * sky, 53.90 * skx, 18.50 * sky, 52.40 * skx, 22.40 * sky);
		c.arcTo(2.20 * skx, 2.20 * sky, 0, 0, 1, 50.40* skx, 23.80* sky);
		c.lineTo(43.00* skx,24.50* sky);
		c.curveTo(42.40 * skx, 24.50 * sky, 42.10 * skx, 24.40 * sky, 41.90 * skx, 23.80 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(42.10 * skx, 33.20* sky);
		c.lineTo(42.80* skx,29.30* sky);
		c.lineTo(51.00* skx,27.60* sky);
		c.lineTo(54.20* skx,26.90* sky);
		c.arcTo(2.00 * skx, 2.00 * sky, 0, 0, 1, 56.60* skx, 28.00* sky);
		c.lineTo(61.10* skx,34.80* sky);
		c.curveTo(62.30 * skx, 36.50 * sky, 61.10 * skx, 37.70 * sky, 59.50 * skx, 37.90 * sky);
		c.curveTo(57.9 * skx, 38.099999999999994 * sky, 58.30 * skx, 37.50 * sky, 58.00 * skx, 37.10 * sky);
		c.curveTo(57.7 * skx, 36.7 * sky, 55.20 * skx, 33.40 * sky, 53.90 * skx, 31.50 * sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 52.90* skx, 31.10* sky);
		c.lineTo(43.20* skx,33.20* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(18.80 * skx, 29.30* sky);
		c.lineTo(19.50* skx,33.20* sky);
		c.lineTo(17.60* skx,33.00* sky);
		c.lineTo(8.60* skx,31.10* sky);
		c.arcTo(0.90 * skx, 0.90 * sky, 0, 0, 0, 7.50* skx, 31.50* sky);
		c.lineTo(3.40* skx,37.10* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 0.80* skx, 37.50* sky);
		c.arcTo(1.70 * skx, 1.70 * sky, 0, 0, 1, 0.30* skx, 35.10* sky);
		c.curveTo(1.60 * skx, 33.10 * sky, 2.90 * skx, 31.10 * sky, 4.30 * skx, 29.10 * sky);
		c.arcTo(6.10 * skx, 6.10 * sky, 0, 0, 1, 5.00* skx, 28.10* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 7.30* skx, 26.90* sky);
		c.close();
		c.fillAndStroke();
		c.end();
		c.begin();
		c.moveTo(22.00 * skx, 20.80* sky);
		c.lineTo(20.20* skx,23.90* sky);
		c.arcTo(0.70 * skx, 0.70 * sky, 0, 0, 1, 19.60* skx, 24.20* sky);
		c.lineTo(11.60* skx,23.60* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 10.10* skx, 22.40* sky);
		c.lineTo(5.30* skx,10.40* sky);
		c.arcTo(1.80 * skx, 1.80 * sky, 0, 0, 1, 6.30* skx, 7.90* sky);
		c.arcTo(1.60 * skx, 1.60 * sky, 0, 0, 1, 8.60* skx, 9.00* sky);
		c.lineTo(12.80* skx,19.10* sky);
		c.curveTo(13.00 * skx, 19.80 * sky, 13.40 * skx, 20.00 * sky, 14.10 * skx, 20.10 * sky);
		c.curveTo(16.50 * skx, 20.20 * sky, 18.90 * skx, 20.50 * sky, 21.30 * skx, 20.70 * sky);
		c.close();
		c.fillAndStroke();
		c.end();
	};
	mxCellRenderer.registerShape('m81db73223718e20c611fc61c4055b52', m81db73223718e20c611fc61c4055b52);
	m81db73223718e20c611fc61c4055b52.prototype.constraints = [
		new mxConnectionConstraint(new mxPoint(0,0), false),
		new mxConnectionConstraint(new mxPoint(0.5,0), false),
		new mxConnectionConstraint(new mxPoint(1,0), false),
		new mxConnectionConstraint(new mxPoint(0,0.5), false),
		new mxConnectionConstraint(new mxPoint(0,1), false),
		new mxConnectionConstraint(new mxPoint(0.5,1), false),
		new mxConnectionConstraint(new mxPoint(1,0.5), false),
		new mxConnectionConstraint(new mxPoint(1,1), false),
	];
})();